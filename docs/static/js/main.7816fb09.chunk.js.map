{"version":3,"sources":["Main.elm","serviceWorker.js","votes.js","index.js"],"names":["scope","F","arity","fun","wrapper","a","f","F2","b","F3","c","F4","d","F5","e","A2","A3","A4","A5","_JsArray_initialize","size","offset","func","result","Array","i","_JsArray_initializeFromList","max","ls","length","_Utils_Tuple2","_Debug_crash","identifier","Error","_Utils_eq","x","y","pair","stack","isEqual","_Utils_eqHelp","pop","depth","push","key","$","$elm$core$Dict$toList","_Utils_cmp","ord","_Utils_compare","n","$elm$core$Basics$LT","$elm$core$Basics$GT","$elm$core$Basics$EQ","_Utils_Tuple3","_Utils_ap","xs","ys","root","_List_Cons","curr","_List_Nil","hd","tl","_List_cons","_List_fromArray","arr","out","_List_toArray","_Basics_modBy","modulus","answer","_Basics_ceiling","Math","ceil","_Basics_floor","floor","_Basics_round","round","_Basics_log","log","_String_cons","chr","str","_String_split","sep","split","_String_join","strs","join","_String_slice","start","end","slice","_Json_decodePrim","decoder","value","_Json_expecting","$elm$core$Result$Ok","isFinite","_Json_decodeFloat","_Json_decodeString","_Json_wrap","String","_Json_decodeField","field","_Json_andThen","callback","h","_Json_run","_Json_runHelp","_Json_unwrap","_Json_isArray","_Json_runArrayDecoder","_Json_toElmArray","$elm$core$Result$isOk","$elm$core$Result$Err","$elm$json$Json$Decode$Field","index","$elm$json$Json$Decode$Index","keyValuePairs","hasOwnProperty","$elm$core$List$reverse","decoders","g","errors","temp","$elm$json$Json$Decode$OneOf","$elm$json$Json$Decode$Failure","toElmValue","len","array","isArray","FileList","$elm$core$Array$initialize","type","_Json_equality","_Json_listEquality","aDecoders","bDecoders","_Scheduler_succeed","_Scheduler_binding","_Scheduler_andThen","task","_Scheduler_guid","_Scheduler_rawSpawn","proc","_Scheduler_enqueue","_Scheduler_working","_Scheduler_queue","shift","_Scheduler_step","rootTag","newRoot","_Platform_effectManagers","_Platform_instantiateManager","info","sendToApp","router","undefined","onEffects","onSelfMsg","cmdMap","subMap","loop","state","msg","j","_Platform_sendToApp","_Platform_batch","list","m","_VirtualDom_divertHrefToApp","_Platform_effectsQueue","_Platform_effectsActive","_Platform_enqueueEffects","managers","cmdBag","subBag","p","q","r","fx","_Platform_dispatchEffects","effectsDict","home","_Platform_gatherEffects","isCmd","bag","taggers","k","effect","t","s","l","_Platform_toEffect","newEffect","effects","_Platform_insert","o","_VirtualDom_doc","document","_VirtualDom_appendChild","parent","child","appendChild","_VirtualDom_text","string","_VirtualDom_nodeNS","namespace","tag","factList","kidList","kids","descendantsCount","kid","_VirtualDom_organizeFacts","_VirtualDom_node","_VirtualDom_keyedNodeNS","_VirtualDom_passiveSupported","_VirtualDom_on","handler","_VirtualDom_attribute","facts","entry","subFacts","_VirtualDom_addClass","object","newClass","classes","_VirtualDom_render","vNode","eventNode","createTextNode","subNode","tagger","subEventRoot","domNode","elm_event_node_ref","_VirtualDom_applyFacts","createElementNS","createElement","addEventListener","_VirtualDom_applyStyles","_VirtualDom_applyEvents","_VirtualDom_applyAttrs","_VirtualDom_applyAttrsNS","styles","domNodeStyle","style","attrs","setAttribute","removeAttribute","nsAttrs","setAttributeNS","removeAttributeNS","events","allCallbacks","elmFs","newHandler","oldCallback","removeEventListener","_VirtualDom_makeCallback","passive","$elm$virtual_dom$VirtualDom$toHandlerInt","window","Object","defineProperty","get","initialHandler","event","message","stopPropagation","_","currentEventNode","X","preventDefault","_VirtualDom_equalEvents","_VirtualDom_pushPatch","patches","data","patch","u","_VirtualDom_diffHelp","xType","yType","keyedNode","keyedKids","_VirtualDom_dekey","xRefs","yRefs","same","subPatches","xTaggers","yTaggers","nesting","xSubNode","ySubNode","as","bs","_VirtualDom_pairwiseRefEqual","_VirtualDom_diffNodes","_VirtualDom_diffKids","_VirtualDom_diffKeyedKids","factsDiff","_VirtualDom_diffFacts","diffKids","category","diff","xKey","xValue","yValue","subDiff","yKey","xParent","yParent","xKids","yKids","xLen","yLen","v","minLen","xKid","rootIndex","localPatches","changes","inserts","xIndex","yIndex","xNode","yNode","newMatch","oldMatch","xNext","yNext","xNextKey","xNextNode","yNextKey","yNextNode","_VirtualDom_insertNode","_VirtualDom_removeNode","endInserts","w","_VirtualDom_POSTFIX","vnode","A","z","_VirtualDom_applyPatches","rootDomNode","oldVirtualNode","_VirtualDom_addDomNodes","_VirtualDom_addDomNodesHelp","low","high","patchType","vKids","childNodes","vKid","nextLow","_VirtualDom_applyPatchesHelp","localDomNode","newNode","_VirtualDom_applyPatch","parentNode","replaceChild","_VirtualDom_applyPatchRedraw","replaceData","removeChild","theEnd","insertBefore","frag","createDocumentFragment","_VirtualDom_applyPatchReorderEndInsertsHelp","insert","node","_VirtualDom_applyPatchReorder","_Browser_element","impl","flagDecoder","debugMetadata","args","init","update","subscriptions","stepperBuilder","model","stepper","ports","manager","_Platform_setupEffects","viewMetadata","_Platform_initialize","aU","a0","a_","initialModel","view","a1","currNode","_VirtualDom_virtualize","nodeType","textContent","attrList","attributes","attr","name","tagName","toLowerCase","draw","updateIfNeeded","_Browser_requestAnimationFrame","nextModel","isSync","_Browser_makeAnimator","nextNode","_VirtualDom_diff","cancelAnimationFrame","requestAnimationFrame","setTimeout","$elm$core$Basics$always","$elm$core$List$cons","$elm$core$Dict$foldr","acc","left","$temp$func","$temp$acc","dict","$elm$core$Maybe$Just","$elm$core$Maybe$Nothing","$elm$core$String$join","chunks","$elm$core$String$split","$elm$core$List$foldl","$elm$core$List$length","_v0","$elm$core$Array$Array_elm_builtin","$elm$core$Elm$JsArray$empty","$elm$core$Basics$ceiling","$elm$core$Basics$logBase","base","number","$elm$core$Array$shiftStep","$elm$core$Array$empty","$elm$core$Elm$JsArray$initialize","$elm$core$Basics$floor","$elm$core$Elm$JsArray$length","$elm$core$Basics$max","$elm$core$Elm$JsArray$initializeFromList","$elm$core$Array$compressNodes","nodes","remainingNodes","newAcc","$elm$core$Array$treeFromBuilder","nodeList","nodeListSize","newNodeSize","$elm$core$Array$builderToArray","reverseNodeList","builder","treeLen","correctNodeList","tree","$elm$core$Array$initializeHelp","fn","fromIndex","tail","leaf","tailLen","$elm$json$Json$Decode$andThen","$elm$json$Json$Decode$succeed","$elm$core$String$slice","$elm$core$Task$succeed","$elm$core$Task$init","$elm$core$List$foldrHelper","ctr","r1","r2","r3","r4","$elm$core$List$foldr","$elm$core$List$map","$elm$core$Task$andThen","$elm$core$Task$map","taskA","$elm$core$Task$map2","taskB","$elm$core$Platform$sendToApp","$elm$core$Task$spawnCmd","_Scheduler_spawn","commands","tasks","convert","exports","$elm$browser$Browser$element","$elm$json$Json$Decode$field","$elm$json$Json$Decode$float","$BrianHicks$elm_csv$Csv$Decode$NoFieldNames","$BrianHicks$elm_csv$Csv$Decode$ParsingError","$elm$core$Result$andThen","$BrianHicks$elm_csv$Csv$Decode$DecodingErrors","$BrianHicks$elm_csv$Csv$Decode$OnlyColumn_","$elm$core$Basics$composeL","$BrianHicks$elm_csv$Csv$Decode$NoFieldNamesOnFirstRow","$elm$core$Dict$RBEmpty_elm_builtin","$elm$core$Dict$empty","$elm$core$Dict$RBNode_elm_builtin","$elm$core$Dict$balance","color","right","_v6","lRight","rK","rV","rLeft","rRight","$elm$core$Basics$compare","$elm$core$Dict$insertHelp","nColor","nKey","nValue","nLeft","nRight","$elm$core$Dict$insert","$elm$core$String$trim","trim","$BrianHicks$elm_csv$Csv$Decode$getFieldNames","headers","rows","fromList","names","_v2","rest","$elm$core$Result$map","ra","$elm$core$Result$mapError","$BrianHicks$elm_csv$Csv$Decode$applyDecoder","fieldNames","allRows","decode","defaultLocation","_v1","resolvedNames","firstRowNumber","row","soFar","rowNum","_v3","err","val","$BrianHicks$elm_csv$Csv$Parser$AdditionalCharactersAfterClosingQuote","$BrianHicks$elm_csv$Csv$Parser$SourceEndedWithoutClosingQuote","$elm$core$String$cons","$BrianHicks$elm_csv$Csv$Parser$parse","config","source","finalLength","parseQuotedField","isFieldSeparator","startOffset","endOffset","segment","next","newPos","parseComma","finalField","first","$temp$row","$temp$rows","problem","afterQuotedField","rowEnded","parseHelp","$temp$isFieldSeparator","parseSemicolon","_v4","_v5","fieldSeparator","aR","$BrianHicks$elm_csv$Csv$Decode$decodeCsv","$BrianHicks$elm_csv$Csv$Decode$decodeCustom","$author$project$Main$ConstituencyVoting","percentage","K","$BrianHicks$elm_csv$Csv$Decode$andThen","location","nextValue","$BrianHicks$elm_csv$Csv$Decode$column","col","$BrianHicks$elm_csv$Csv$Decode$Field","$BrianHicks$elm_csv$Csv$Decode$OnlyColumn","$elm$core$Dict$get","targetKey","$BrianHicks$elm_csv$Csv$Decode$locationToColumn","$BrianHicks$elm_csv$Csv$Decode$map","transform","$elm$core$Result$map2","rb","$BrianHicks$elm_csv$Csv$Decode$map2","decodeA","decodeB","$elm$core$String$replace","before","after","$BrianHicks$elm_csv$Csv$Decode$ColumnNotFound","$elm$core$List$drop","drop","$elm$core$List$head","$BrianHicks$elm_csv$Csv$Decode$string","colNum","_v7","$author$project$Main$decoder","total","code0","charCodeAt","code","$elm$core$String$toInt","$elm$core$Platform$Cmd$none","$elm$core$Result$withDefault","def","$elm$json$Json$Decode$list","$elm$core$Platform$Sub$none","$elm$json$Json$Decode$string","$author$project$Main$update","oldRecord","updatedFields","newRecord","_Utils_update","R","$elm$core$List$append","$elm$core$List$concat","lists","$elm$svg$Svg$Attributes$d","$elm$html$Html$div","$elm$svg$Svg$Attributes$fill","$elm$core$String$fromFloat","$elm$svg$Svg$Attributes$height","$elm$virtual_dom$VirtualDom$on","$elm$html$Html$Events$on","$elm$html$Html$Events$onMouseOver","$elm$svg$Svg$trustedNode","$elm$svg$Svg$path","$elm$core$Basics$round","$elm$svg$Svg$svg","$elm$html$Html$text","$elm$core$Basics$modBy","$rtfeldman$elm_hex$Hex$unsafeToDigit","num","unsafeToDigit","$rtfeldman$elm_hex$Hex$unsafePositiveToDigits","digits","$elm$svg$Svg$Attributes$viewBox","$elm$svg$Svg$Attributes$width","$elm$core$Maybe$withDefault","_default","maybe","Main","flags","assocs","votingData","aa","ab","pathFrom","coord","ac","ad","nextLevel","colour","topLevel","paths","feature","U","$author$project$Main$main","votesCsv","features","coordinates","_Platform_mergeExportsProd","obj","this","require","map","pcon15nm","geometry","innerLoop","console","Elm","navigator","registration"],"mappings":"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","file":"static/js/main.7816fb09.chunk.js","sourcesContent":["(function(scope){\n'use strict';\n\nfunction F(arity, fun, wrapper) {\n  wrapper.a = arity;\n  wrapper.f = fun;\n  return wrapper;\n}\n\nfunction F2(fun) {\n  return F(2, fun, function(a) { return function(b) { return fun(a,b); }; })\n}\nfunction F3(fun) {\n  return F(3, fun, function(a) {\n    return function(b) { return function(c) { return fun(a, b, c); }; };\n  });\n}\nfunction F4(fun) {\n  return F(4, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return fun(a, b, c, d); }; }; };\n  });\n}\nfunction F5(fun) {\n  return F(5, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return function(e) { return fun(a, b, c, d, e); }; }; }; };\n  });\n}\nfunction F6(fun) {\n  return F(6, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return function(e) { return function(f) {\n    return fun(a, b, c, d, e, f); }; }; }; }; };\n  });\n}\nfunction F7(fun) {\n  return F(7, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return function(e) { return function(f) {\n    return function(g) { return fun(a, b, c, d, e, f, g); }; }; }; }; }; };\n  });\n}\nfunction F8(fun) {\n  return F(8, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return function(e) { return function(f) {\n    return function(g) { return function(h) {\n    return fun(a, b, c, d, e, f, g, h); }; }; }; }; }; }; };\n  });\n}\nfunction F9(fun) {\n  return F(9, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return function(e) { return function(f) {\n    return function(g) { return function(h) { return function(i) {\n    return fun(a, b, c, d, e, f, g, h, i); }; }; }; }; }; }; }; };\n  });\n}\n\nfunction A2(fun, a, b) {\n  return fun.a === 2 ? fun.f(a, b) : fun(a)(b);\n}\nfunction A3(fun, a, b, c) {\n  return fun.a === 3 ? fun.f(a, b, c) : fun(a)(b)(c);\n}\nfunction A4(fun, a, b, c, d) {\n  return fun.a === 4 ? fun.f(a, b, c, d) : fun(a)(b)(c)(d);\n}\nfunction A5(fun, a, b, c, d, e) {\n  return fun.a === 5 ? fun.f(a, b, c, d, e) : fun(a)(b)(c)(d)(e);\n}\nfunction A6(fun, a, b, c, d, e, f) {\n  return fun.a === 6 ? fun.f(a, b, c, d, e, f) : fun(a)(b)(c)(d)(e)(f);\n}\nfunction A7(fun, a, b, c, d, e, f, g) {\n  return fun.a === 7 ? fun.f(a, b, c, d, e, f, g) : fun(a)(b)(c)(d)(e)(f)(g);\n}\nfunction A8(fun, a, b, c, d, e, f, g, h) {\n  return fun.a === 8 ? fun.f(a, b, c, d, e, f, g, h) : fun(a)(b)(c)(d)(e)(f)(g)(h);\n}\nfunction A9(fun, a, b, c, d, e, f, g, h, i) {\n  return fun.a === 9 ? fun.f(a, b, c, d, e, f, g, h, i) : fun(a)(b)(c)(d)(e)(f)(g)(h)(i);\n}\n\n\n\n\nvar _JsArray_empty = [];\n\nfunction _JsArray_singleton(value)\n{\n    return [value];\n}\n\nfunction _JsArray_length(array)\n{\n    return array.length;\n}\n\nvar _JsArray_initialize = F3(function(size, offset, func)\n{\n    var result = new Array(size);\n\n    for (var i = 0; i < size; i++)\n    {\n        result[i] = func(offset + i);\n    }\n\n    return result;\n});\n\nvar _JsArray_initializeFromList = F2(function (max, ls)\n{\n    var result = new Array(max);\n\n    for (var i = 0; i < max && ls.b; i++)\n    {\n        result[i] = ls.a;\n        ls = ls.b;\n    }\n\n    result.length = i;\n    return _Utils_Tuple2(result, ls);\n});\n\nvar _JsArray_unsafeGet = F2(function(index, array)\n{\n    return array[index];\n});\n\nvar _JsArray_unsafeSet = F3(function(index, value, array)\n{\n    var length = array.length;\n    var result = new Array(length);\n\n    for (var i = 0; i < length; i++)\n    {\n        result[i] = array[i];\n    }\n\n    result[index] = value;\n    return result;\n});\n\nvar _JsArray_push = F2(function(value, array)\n{\n    var length = array.length;\n    var result = new Array(length + 1);\n\n    for (var i = 0; i < length; i++)\n    {\n        result[i] = array[i];\n    }\n\n    result[length] = value;\n    return result;\n});\n\nvar _JsArray_foldl = F3(function(func, acc, array)\n{\n    var length = array.length;\n\n    for (var i = 0; i < length; i++)\n    {\n        acc = A2(func, array[i], acc);\n    }\n\n    return acc;\n});\n\nvar _JsArray_foldr = F3(function(func, acc, array)\n{\n    for (var i = array.length - 1; i >= 0; i--)\n    {\n        acc = A2(func, array[i], acc);\n    }\n\n    return acc;\n});\n\nvar _JsArray_map = F2(function(func, array)\n{\n    var length = array.length;\n    var result = new Array(length);\n\n    for (var i = 0; i < length; i++)\n    {\n        result[i] = func(array[i]);\n    }\n\n    return result;\n});\n\nvar _JsArray_indexedMap = F3(function(func, offset, array)\n{\n    var length = array.length;\n    var result = new Array(length);\n\n    for (var i = 0; i < length; i++)\n    {\n        result[i] = A2(func, offset + i, array[i]);\n    }\n\n    return result;\n});\n\nvar _JsArray_slice = F3(function(from, to, array)\n{\n    return array.slice(from, to);\n});\n\nvar _JsArray_appendN = F3(function(n, dest, source)\n{\n    var destLen = dest.length;\n    var itemsToCopy = n - destLen;\n\n    if (itemsToCopy > source.length)\n    {\n        itemsToCopy = source.length;\n    }\n\n    var size = destLen + itemsToCopy;\n    var result = new Array(size);\n\n    for (var i = 0; i < destLen; i++)\n    {\n        result[i] = dest[i];\n    }\n\n    for (var i = 0; i < itemsToCopy; i++)\n    {\n        result[i + destLen] = source[i];\n    }\n\n    return result;\n});\n\n\n\n// LOG\n\nvar _Debug_log = F2(function(tag, value)\n{\n\treturn value;\n});\n\nvar _Debug_log_UNUSED = F2(function(tag, value)\n{\n\tconsole.log(tag + ': ' + _Debug_toString(value));\n\treturn value;\n});\n\n\n// TODOS\n\nfunction _Debug_todo(moduleName, region)\n{\n\treturn function(message) {\n\t\t_Debug_crash(8, moduleName, region, message);\n\t};\n}\n\nfunction _Debug_todoCase(moduleName, region, value)\n{\n\treturn function(message) {\n\t\t_Debug_crash(9, moduleName, region, value, message);\n\t};\n}\n\n\n// TO STRING\n\nfunction _Debug_toString(value)\n{\n\treturn '<internals>';\n}\n\nfunction _Debug_toString_UNUSED(value)\n{\n\treturn _Debug_toAnsiString(false, value);\n}\n\nfunction _Debug_toAnsiString(ansi, value)\n{\n\tif (typeof value === 'function')\n\t{\n\t\treturn _Debug_internalColor(ansi, '<function>');\n\t}\n\n\tif (typeof value === 'boolean')\n\t{\n\t\treturn _Debug_ctorColor(ansi, value ? 'True' : 'False');\n\t}\n\n\tif (typeof value === 'number')\n\t{\n\t\treturn _Debug_numberColor(ansi, value + '');\n\t}\n\n\tif (value instanceof String)\n\t{\n\t\treturn _Debug_charColor(ansi, \"'\" + _Debug_addSlashes(value, true) + \"'\");\n\t}\n\n\tif (typeof value === 'string')\n\t{\n\t\treturn _Debug_stringColor(ansi, '\"' + _Debug_addSlashes(value, false) + '\"');\n\t}\n\n\tif (typeof value === 'object' && '$' in value)\n\t{\n\t\tvar tag = value.$;\n\n\t\tif (typeof tag === 'number')\n\t\t{\n\t\t\treturn _Debug_internalColor(ansi, '<internals>');\n\t\t}\n\n\t\tif (tag[0] === '#')\n\t\t{\n\t\t\tvar output = [];\n\t\t\tfor (var k in value)\n\t\t\t{\n\t\t\t\tif (k === '$') continue;\n\t\t\t\toutput.push(_Debug_toAnsiString(ansi, value[k]));\n\t\t\t}\n\t\t\treturn '(' + output.join(',') + ')';\n\t\t}\n\n\t\tif (tag === 'Set_elm_builtin')\n\t\t{\n\t\t\treturn _Debug_ctorColor(ansi, 'Set')\n\t\t\t\t+ _Debug_fadeColor(ansi, '.fromList') + ' '\n\t\t\t\t+ _Debug_toAnsiString(ansi, $elm$core$Set$toList(value));\n\t\t}\n\n\t\tif (tag === 'RBNode_elm_builtin' || tag === 'RBEmpty_elm_builtin')\n\t\t{\n\t\t\treturn _Debug_ctorColor(ansi, 'Dict')\n\t\t\t\t+ _Debug_fadeColor(ansi, '.fromList') + ' '\n\t\t\t\t+ _Debug_toAnsiString(ansi, $elm$core$Dict$toList(value));\n\t\t}\n\n\t\tif (tag === 'Array_elm_builtin')\n\t\t{\n\t\t\treturn _Debug_ctorColor(ansi, 'Array')\n\t\t\t\t+ _Debug_fadeColor(ansi, '.fromList') + ' '\n\t\t\t\t+ _Debug_toAnsiString(ansi, $elm$core$Array$toList(value));\n\t\t}\n\n\t\tif (tag === '::' || tag === '[]')\n\t\t{\n\t\t\tvar output = '[';\n\n\t\t\tvalue.b && (output += _Debug_toAnsiString(ansi, value.a), value = value.b)\n\n\t\t\tfor (; value.b; value = value.b) // WHILE_CONS\n\t\t\t{\n\t\t\t\toutput += ',' + _Debug_toAnsiString(ansi, value.a);\n\t\t\t}\n\t\t\treturn output + ']';\n\t\t}\n\n\t\tvar output = '';\n\t\tfor (var i in value)\n\t\t{\n\t\t\tif (i === '$') continue;\n\t\t\tvar str = _Debug_toAnsiString(ansi, value[i]);\n\t\t\tvar c0 = str[0];\n\t\t\tvar parenless = c0 === '{' || c0 === '(' || c0 === '[' || c0 === '<' || c0 === '\"' || str.indexOf(' ') < 0;\n\t\t\toutput += ' ' + (parenless ? str : '(' + str + ')');\n\t\t}\n\t\treturn _Debug_ctorColor(ansi, tag) + output;\n\t}\n\n\tif (typeof DataView === 'function' && value instanceof DataView)\n\t{\n\t\treturn _Debug_stringColor(ansi, '<' + value.byteLength + ' bytes>');\n\t}\n\n\tif (typeof File !== 'undefined' && value instanceof File)\n\t{\n\t\treturn _Debug_internalColor(ansi, '<' + value.name + '>');\n\t}\n\n\tif (typeof value === 'object')\n\t{\n\t\tvar output = [];\n\t\tfor (var key in value)\n\t\t{\n\t\t\tvar field = key[0] === '_' ? key.slice(1) : key;\n\t\t\toutput.push(_Debug_fadeColor(ansi, field) + ' = ' + _Debug_toAnsiString(ansi, value[key]));\n\t\t}\n\t\tif (output.length === 0)\n\t\t{\n\t\t\treturn '{}';\n\t\t}\n\t\treturn '{ ' + output.join(', ') + ' }';\n\t}\n\n\treturn _Debug_internalColor(ansi, '<internals>');\n}\n\nfunction _Debug_addSlashes(str, isChar)\n{\n\tvar s = str\n\t\t.replace(/\\\\/g, '\\\\\\\\')\n\t\t.replace(/\\n/g, '\\\\n')\n\t\t.replace(/\\t/g, '\\\\t')\n\t\t.replace(/\\r/g, '\\\\r')\n\t\t.replace(/\\v/g, '\\\\v')\n\t\t.replace(/\\0/g, '\\\\0');\n\n\tif (isChar)\n\t{\n\t\treturn s.replace(/\\'/g, '\\\\\\'');\n\t}\n\telse\n\t{\n\t\treturn s.replace(/\\\"/g, '\\\\\"');\n\t}\n}\n\nfunction _Debug_ctorColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[96m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_numberColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[95m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_stringColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[93m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_charColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[92m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_fadeColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[37m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_internalColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[36m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_toHexDigit(n)\n{\n\treturn String.fromCharCode(n < 10 ? 48 + n : 55 + n);\n}\n\n\n// CRASH\n\n\nfunction _Debug_crash(identifier)\n{\n\tthrow new Error('https://github.com/elm/core/blob/1.0.0/hints/' + identifier + '.md');\n}\n\n\nfunction _Debug_crash_UNUSED(identifier, fact1, fact2, fact3, fact4)\n{\n\tswitch(identifier)\n\t{\n\t\tcase 0:\n\t\t\tthrow new Error('What node should I take over? In JavaScript I need something like:\\n\\n    Elm.Main.init({\\n        node: document.getElementById(\"elm-node\")\\n    })\\n\\nYou need to do this with any Browser.sandbox or Browser.element program.');\n\n\t\tcase 1:\n\t\t\tthrow new Error('Browser.application programs cannot handle URLs like this:\\n\\n    ' + document.location.href + '\\n\\nWhat is the root? The root of your file system? Try looking at this program with `elm reactor` or some other server.');\n\n\t\tcase 2:\n\t\t\tvar jsonErrorString = fact1;\n\t\t\tthrow new Error('Problem with the flags given to your Elm program on initialization.\\n\\n' + jsonErrorString);\n\n\t\tcase 3:\n\t\t\tvar portName = fact1;\n\t\t\tthrow new Error('There can only be one port named `' + portName + '`, but your program has multiple.');\n\n\t\tcase 4:\n\t\t\tvar portName = fact1;\n\t\t\tvar problem = fact2;\n\t\t\tthrow new Error('Trying to send an unexpected type of value through port `' + portName + '`:\\n' + problem);\n\n\t\tcase 5:\n\t\t\tthrow new Error('Trying to use `(==)` on functions.\\nThere is no way to know if functions are \"the same\" in the Elm sense.\\nRead more about this at https://package.elm-lang.org/packages/elm/core/latest/Basics#== which describes why it is this way and what the better version will look like.');\n\n\t\tcase 6:\n\t\t\tvar moduleName = fact1;\n\t\t\tthrow new Error('Your page is loading multiple Elm scripts with a module named ' + moduleName + '. Maybe a duplicate script is getting loaded accidentally? If not, rename one of them so I know which is which!');\n\n\t\tcase 8:\n\t\t\tvar moduleName = fact1;\n\t\t\tvar region = fact2;\n\t\t\tvar message = fact3;\n\t\t\tthrow new Error('TODO in module `' + moduleName + '` ' + _Debug_regionToString(region) + '\\n\\n' + message);\n\n\t\tcase 9:\n\t\t\tvar moduleName = fact1;\n\t\t\tvar region = fact2;\n\t\t\tvar value = fact3;\n\t\t\tvar message = fact4;\n\t\t\tthrow new Error(\n\t\t\t\t'TODO in module `' + moduleName + '` from the `case` expression '\n\t\t\t\t+ _Debug_regionToString(region) + '\\n\\nIt received the following value:\\n\\n    '\n\t\t\t\t+ _Debug_toString(value).replace('\\n', '\\n    ')\n\t\t\t\t+ '\\n\\nBut the branch that handles it says:\\n\\n    ' + message.replace('\\n', '\\n    ')\n\t\t\t);\n\n\t\tcase 10:\n\t\t\tthrow new Error('Bug in https://github.com/elm/virtual-dom/issues');\n\n\t\tcase 11:\n\t\t\tthrow new Error('Cannot perform mod 0. Division by zero error.');\n\t}\n}\n\nfunction _Debug_regionToString(region)\n{\n\tif (region.Z.J === region.ah.J)\n\t{\n\t\treturn 'on line ' + region.Z.J;\n\t}\n\treturn 'on lines ' + region.Z.J + ' through ' + region.ah.J;\n}\n\n\n\n// EQUALITY\n\nfunction _Utils_eq(x, y)\n{\n\tfor (\n\t\tvar pair, stack = [], isEqual = _Utils_eqHelp(x, y, 0, stack);\n\t\tisEqual && (pair = stack.pop());\n\t\tisEqual = _Utils_eqHelp(pair.a, pair.b, 0, stack)\n\t\t)\n\t{}\n\n\treturn isEqual;\n}\n\nfunction _Utils_eqHelp(x, y, depth, stack)\n{\n\tif (x === y)\n\t{\n\t\treturn true;\n\t}\n\n\tif (typeof x !== 'object' || x === null || y === null)\n\t{\n\t\ttypeof x === 'function' && _Debug_crash(5);\n\t\treturn false;\n\t}\n\n\tif (depth > 100)\n\t{\n\t\tstack.push(_Utils_Tuple2(x,y));\n\t\treturn true;\n\t}\n\n\t/**_UNUSED/\n\tif (x.$ === 'Set_elm_builtin')\n\t{\n\t\tx = $elm$core$Set$toList(x);\n\t\ty = $elm$core$Set$toList(y);\n\t}\n\tif (x.$ === 'RBNode_elm_builtin' || x.$ === 'RBEmpty_elm_builtin')\n\t{\n\t\tx = $elm$core$Dict$toList(x);\n\t\ty = $elm$core$Dict$toList(y);\n\t}\n\t//*/\n\n\t/**/\n\tif (x.$ < 0)\n\t{\n\t\tx = $elm$core$Dict$toList(x);\n\t\ty = $elm$core$Dict$toList(y);\n\t}\n\t//*/\n\n\tfor (var key in x)\n\t{\n\t\tif (!_Utils_eqHelp(x[key], y[key], depth + 1, stack))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\nvar _Utils_equal = F2(_Utils_eq);\nvar _Utils_notEqual = F2(function(a, b) { return !_Utils_eq(a,b); });\n\n\n\n// COMPARISONS\n\n// Code in Generate/JavaScript.hs, Basics.js, and List.js depends on\n// the particular integer values assigned to LT, EQ, and GT.\n\nfunction _Utils_cmp(x, y, ord)\n{\n\tif (typeof x !== 'object')\n\t{\n\t\treturn x === y ? /*EQ*/ 0 : x < y ? /*LT*/ -1 : /*GT*/ 1;\n\t}\n\n\t/**_UNUSED/\n\tif (x instanceof String)\n\t{\n\t\tvar a = x.valueOf();\n\t\tvar b = y.valueOf();\n\t\treturn a === b ? 0 : a < b ? -1 : 1;\n\t}\n\t//*/\n\n\t/**/\n\tif (typeof x.$ === 'undefined')\n\t//*/\n\t/**_UNUSED/\n\tif (x.$[0] === '#')\n\t//*/\n\t{\n\t\treturn (ord = _Utils_cmp(x.a, y.a))\n\t\t\t? ord\n\t\t\t: (ord = _Utils_cmp(x.b, y.b))\n\t\t\t\t? ord\n\t\t\t\t: _Utils_cmp(x.c, y.c);\n\t}\n\n\t// traverse conses until end of a list or a mismatch\n\tfor (; x.b && y.b && !(ord = _Utils_cmp(x.a, y.a)); x = x.b, y = y.b) {} // WHILE_CONSES\n\treturn ord || (x.b ? /*GT*/ 1 : y.b ? /*LT*/ -1 : /*EQ*/ 0);\n}\n\nvar _Utils_lt = F2(function(a, b) { return _Utils_cmp(a, b) < 0; });\nvar _Utils_le = F2(function(a, b) { return _Utils_cmp(a, b) < 1; });\nvar _Utils_gt = F2(function(a, b) { return _Utils_cmp(a, b) > 0; });\nvar _Utils_ge = F2(function(a, b) { return _Utils_cmp(a, b) >= 0; });\n\nvar _Utils_compare = F2(function(x, y)\n{\n\tvar n = _Utils_cmp(x, y);\n\treturn n < 0 ? $elm$core$Basics$LT : n ? $elm$core$Basics$GT : $elm$core$Basics$EQ;\n});\n\n\n// COMMON VALUES\n\nvar _Utils_Tuple0 = 0;\nvar _Utils_Tuple0_UNUSED = { $: '#0' };\n\nfunction _Utils_Tuple2(a, b) { return { a: a, b: b }; }\nfunction _Utils_Tuple2_UNUSED(a, b) { return { $: '#2', a: a, b: b }; }\n\nfunction _Utils_Tuple3(a, b, c) { return { a: a, b: b, c: c }; }\nfunction _Utils_Tuple3_UNUSED(a, b, c) { return { $: '#3', a: a, b: b, c: c }; }\n\nfunction _Utils_chr(c) { return c; }\nfunction _Utils_chr_UNUSED(c) { return new String(c); }\n\n\n// RECORDS\n\nfunction _Utils_update(oldRecord, updatedFields)\n{\n\tvar newRecord = {};\n\n\tfor (var key in oldRecord)\n\t{\n\t\tnewRecord[key] = oldRecord[key];\n\t}\n\n\tfor (var key in updatedFields)\n\t{\n\t\tnewRecord[key] = updatedFields[key];\n\t}\n\n\treturn newRecord;\n}\n\n\n// APPEND\n\nvar _Utils_append = F2(_Utils_ap);\n\nfunction _Utils_ap(xs, ys)\n{\n\t// append Strings\n\tif (typeof xs === 'string')\n\t{\n\t\treturn xs + ys;\n\t}\n\n\t// append Lists\n\tif (!xs.b)\n\t{\n\t\treturn ys;\n\t}\n\tvar root = _List_Cons(xs.a, ys);\n\txs = xs.b\n\tfor (var curr = root; xs.b; xs = xs.b) // WHILE_CONS\n\t{\n\t\tcurr = curr.b = _List_Cons(xs.a, ys);\n\t}\n\treturn root;\n}\n\n\n\nvar _List_Nil = { $: 0 };\nvar _List_Nil_UNUSED = { $: '[]' };\n\nfunction _List_Cons(hd, tl) { return { $: 1, a: hd, b: tl }; }\nfunction _List_Cons_UNUSED(hd, tl) { return { $: '::', a: hd, b: tl }; }\n\n\nvar _List_cons = F2(_List_Cons);\n\nfunction _List_fromArray(arr)\n{\n\tvar out = _List_Nil;\n\tfor (var i = arr.length; i--; )\n\t{\n\t\tout = _List_Cons(arr[i], out);\n\t}\n\treturn out;\n}\n\nfunction _List_toArray(xs)\n{\n\tfor (var out = []; xs.b; xs = xs.b) // WHILE_CONS\n\t{\n\t\tout.push(xs.a);\n\t}\n\treturn out;\n}\n\nvar _List_map2 = F3(function(f, xs, ys)\n{\n\tfor (var arr = []; xs.b && ys.b; xs = xs.b, ys = ys.b) // WHILE_CONSES\n\t{\n\t\tarr.push(A2(f, xs.a, ys.a));\n\t}\n\treturn _List_fromArray(arr);\n});\n\nvar _List_map3 = F4(function(f, xs, ys, zs)\n{\n\tfor (var arr = []; xs.b && ys.b && zs.b; xs = xs.b, ys = ys.b, zs = zs.b) // WHILE_CONSES\n\t{\n\t\tarr.push(A3(f, xs.a, ys.a, zs.a));\n\t}\n\treturn _List_fromArray(arr);\n});\n\nvar _List_map4 = F5(function(f, ws, xs, ys, zs)\n{\n\tfor (var arr = []; ws.b && xs.b && ys.b && zs.b; ws = ws.b, xs = xs.b, ys = ys.b, zs = zs.b) // WHILE_CONSES\n\t{\n\t\tarr.push(A4(f, ws.a, xs.a, ys.a, zs.a));\n\t}\n\treturn _List_fromArray(arr);\n});\n\nvar _List_map5 = F6(function(f, vs, ws, xs, ys, zs)\n{\n\tfor (var arr = []; vs.b && ws.b && xs.b && ys.b && zs.b; vs = vs.b, ws = ws.b, xs = xs.b, ys = ys.b, zs = zs.b) // WHILE_CONSES\n\t{\n\t\tarr.push(A5(f, vs.a, ws.a, xs.a, ys.a, zs.a));\n\t}\n\treturn _List_fromArray(arr);\n});\n\nvar _List_sortBy = F2(function(f, xs)\n{\n\treturn _List_fromArray(_List_toArray(xs).sort(function(a, b) {\n\t\treturn _Utils_cmp(f(a), f(b));\n\t}));\n});\n\nvar _List_sortWith = F2(function(f, xs)\n{\n\treturn _List_fromArray(_List_toArray(xs).sort(function(a, b) {\n\t\tvar ord = A2(f, a, b);\n\t\treturn ord === $elm$core$Basics$EQ ? 0 : ord === $elm$core$Basics$LT ? -1 : 1;\n\t}));\n});\n\n\n\n// MATH\n\nvar _Basics_add = F2(function(a, b) { return a + b; });\nvar _Basics_sub = F2(function(a, b) { return a - b; });\nvar _Basics_mul = F2(function(a, b) { return a * b; });\nvar _Basics_fdiv = F2(function(a, b) { return a / b; });\nvar _Basics_idiv = F2(function(a, b) { return (a / b) | 0; });\nvar _Basics_pow = F2(Math.pow);\n\nvar _Basics_remainderBy = F2(function(b, a) { return a % b; });\n\n// https://www.microsoft.com/en-us/research/wp-content/uploads/2016/02/divmodnote-letter.pdf\nvar _Basics_modBy = F2(function(modulus, x)\n{\n\tvar answer = x % modulus;\n\treturn modulus === 0\n\t\t? _Debug_crash(11)\n\t\t:\n\t((answer > 0 && modulus < 0) || (answer < 0 && modulus > 0))\n\t\t? answer + modulus\n\t\t: answer;\n});\n\n\n// TRIGONOMETRY\n\nvar _Basics_pi = Math.PI;\nvar _Basics_e = Math.E;\nvar _Basics_cos = Math.cos;\nvar _Basics_sin = Math.sin;\nvar _Basics_tan = Math.tan;\nvar _Basics_acos = Math.acos;\nvar _Basics_asin = Math.asin;\nvar _Basics_atan = Math.atan;\nvar _Basics_atan2 = F2(Math.atan2);\n\n\n// MORE MATH\n\nfunction _Basics_toFloat(x) { return x; }\nfunction _Basics_truncate(n) { return n | 0; }\nfunction _Basics_isInfinite(n) { return n === Infinity || n === -Infinity; }\n\nvar _Basics_ceiling = Math.ceil;\nvar _Basics_floor = Math.floor;\nvar _Basics_round = Math.round;\nvar _Basics_sqrt = Math.sqrt;\nvar _Basics_log = Math.log;\nvar _Basics_isNaN = isNaN;\n\n\n// BOOLEANS\n\nfunction _Basics_not(bool) { return !bool; }\nvar _Basics_and = F2(function(a, b) { return a && b; });\nvar _Basics_or  = F2(function(a, b) { return a || b; });\nvar _Basics_xor = F2(function(a, b) { return a !== b; });\n\n\n\nvar _String_cons = F2(function(chr, str)\n{\n\treturn chr + str;\n});\n\nfunction _String_uncons(string)\n{\n\tvar word = string.charCodeAt(0);\n\treturn !isNaN(word)\n\t\t? $elm$core$Maybe$Just(\n\t\t\t0xD800 <= word && word <= 0xDBFF\n\t\t\t\t? _Utils_Tuple2(_Utils_chr(string[0] + string[1]), string.slice(2))\n\t\t\t\t: _Utils_Tuple2(_Utils_chr(string[0]), string.slice(1))\n\t\t)\n\t\t: $elm$core$Maybe$Nothing;\n}\n\nvar _String_append = F2(function(a, b)\n{\n\treturn a + b;\n});\n\nfunction _String_length(str)\n{\n\treturn str.length;\n}\n\nvar _String_map = F2(function(func, string)\n{\n\tvar len = string.length;\n\tvar array = new Array(len);\n\tvar i = 0;\n\twhile (i < len)\n\t{\n\t\tvar word = string.charCodeAt(i);\n\t\tif (0xD800 <= word && word <= 0xDBFF)\n\t\t{\n\t\t\tarray[i] = func(_Utils_chr(string[i] + string[i+1]));\n\t\t\ti += 2;\n\t\t\tcontinue;\n\t\t}\n\t\tarray[i] = func(_Utils_chr(string[i]));\n\t\ti++;\n\t}\n\treturn array.join('');\n});\n\nvar _String_filter = F2(function(isGood, str)\n{\n\tvar arr = [];\n\tvar len = str.length;\n\tvar i = 0;\n\twhile (i < len)\n\t{\n\t\tvar char = str[i];\n\t\tvar word = str.charCodeAt(i);\n\t\ti++;\n\t\tif (0xD800 <= word && word <= 0xDBFF)\n\t\t{\n\t\t\tchar += str[i];\n\t\t\ti++;\n\t\t}\n\n\t\tif (isGood(_Utils_chr(char)))\n\t\t{\n\t\t\tarr.push(char);\n\t\t}\n\t}\n\treturn arr.join('');\n});\n\nfunction _String_reverse(str)\n{\n\tvar len = str.length;\n\tvar arr = new Array(len);\n\tvar i = 0;\n\twhile (i < len)\n\t{\n\t\tvar word = str.charCodeAt(i);\n\t\tif (0xD800 <= word && word <= 0xDBFF)\n\t\t{\n\t\t\tarr[len - i] = str[i + 1];\n\t\t\ti++;\n\t\t\tarr[len - i] = str[i - 1];\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tarr[len - i] = str[i];\n\t\t\ti++;\n\t\t}\n\t}\n\treturn arr.join('');\n}\n\nvar _String_foldl = F3(function(func, state, string)\n{\n\tvar len = string.length;\n\tvar i = 0;\n\twhile (i < len)\n\t{\n\t\tvar char = string[i];\n\t\tvar word = string.charCodeAt(i);\n\t\ti++;\n\t\tif (0xD800 <= word && word <= 0xDBFF)\n\t\t{\n\t\t\tchar += string[i];\n\t\t\ti++;\n\t\t}\n\t\tstate = A2(func, _Utils_chr(char), state);\n\t}\n\treturn state;\n});\n\nvar _String_foldr = F3(function(func, state, string)\n{\n\tvar i = string.length;\n\twhile (i--)\n\t{\n\t\tvar char = string[i];\n\t\tvar word = string.charCodeAt(i);\n\t\tif (0xDC00 <= word && word <= 0xDFFF)\n\t\t{\n\t\t\ti--;\n\t\t\tchar = string[i] + char;\n\t\t}\n\t\tstate = A2(func, _Utils_chr(char), state);\n\t}\n\treturn state;\n});\n\nvar _String_split = F2(function(sep, str)\n{\n\treturn str.split(sep);\n});\n\nvar _String_join = F2(function(sep, strs)\n{\n\treturn strs.join(sep);\n});\n\nvar _String_slice = F3(function(start, end, str) {\n\treturn str.slice(start, end);\n});\n\nfunction _String_trim(str)\n{\n\treturn str.trim();\n}\n\nfunction _String_trimLeft(str)\n{\n\treturn str.replace(/^\\s+/, '');\n}\n\nfunction _String_trimRight(str)\n{\n\treturn str.replace(/\\s+$/, '');\n}\n\nfunction _String_words(str)\n{\n\treturn _List_fromArray(str.trim().split(/\\s+/g));\n}\n\nfunction _String_lines(str)\n{\n\treturn _List_fromArray(str.split(/\\r\\n|\\r|\\n/g));\n}\n\nfunction _String_toUpper(str)\n{\n\treturn str.toUpperCase();\n}\n\nfunction _String_toLower(str)\n{\n\treturn str.toLowerCase();\n}\n\nvar _String_any = F2(function(isGood, string)\n{\n\tvar i = string.length;\n\twhile (i--)\n\t{\n\t\tvar char = string[i];\n\t\tvar word = string.charCodeAt(i);\n\t\tif (0xDC00 <= word && word <= 0xDFFF)\n\t\t{\n\t\t\ti--;\n\t\t\tchar = string[i] + char;\n\t\t}\n\t\tif (isGood(_Utils_chr(char)))\n\t\t{\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n});\n\nvar _String_all = F2(function(isGood, string)\n{\n\tvar i = string.length;\n\twhile (i--)\n\t{\n\t\tvar char = string[i];\n\t\tvar word = string.charCodeAt(i);\n\t\tif (0xDC00 <= word && word <= 0xDFFF)\n\t\t{\n\t\t\ti--;\n\t\t\tchar = string[i] + char;\n\t\t}\n\t\tif (!isGood(_Utils_chr(char)))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n});\n\nvar _String_contains = F2(function(sub, str)\n{\n\treturn str.indexOf(sub) > -1;\n});\n\nvar _String_startsWith = F2(function(sub, str)\n{\n\treturn str.indexOf(sub) === 0;\n});\n\nvar _String_endsWith = F2(function(sub, str)\n{\n\treturn str.length >= sub.length &&\n\t\tstr.lastIndexOf(sub) === str.length - sub.length;\n});\n\nvar _String_indexes = F2(function(sub, str)\n{\n\tvar subLen = sub.length;\n\n\tif (subLen < 1)\n\t{\n\t\treturn _List_Nil;\n\t}\n\n\tvar i = 0;\n\tvar is = [];\n\n\twhile ((i = str.indexOf(sub, i)) > -1)\n\t{\n\t\tis.push(i);\n\t\ti = i + subLen;\n\t}\n\n\treturn _List_fromArray(is);\n});\n\n\n// TO STRING\n\nfunction _String_fromNumber(number)\n{\n\treturn number + '';\n}\n\n\n// INT CONVERSIONS\n\nfunction _String_toInt(str)\n{\n\tvar total = 0;\n\tvar code0 = str.charCodeAt(0);\n\tvar start = code0 == 0x2B /* + */ || code0 == 0x2D /* - */ ? 1 : 0;\n\n\tfor (var i = start; i < str.length; ++i)\n\t{\n\t\tvar code = str.charCodeAt(i);\n\t\tif (code < 0x30 || 0x39 < code)\n\t\t{\n\t\t\treturn $elm$core$Maybe$Nothing;\n\t\t}\n\t\ttotal = 10 * total + code - 0x30;\n\t}\n\n\treturn i == start\n\t\t? $elm$core$Maybe$Nothing\n\t\t: $elm$core$Maybe$Just(code0 == 0x2D ? -total : total);\n}\n\n\n// FLOAT CONVERSIONS\n\nfunction _String_toFloat(s)\n{\n\t// check if it is a hex, octal, or binary number\n\tif (s.length === 0 || /[\\sxbo]/.test(s))\n\t{\n\t\treturn $elm$core$Maybe$Nothing;\n\t}\n\tvar n = +s;\n\t// faster isNaN check\n\treturn n === n ? $elm$core$Maybe$Just(n) : $elm$core$Maybe$Nothing;\n}\n\nfunction _String_fromList(chars)\n{\n\treturn _List_toArray(chars).join('');\n}\n\n\n\n\nfunction _Char_toCode(char)\n{\n\tvar code = char.charCodeAt(0);\n\tif (0xD800 <= code && code <= 0xDBFF)\n\t{\n\t\treturn (code - 0xD800) * 0x400 + char.charCodeAt(1) - 0xDC00 + 0x10000\n\t}\n\treturn code;\n}\n\nfunction _Char_fromCode(code)\n{\n\treturn _Utils_chr(\n\t\t(code < 0 || 0x10FFFF < code)\n\t\t\t? '\\uFFFD'\n\t\t\t:\n\t\t(code <= 0xFFFF)\n\t\t\t? String.fromCharCode(code)\n\t\t\t:\n\t\t(code -= 0x10000,\n\t\t\tString.fromCharCode(Math.floor(code / 0x400) + 0xD800, code % 0x400 + 0xDC00)\n\t\t)\n\t);\n}\n\nfunction _Char_toUpper(char)\n{\n\treturn _Utils_chr(char.toUpperCase());\n}\n\nfunction _Char_toLower(char)\n{\n\treturn _Utils_chr(char.toLowerCase());\n}\n\nfunction _Char_toLocaleUpper(char)\n{\n\treturn _Utils_chr(char.toLocaleUpperCase());\n}\n\nfunction _Char_toLocaleLower(char)\n{\n\treturn _Utils_chr(char.toLocaleLowerCase());\n}\n\n\n\n/**_UNUSED/\nfunction _Json_errorToString(error)\n{\n\treturn $elm$json$Json$Decode$errorToString(error);\n}\n//*/\n\n\n// CORE DECODERS\n\nfunction _Json_succeed(msg)\n{\n\treturn {\n\t\t$: 0,\n\t\ta: msg\n\t};\n}\n\nfunction _Json_fail(msg)\n{\n\treturn {\n\t\t$: 1,\n\t\ta: msg\n\t};\n}\n\nfunction _Json_decodePrim(decoder)\n{\n\treturn { $: 2, b: decoder };\n}\n\nvar _Json_decodeInt = _Json_decodePrim(function(value) {\n\treturn (typeof value !== 'number')\n\t\t? _Json_expecting('an INT', value)\n\t\t:\n\t(-2147483647 < value && value < 2147483647 && (value | 0) === value)\n\t\t? $elm$core$Result$Ok(value)\n\t\t:\n\t(isFinite(value) && !(value % 1))\n\t\t? $elm$core$Result$Ok(value)\n\t\t: _Json_expecting('an INT', value);\n});\n\nvar _Json_decodeBool = _Json_decodePrim(function(value) {\n\treturn (typeof value === 'boolean')\n\t\t? $elm$core$Result$Ok(value)\n\t\t: _Json_expecting('a BOOL', value);\n});\n\nvar _Json_decodeFloat = _Json_decodePrim(function(value) {\n\treturn (typeof value === 'number')\n\t\t? $elm$core$Result$Ok(value)\n\t\t: _Json_expecting('a FLOAT', value);\n});\n\nvar _Json_decodeValue = _Json_decodePrim(function(value) {\n\treturn $elm$core$Result$Ok(_Json_wrap(value));\n});\n\nvar _Json_decodeString = _Json_decodePrim(function(value) {\n\treturn (typeof value === 'string')\n\t\t? $elm$core$Result$Ok(value)\n\t\t: (value instanceof String)\n\t\t\t? $elm$core$Result$Ok(value + '')\n\t\t\t: _Json_expecting('a STRING', value);\n});\n\nfunction _Json_decodeList(decoder) { return { $: 3, b: decoder }; }\nfunction _Json_decodeArray(decoder) { return { $: 4, b: decoder }; }\n\nfunction _Json_decodeNull(value) { return { $: 5, c: value }; }\n\nvar _Json_decodeField = F2(function(field, decoder)\n{\n\treturn {\n\t\t$: 6,\n\t\td: field,\n\t\tb: decoder\n\t};\n});\n\nvar _Json_decodeIndex = F2(function(index, decoder)\n{\n\treturn {\n\t\t$: 7,\n\t\te: index,\n\t\tb: decoder\n\t};\n});\n\nfunction _Json_decodeKeyValuePairs(decoder)\n{\n\treturn {\n\t\t$: 8,\n\t\tb: decoder\n\t};\n}\n\nfunction _Json_mapMany(f, decoders)\n{\n\treturn {\n\t\t$: 9,\n\t\tf: f,\n\t\tg: decoders\n\t};\n}\n\nvar _Json_andThen = F2(function(callback, decoder)\n{\n\treturn {\n\t\t$: 10,\n\t\tb: decoder,\n\t\th: callback\n\t};\n});\n\nfunction _Json_oneOf(decoders)\n{\n\treturn {\n\t\t$: 11,\n\t\tg: decoders\n\t};\n}\n\n\n// DECODING OBJECTS\n\nvar _Json_map1 = F2(function(f, d1)\n{\n\treturn _Json_mapMany(f, [d1]);\n});\n\nvar _Json_map2 = F3(function(f, d1, d2)\n{\n\treturn _Json_mapMany(f, [d1, d2]);\n});\n\nvar _Json_map3 = F4(function(f, d1, d2, d3)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3]);\n});\n\nvar _Json_map4 = F5(function(f, d1, d2, d3, d4)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3, d4]);\n});\n\nvar _Json_map5 = F6(function(f, d1, d2, d3, d4, d5)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3, d4, d5]);\n});\n\nvar _Json_map6 = F7(function(f, d1, d2, d3, d4, d5, d6)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3, d4, d5, d6]);\n});\n\nvar _Json_map7 = F8(function(f, d1, d2, d3, d4, d5, d6, d7)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3, d4, d5, d6, d7]);\n});\n\nvar _Json_map8 = F9(function(f, d1, d2, d3, d4, d5, d6, d7, d8)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3, d4, d5, d6, d7, d8]);\n});\n\n\n// DECODE\n\nvar _Json_runOnString = F2(function(decoder, string)\n{\n\ttry\n\t{\n\t\tvar value = JSON.parse(string);\n\t\treturn _Json_runHelp(decoder, value);\n\t}\n\tcatch (e)\n\t{\n\t\treturn $elm$core$Result$Err(A2($elm$json$Json$Decode$Failure, 'This is not valid JSON! ' + e.message, _Json_wrap(string)));\n\t}\n});\n\nvar _Json_run = F2(function(decoder, value)\n{\n\treturn _Json_runHelp(decoder, _Json_unwrap(value));\n});\n\nfunction _Json_runHelp(decoder, value)\n{\n\tswitch (decoder.$)\n\t{\n\t\tcase 2:\n\t\t\treturn decoder.b(value);\n\n\t\tcase 5:\n\t\t\treturn (value === null)\n\t\t\t\t? $elm$core$Result$Ok(decoder.c)\n\t\t\t\t: _Json_expecting('null', value);\n\n\t\tcase 3:\n\t\t\tif (!_Json_isArray(value))\n\t\t\t{\n\t\t\t\treturn _Json_expecting('a LIST', value);\n\t\t\t}\n\t\t\treturn _Json_runArrayDecoder(decoder.b, value, _List_fromArray);\n\n\t\tcase 4:\n\t\t\tif (!_Json_isArray(value))\n\t\t\t{\n\t\t\t\treturn _Json_expecting('an ARRAY', value);\n\t\t\t}\n\t\t\treturn _Json_runArrayDecoder(decoder.b, value, _Json_toElmArray);\n\n\t\tcase 6:\n\t\t\tvar field = decoder.d;\n\t\t\tif (typeof value !== 'object' || value === null || !(field in value))\n\t\t\t{\n\t\t\t\treturn _Json_expecting('an OBJECT with a field named `' + field + '`', value);\n\t\t\t}\n\t\t\tvar result = _Json_runHelp(decoder.b, value[field]);\n\t\t\treturn ($elm$core$Result$isOk(result)) ? result : $elm$core$Result$Err(A2($elm$json$Json$Decode$Field, field, result.a));\n\n\t\tcase 7:\n\t\t\tvar index = decoder.e;\n\t\t\tif (!_Json_isArray(value))\n\t\t\t{\n\t\t\t\treturn _Json_expecting('an ARRAY', value);\n\t\t\t}\n\t\t\tif (index >= value.length)\n\t\t\t{\n\t\t\t\treturn _Json_expecting('a LONGER array. Need index ' + index + ' but only see ' + value.length + ' entries', value);\n\t\t\t}\n\t\t\tvar result = _Json_runHelp(decoder.b, value[index]);\n\t\t\treturn ($elm$core$Result$isOk(result)) ? result : $elm$core$Result$Err(A2($elm$json$Json$Decode$Index, index, result.a));\n\n\t\tcase 8:\n\t\t\tif (typeof value !== 'object' || value === null || _Json_isArray(value))\n\t\t\t{\n\t\t\t\treturn _Json_expecting('an OBJECT', value);\n\t\t\t}\n\n\t\t\tvar keyValuePairs = _List_Nil;\n\t\t\t// TODO test perf of Object.keys and switch when support is good enough\n\t\t\tfor (var key in value)\n\t\t\t{\n\t\t\t\tif (value.hasOwnProperty(key))\n\t\t\t\t{\n\t\t\t\t\tvar result = _Json_runHelp(decoder.b, value[key]);\n\t\t\t\t\tif (!$elm$core$Result$isOk(result))\n\t\t\t\t\t{\n\t\t\t\t\t\treturn $elm$core$Result$Err(A2($elm$json$Json$Decode$Field, key, result.a));\n\t\t\t\t\t}\n\t\t\t\t\tkeyValuePairs = _List_Cons(_Utils_Tuple2(key, result.a), keyValuePairs);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn $elm$core$Result$Ok($elm$core$List$reverse(keyValuePairs));\n\n\t\tcase 9:\n\t\t\tvar answer = decoder.f;\n\t\t\tvar decoders = decoder.g;\n\t\t\tfor (var i = 0; i < decoders.length; i++)\n\t\t\t{\n\t\t\t\tvar result = _Json_runHelp(decoders[i], value);\n\t\t\t\tif (!$elm$core$Result$isOk(result))\n\t\t\t\t{\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\t\t\t\tanswer = answer(result.a);\n\t\t\t}\n\t\t\treturn $elm$core$Result$Ok(answer);\n\n\t\tcase 10:\n\t\t\tvar result = _Json_runHelp(decoder.b, value);\n\t\t\treturn (!$elm$core$Result$isOk(result))\n\t\t\t\t? result\n\t\t\t\t: _Json_runHelp(decoder.h(result.a), value);\n\n\t\tcase 11:\n\t\t\tvar errors = _List_Nil;\n\t\t\tfor (var temp = decoder.g; temp.b; temp = temp.b) // WHILE_CONS\n\t\t\t{\n\t\t\t\tvar result = _Json_runHelp(temp.a, value);\n\t\t\t\tif ($elm$core$Result$isOk(result))\n\t\t\t\t{\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\t\t\t\terrors = _List_Cons(result.a, errors);\n\t\t\t}\n\t\t\treturn $elm$core$Result$Err($elm$json$Json$Decode$OneOf($elm$core$List$reverse(errors)));\n\n\t\tcase 1:\n\t\t\treturn $elm$core$Result$Err(A2($elm$json$Json$Decode$Failure, decoder.a, _Json_wrap(value)));\n\n\t\tcase 0:\n\t\t\treturn $elm$core$Result$Ok(decoder.a);\n\t}\n}\n\nfunction _Json_runArrayDecoder(decoder, value, toElmValue)\n{\n\tvar len = value.length;\n\tvar array = new Array(len);\n\tfor (var i = 0; i < len; i++)\n\t{\n\t\tvar result = _Json_runHelp(decoder, value[i]);\n\t\tif (!$elm$core$Result$isOk(result))\n\t\t{\n\t\t\treturn $elm$core$Result$Err(A2($elm$json$Json$Decode$Index, i, result.a));\n\t\t}\n\t\tarray[i] = result.a;\n\t}\n\treturn $elm$core$Result$Ok(toElmValue(array));\n}\n\nfunction _Json_isArray(value)\n{\n\treturn Array.isArray(value) || (typeof FileList === 'function' && value instanceof FileList);\n}\n\nfunction _Json_toElmArray(array)\n{\n\treturn A2($elm$core$Array$initialize, array.length, function(i) { return array[i]; });\n}\n\nfunction _Json_expecting(type, value)\n{\n\treturn $elm$core$Result$Err(A2($elm$json$Json$Decode$Failure, 'Expecting ' + type, _Json_wrap(value)));\n}\n\n\n// EQUALITY\n\nfunction _Json_equality(x, y)\n{\n\tif (x === y)\n\t{\n\t\treturn true;\n\t}\n\n\tif (x.$ !== y.$)\n\t{\n\t\treturn false;\n\t}\n\n\tswitch (x.$)\n\t{\n\t\tcase 0:\n\t\tcase 1:\n\t\t\treturn x.a === y.a;\n\n\t\tcase 2:\n\t\t\treturn x.b === y.b;\n\n\t\tcase 5:\n\t\t\treturn x.c === y.c;\n\n\t\tcase 3:\n\t\tcase 4:\n\t\tcase 8:\n\t\t\treturn _Json_equality(x.b, y.b);\n\n\t\tcase 6:\n\t\t\treturn x.d === y.d && _Json_equality(x.b, y.b);\n\n\t\tcase 7:\n\t\t\treturn x.e === y.e && _Json_equality(x.b, y.b);\n\n\t\tcase 9:\n\t\t\treturn x.f === y.f && _Json_listEquality(x.g, y.g);\n\n\t\tcase 10:\n\t\t\treturn x.h === y.h && _Json_equality(x.b, y.b);\n\n\t\tcase 11:\n\t\t\treturn _Json_listEquality(x.g, y.g);\n\t}\n}\n\nfunction _Json_listEquality(aDecoders, bDecoders)\n{\n\tvar len = aDecoders.length;\n\tif (len !== bDecoders.length)\n\t{\n\t\treturn false;\n\t}\n\tfor (var i = 0; i < len; i++)\n\t{\n\t\tif (!_Json_equality(aDecoders[i], bDecoders[i]))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\n\n// ENCODE\n\nvar _Json_encode = F2(function(indentLevel, value)\n{\n\treturn JSON.stringify(_Json_unwrap(value), null, indentLevel) + '';\n});\n\nfunction _Json_wrap_UNUSED(value) { return { $: 0, a: value }; }\nfunction _Json_unwrap_UNUSED(value) { return value.a; }\n\nfunction _Json_wrap(value) { return value; }\nfunction _Json_unwrap(value) { return value; }\n\nfunction _Json_emptyArray() { return []; }\nfunction _Json_emptyObject() { return {}; }\n\nvar _Json_addField = F3(function(key, value, object)\n{\n\tobject[key] = _Json_unwrap(value);\n\treturn object;\n});\n\nfunction _Json_addEntry(func)\n{\n\treturn F2(function(entry, array)\n\t{\n\t\tarray.push(_Json_unwrap(func(entry)));\n\t\treturn array;\n\t});\n}\n\nvar _Json_encodeNull = _Json_wrap(null);\n\n\n\n// TASKS\n\nfunction _Scheduler_succeed(value)\n{\n\treturn {\n\t\t$: 0,\n\t\ta: value\n\t};\n}\n\nfunction _Scheduler_fail(error)\n{\n\treturn {\n\t\t$: 1,\n\t\ta: error\n\t};\n}\n\nfunction _Scheduler_binding(callback)\n{\n\treturn {\n\t\t$: 2,\n\t\tb: callback,\n\t\tc: null\n\t};\n}\n\nvar _Scheduler_andThen = F2(function(callback, task)\n{\n\treturn {\n\t\t$: 3,\n\t\tb: callback,\n\t\td: task\n\t};\n});\n\nvar _Scheduler_onError = F2(function(callback, task)\n{\n\treturn {\n\t\t$: 4,\n\t\tb: callback,\n\t\td: task\n\t};\n});\n\nfunction _Scheduler_receive(callback)\n{\n\treturn {\n\t\t$: 5,\n\t\tb: callback\n\t};\n}\n\n\n// PROCESSES\n\nvar _Scheduler_guid = 0;\n\nfunction _Scheduler_rawSpawn(task)\n{\n\tvar proc = {\n\t\t$: 0,\n\t\te: _Scheduler_guid++,\n\t\tf: task,\n\t\tg: null,\n\t\th: []\n\t};\n\n\t_Scheduler_enqueue(proc);\n\n\treturn proc;\n}\n\nfunction _Scheduler_spawn(task)\n{\n\treturn _Scheduler_binding(function(callback) {\n\t\tcallback(_Scheduler_succeed(_Scheduler_rawSpawn(task)));\n\t});\n}\n\nfunction _Scheduler_rawSend(proc, msg)\n{\n\tproc.h.push(msg);\n\t_Scheduler_enqueue(proc);\n}\n\nvar _Scheduler_send = F2(function(proc, msg)\n{\n\treturn _Scheduler_binding(function(callback) {\n\t\t_Scheduler_rawSend(proc, msg);\n\t\tcallback(_Scheduler_succeed(_Utils_Tuple0));\n\t});\n});\n\nfunction _Scheduler_kill(proc)\n{\n\treturn _Scheduler_binding(function(callback) {\n\t\tvar task = proc.f;\n\t\tif (task.$ === 2 && task.c)\n\t\t{\n\t\t\ttask.c();\n\t\t}\n\n\t\tproc.f = null;\n\n\t\tcallback(_Scheduler_succeed(_Utils_Tuple0));\n\t});\n}\n\n\n/* STEP PROCESSES\n\ntype alias Process =\n  { $ : tag\n  , id : unique_id\n  , root : Task\n  , stack : null | { $: SUCCEED | FAIL, a: callback, b: stack }\n  , mailbox : [msg]\n  }\n\n*/\n\n\nvar _Scheduler_working = false;\nvar _Scheduler_queue = [];\n\n\nfunction _Scheduler_enqueue(proc)\n{\n\t_Scheduler_queue.push(proc);\n\tif (_Scheduler_working)\n\t{\n\t\treturn;\n\t}\n\t_Scheduler_working = true;\n\twhile (proc = _Scheduler_queue.shift())\n\t{\n\t\t_Scheduler_step(proc);\n\t}\n\t_Scheduler_working = false;\n}\n\n\nfunction _Scheduler_step(proc)\n{\n\twhile (proc.f)\n\t{\n\t\tvar rootTag = proc.f.$;\n\t\tif (rootTag === 0 || rootTag === 1)\n\t\t{\n\t\t\twhile (proc.g && proc.g.$ !== rootTag)\n\t\t\t{\n\t\t\t\tproc.g = proc.g.i;\n\t\t\t}\n\t\t\tif (!proc.g)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tproc.f = proc.g.b(proc.f.a);\n\t\t\tproc.g = proc.g.i;\n\t\t}\n\t\telse if (rootTag === 2)\n\t\t{\n\t\t\tproc.f.c = proc.f.b(function(newRoot) {\n\t\t\t\tproc.f = newRoot;\n\t\t\t\t_Scheduler_enqueue(proc);\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\t\telse if (rootTag === 5)\n\t\t{\n\t\t\tif (proc.h.length === 0)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tproc.f = proc.f.b(proc.h.shift());\n\t\t}\n\t\telse // if (rootTag === 3 || rootTag === 4)\n\t\t{\n\t\t\tproc.g = {\n\t\t\t\t$: rootTag === 3 ? 0 : 1,\n\t\t\t\tb: proc.f.b,\n\t\t\t\ti: proc.g\n\t\t\t};\n\t\t\tproc.f = proc.f.d;\n\t\t}\n\t}\n}\n\n\n\nfunction _Process_sleep(time)\n{\n\treturn _Scheduler_binding(function(callback) {\n\t\tvar id = setTimeout(function() {\n\t\t\tcallback(_Scheduler_succeed(_Utils_Tuple0));\n\t\t}, time);\n\n\t\treturn function() { clearTimeout(id); };\n\t});\n}\n\n\n\n\n// PROGRAMS\n\n\nvar _Platform_worker = F4(function(impl, flagDecoder, debugMetadata, args)\n{\n\treturn _Platform_initialize(\n\t\tflagDecoder,\n\t\targs,\n\t\timpl.aU,\n\t\timpl.a0,\n\t\timpl.a_,\n\t\tfunction() { return function() {} }\n\t);\n});\n\n\n\n// INITIALIZE A PROGRAM\n\n\nfunction _Platform_initialize(flagDecoder, args, init, update, subscriptions, stepperBuilder)\n{\n\tvar result = A2(_Json_run, flagDecoder, _Json_wrap(args ? args['flags'] : undefined));\n\t$elm$core$Result$isOk(result) || _Debug_crash(2 /**_UNUSED/, _Json_errorToString(result.a) /**/);\n\tvar managers = {};\n\tresult = init(result.a);\n\tvar model = result.a;\n\tvar stepper = stepperBuilder(sendToApp, model);\n\tvar ports = _Platform_setupEffects(managers, sendToApp);\n\n\tfunction sendToApp(msg, viewMetadata)\n\t{\n\t\tresult = A2(update, msg, model);\n\t\tstepper(model = result.a, viewMetadata);\n\t\t_Platform_enqueueEffects(managers, result.b, subscriptions(model));\n\t}\n\n\t_Platform_enqueueEffects(managers, result.b, subscriptions(model));\n\n\treturn ports ? { ports: ports } : {};\n}\n\n\n\n// TRACK PRELOADS\n//\n// This is used by code in elm/browser and elm/http\n// to register any HTTP requests that are triggered by init.\n//\n\n\nvar _Platform_preload;\n\n\nfunction _Platform_registerPreload(url)\n{\n\t_Platform_preload.add(url);\n}\n\n\n\n// EFFECT MANAGERS\n\n\nvar _Platform_effectManagers = {};\n\n\nfunction _Platform_setupEffects(managers, sendToApp)\n{\n\tvar ports;\n\n\t// setup all necessary effect managers\n\tfor (var key in _Platform_effectManagers)\n\t{\n\t\tvar manager = _Platform_effectManagers[key];\n\n\t\tif (manager.a)\n\t\t{\n\t\t\tports = ports || {};\n\t\t\tports[key] = manager.a(key, sendToApp);\n\t\t}\n\n\t\tmanagers[key] = _Platform_instantiateManager(manager, sendToApp);\n\t}\n\n\treturn ports;\n}\n\n\nfunction _Platform_createManager(init, onEffects, onSelfMsg, cmdMap, subMap)\n{\n\treturn {\n\t\tb: init,\n\t\tc: onEffects,\n\t\td: onSelfMsg,\n\t\te: cmdMap,\n\t\tf: subMap\n\t};\n}\n\n\nfunction _Platform_instantiateManager(info, sendToApp)\n{\n\tvar router = {\n\t\tg: sendToApp,\n\t\th: undefined\n\t};\n\n\tvar onEffects = info.c;\n\tvar onSelfMsg = info.d;\n\tvar cmdMap = info.e;\n\tvar subMap = info.f;\n\n\tfunction loop(state)\n\t{\n\t\treturn A2(_Scheduler_andThen, loop, _Scheduler_receive(function(msg)\n\t\t{\n\t\t\tvar value = msg.a;\n\n\t\t\tif (msg.$ === 0)\n\t\t\t{\n\t\t\t\treturn A3(onSelfMsg, router, value, state);\n\t\t\t}\n\n\t\t\treturn cmdMap && subMap\n\t\t\t\t? A4(onEffects, router, value.i, value.j, state)\n\t\t\t\t: A3(onEffects, router, cmdMap ? value.i : value.j, state);\n\t\t}));\n\t}\n\n\treturn router.h = _Scheduler_rawSpawn(A2(_Scheduler_andThen, loop, info.b));\n}\n\n\n\n// ROUTING\n\n\nvar _Platform_sendToApp = F2(function(router, msg)\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\trouter.g(msg);\n\t\tcallback(_Scheduler_succeed(_Utils_Tuple0));\n\t});\n});\n\n\nvar _Platform_sendToSelf = F2(function(router, msg)\n{\n\treturn A2(_Scheduler_send, router.h, {\n\t\t$: 0,\n\t\ta: msg\n\t});\n});\n\n\n\n// BAGS\n\n\nfunction _Platform_leaf(home)\n{\n\treturn function(value)\n\t{\n\t\treturn {\n\t\t\t$: 1,\n\t\t\tk: home,\n\t\t\tl: value\n\t\t};\n\t};\n}\n\n\nfunction _Platform_batch(list)\n{\n\treturn {\n\t\t$: 2,\n\t\tm: list\n\t};\n}\n\n\nvar _Platform_map = F2(function(tagger, bag)\n{\n\treturn {\n\t\t$: 3,\n\t\tn: tagger,\n\t\to: bag\n\t}\n});\n\n\n\n// PIPE BAGS INTO EFFECT MANAGERS\n//\n// Effects must be queued!\n//\n// Say your init contains a synchronous command, like Time.now or Time.here\n//\n//   - This will produce a batch of effects (FX_1)\n//   - The synchronous task triggers the subsequent `update` call\n//   - This will produce a batch of effects (FX_2)\n//\n// If we just start dispatching FX_2, subscriptions from FX_2 can be processed\n// before subscriptions from FX_1. No good! Earlier versions of this code had\n// this problem, leading to these reports:\n//\n//   https://github.com/elm/core/issues/980\n//   https://github.com/elm/core/pull/981\n//   https://github.com/elm/compiler/issues/1776\n//\n// The queue is necessary to avoid ordering issues for synchronous commands.\n\n\n// Why use true/false here? Why not just check the length of the queue?\n// The goal is to detect \"are we currently dispatching effects?\" If we\n// are, we need to bail and let the ongoing while loop handle things.\n//\n// Now say the queue has 1 element. When we dequeue the final element,\n// the queue will be empty, but we are still actively dispatching effects.\n// So you could get queue jumping in a really tricky category of cases.\n//\nvar _Platform_effectsQueue = [];\nvar _Platform_effectsActive = false;\n\n\nfunction _Platform_enqueueEffects(managers, cmdBag, subBag)\n{\n\t_Platform_effectsQueue.push({ p: managers, q: cmdBag, r: subBag });\n\n\tif (_Platform_effectsActive) return;\n\n\t_Platform_effectsActive = true;\n\tfor (var fx; fx = _Platform_effectsQueue.shift(); )\n\t{\n\t\t_Platform_dispatchEffects(fx.p, fx.q, fx.r);\n\t}\n\t_Platform_effectsActive = false;\n}\n\n\nfunction _Platform_dispatchEffects(managers, cmdBag, subBag)\n{\n\tvar effectsDict = {};\n\t_Platform_gatherEffects(true, cmdBag, effectsDict, null);\n\t_Platform_gatherEffects(false, subBag, effectsDict, null);\n\n\tfor (var home in managers)\n\t{\n\t\t_Scheduler_rawSend(managers[home], {\n\t\t\t$: 'fx',\n\t\t\ta: effectsDict[home] || { i: _List_Nil, j: _List_Nil }\n\t\t});\n\t}\n}\n\n\nfunction _Platform_gatherEffects(isCmd, bag, effectsDict, taggers)\n{\n\tswitch (bag.$)\n\t{\n\t\tcase 1:\n\t\t\tvar home = bag.k;\n\t\t\tvar effect = _Platform_toEffect(isCmd, home, taggers, bag.l);\n\t\t\teffectsDict[home] = _Platform_insert(isCmd, effect, effectsDict[home]);\n\t\t\treturn;\n\n\t\tcase 2:\n\t\t\tfor (var list = bag.m; list.b; list = list.b) // WHILE_CONS\n\t\t\t{\n\t\t\t\t_Platform_gatherEffects(isCmd, list.a, effectsDict, taggers);\n\t\t\t}\n\t\t\treturn;\n\n\t\tcase 3:\n\t\t\t_Platform_gatherEffects(isCmd, bag.o, effectsDict, {\n\t\t\t\ts: bag.n,\n\t\t\t\tt: taggers\n\t\t\t});\n\t\t\treturn;\n\t}\n}\n\n\nfunction _Platform_toEffect(isCmd, home, taggers, value)\n{\n\tfunction applyTaggers(x)\n\t{\n\t\tfor (var temp = taggers; temp; temp = temp.t)\n\t\t{\n\t\t\tx = temp.s(x);\n\t\t}\n\t\treturn x;\n\t}\n\n\tvar map = isCmd\n\t\t? _Platform_effectManagers[home].e\n\t\t: _Platform_effectManagers[home].f;\n\n\treturn A2(map, applyTaggers, value)\n}\n\n\nfunction _Platform_insert(isCmd, newEffect, effects)\n{\n\teffects = effects || { i: _List_Nil, j: _List_Nil };\n\n\tisCmd\n\t\t? (effects.i = _List_Cons(newEffect, effects.i))\n\t\t: (effects.j = _List_Cons(newEffect, effects.j));\n\n\treturn effects;\n}\n\n\n\n// PORTS\n\n\nfunction _Platform_checkPortName(name)\n{\n\tif (_Platform_effectManagers[name])\n\t{\n\t\t_Debug_crash(3, name)\n\t}\n}\n\n\n\n// OUTGOING PORTS\n\n\nfunction _Platform_outgoingPort(name, converter)\n{\n\t_Platform_checkPortName(name);\n\t_Platform_effectManagers[name] = {\n\t\te: _Platform_outgoingPortMap,\n\t\tu: converter,\n\t\ta: _Platform_setupOutgoingPort\n\t};\n\treturn _Platform_leaf(name);\n}\n\n\nvar _Platform_outgoingPortMap = F2(function(tagger, value) { return value; });\n\n\nfunction _Platform_setupOutgoingPort(name)\n{\n\tvar subs = [];\n\tvar converter = _Platform_effectManagers[name].u;\n\n\t// CREATE MANAGER\n\n\tvar init = _Process_sleep(0);\n\n\t_Platform_effectManagers[name].b = init;\n\t_Platform_effectManagers[name].c = F3(function(router, cmdList, state)\n\t{\n\t\tfor ( ; cmdList.b; cmdList = cmdList.b) // WHILE_CONS\n\t\t{\n\t\t\t// grab a separate reference to subs in case unsubscribe is called\n\t\t\tvar currentSubs = subs;\n\t\t\tvar value = _Json_unwrap(converter(cmdList.a));\n\t\t\tfor (var i = 0; i < currentSubs.length; i++)\n\t\t\t{\n\t\t\t\tcurrentSubs[i](value);\n\t\t\t}\n\t\t}\n\t\treturn init;\n\t});\n\n\t// PUBLIC API\n\n\tfunction subscribe(callback)\n\t{\n\t\tsubs.push(callback);\n\t}\n\n\tfunction unsubscribe(callback)\n\t{\n\t\t// copy subs into a new array in case unsubscribe is called within a\n\t\t// subscribed callback\n\t\tsubs = subs.slice();\n\t\tvar index = subs.indexOf(callback);\n\t\tif (index >= 0)\n\t\t{\n\t\t\tsubs.splice(index, 1);\n\t\t}\n\t}\n\n\treturn {\n\t\tsubscribe: subscribe,\n\t\tunsubscribe: unsubscribe\n\t};\n}\n\n\n\n// INCOMING PORTS\n\n\nfunction _Platform_incomingPort(name, converter)\n{\n\t_Platform_checkPortName(name);\n\t_Platform_effectManagers[name] = {\n\t\tf: _Platform_incomingPortMap,\n\t\tu: converter,\n\t\ta: _Platform_setupIncomingPort\n\t};\n\treturn _Platform_leaf(name);\n}\n\n\nvar _Platform_incomingPortMap = F2(function(tagger, finalTagger)\n{\n\treturn function(value)\n\t{\n\t\treturn tagger(finalTagger(value));\n\t};\n});\n\n\nfunction _Platform_setupIncomingPort(name, sendToApp)\n{\n\tvar subs = _List_Nil;\n\tvar converter = _Platform_effectManagers[name].u;\n\n\t// CREATE MANAGER\n\n\tvar init = _Scheduler_succeed(null);\n\n\t_Platform_effectManagers[name].b = init;\n\t_Platform_effectManagers[name].c = F3(function(router, subList, state)\n\t{\n\t\tsubs = subList;\n\t\treturn init;\n\t});\n\n\t// PUBLIC API\n\n\tfunction send(incomingValue)\n\t{\n\t\tvar result = A2(_Json_run, converter, _Json_wrap(incomingValue));\n\n\t\t$elm$core$Result$isOk(result) || _Debug_crash(4, name, result.a);\n\n\t\tvar value = result.a;\n\t\tfor (var temp = subs; temp.b; temp = temp.b) // WHILE_CONS\n\t\t{\n\t\t\tsendToApp(temp.a(value));\n\t\t}\n\t}\n\n\treturn { send: send };\n}\n\n\n\n// EXPORT ELM MODULES\n//\n// Have DEBUG and PROD versions so that we can (1) give nicer errors in\n// debug mode and (2) not pay for the bits needed for that in prod mode.\n//\n\n\nfunction _Platform_export(exports)\n{\n\tscope['Elm']\n\t\t? _Platform_mergeExportsProd(scope['Elm'], exports)\n\t\t: scope['Elm'] = exports;\n}\n\n\nfunction _Platform_mergeExportsProd(obj, exports)\n{\n\tfor (var name in exports)\n\t{\n\t\t(name in obj)\n\t\t\t? (name == 'init')\n\t\t\t\t? _Debug_crash(6)\n\t\t\t\t: _Platform_mergeExportsProd(obj[name], exports[name])\n\t\t\t: (obj[name] = exports[name]);\n\t}\n}\n\n\nfunction _Platform_export_UNUSED(exports)\n{\n\tscope['Elm']\n\t\t? _Platform_mergeExportsDebug('Elm', scope['Elm'], exports)\n\t\t: scope['Elm'] = exports;\n}\n\n\nfunction _Platform_mergeExportsDebug(moduleName, obj, exports)\n{\n\tfor (var name in exports)\n\t{\n\t\t(name in obj)\n\t\t\t? (name == 'init')\n\t\t\t\t? _Debug_crash(6, moduleName)\n\t\t\t\t: _Platform_mergeExportsDebug(moduleName + '.' + name, obj[name], exports[name])\n\t\t\t: (obj[name] = exports[name]);\n\t}\n}\n\n\n\n\n// HELPERS\n\n\nvar _VirtualDom_divertHrefToApp;\n\nvar _VirtualDom_doc = typeof document !== 'undefined' ? document : {};\n\n\nfunction _VirtualDom_appendChild(parent, child)\n{\n\tparent.appendChild(child);\n}\n\nvar _VirtualDom_init = F4(function(virtualNode, flagDecoder, debugMetadata, args)\n{\n\t// NOTE: this function needs _Platform_export available to work\n\n\t/**/\n\tvar node = args['node'];\n\t//*/\n\t/**_UNUSED/\n\tvar node = args && args['node'] ? args['node'] : _Debug_crash(0);\n\t//*/\n\n\tnode.parentNode.replaceChild(\n\t\t_VirtualDom_render(virtualNode, function() {}),\n\t\tnode\n\t);\n\n\treturn {};\n});\n\n\n\n// TEXT\n\n\nfunction _VirtualDom_text(string)\n{\n\treturn {\n\t\t$: 0,\n\t\ta: string\n\t};\n}\n\n\n\n// NODE\n\n\nvar _VirtualDom_nodeNS = F2(function(namespace, tag)\n{\n\treturn F2(function(factList, kidList)\n\t{\n\t\tfor (var kids = [], descendantsCount = 0; kidList.b; kidList = kidList.b) // WHILE_CONS\n\t\t{\n\t\t\tvar kid = kidList.a;\n\t\t\tdescendantsCount += (kid.b || 0);\n\t\t\tkids.push(kid);\n\t\t}\n\t\tdescendantsCount += kids.length;\n\n\t\treturn {\n\t\t\t$: 1,\n\t\t\tc: tag,\n\t\t\td: _VirtualDom_organizeFacts(factList),\n\t\t\te: kids,\n\t\t\tf: namespace,\n\t\t\tb: descendantsCount\n\t\t};\n\t});\n});\n\n\nvar _VirtualDom_node = _VirtualDom_nodeNS(undefined);\n\n\n\n// KEYED NODE\n\n\nvar _VirtualDom_keyedNodeNS = F2(function(namespace, tag)\n{\n\treturn F2(function(factList, kidList)\n\t{\n\t\tfor (var kids = [], descendantsCount = 0; kidList.b; kidList = kidList.b) // WHILE_CONS\n\t\t{\n\t\t\tvar kid = kidList.a;\n\t\t\tdescendantsCount += (kid.b.b || 0);\n\t\t\tkids.push(kid);\n\t\t}\n\t\tdescendantsCount += kids.length;\n\n\t\treturn {\n\t\t\t$: 2,\n\t\t\tc: tag,\n\t\t\td: _VirtualDom_organizeFacts(factList),\n\t\t\te: kids,\n\t\t\tf: namespace,\n\t\t\tb: descendantsCount\n\t\t};\n\t});\n});\n\n\nvar _VirtualDom_keyedNode = _VirtualDom_keyedNodeNS(undefined);\n\n\n\n// CUSTOM\n\n\nfunction _VirtualDom_custom(factList, model, render, diff)\n{\n\treturn {\n\t\t$: 3,\n\t\td: _VirtualDom_organizeFacts(factList),\n\t\tg: model,\n\t\th: render,\n\t\ti: diff\n\t};\n}\n\n\n\n// MAP\n\n\nvar _VirtualDom_map = F2(function(tagger, node)\n{\n\treturn {\n\t\t$: 4,\n\t\tj: tagger,\n\t\tk: node,\n\t\tb: 1 + (node.b || 0)\n\t};\n});\n\n\n\n// LAZY\n\n\nfunction _VirtualDom_thunk(refs, thunk)\n{\n\treturn {\n\t\t$: 5,\n\t\tl: refs,\n\t\tm: thunk,\n\t\tk: undefined\n\t};\n}\n\nvar _VirtualDom_lazy = F2(function(func, a)\n{\n\treturn _VirtualDom_thunk([func, a], function() {\n\t\treturn func(a);\n\t});\n});\n\nvar _VirtualDom_lazy2 = F3(function(func, a, b)\n{\n\treturn _VirtualDom_thunk([func, a, b], function() {\n\t\treturn A2(func, a, b);\n\t});\n});\n\nvar _VirtualDom_lazy3 = F4(function(func, a, b, c)\n{\n\treturn _VirtualDom_thunk([func, a, b, c], function() {\n\t\treturn A3(func, a, b, c);\n\t});\n});\n\nvar _VirtualDom_lazy4 = F5(function(func, a, b, c, d)\n{\n\treturn _VirtualDom_thunk([func, a, b, c, d], function() {\n\t\treturn A4(func, a, b, c, d);\n\t});\n});\n\nvar _VirtualDom_lazy5 = F6(function(func, a, b, c, d, e)\n{\n\treturn _VirtualDom_thunk([func, a, b, c, d, e], function() {\n\t\treturn A5(func, a, b, c, d, e);\n\t});\n});\n\nvar _VirtualDom_lazy6 = F7(function(func, a, b, c, d, e, f)\n{\n\treturn _VirtualDom_thunk([func, a, b, c, d, e, f], function() {\n\t\treturn A6(func, a, b, c, d, e, f);\n\t});\n});\n\nvar _VirtualDom_lazy7 = F8(function(func, a, b, c, d, e, f, g)\n{\n\treturn _VirtualDom_thunk([func, a, b, c, d, e, f, g], function() {\n\t\treturn A7(func, a, b, c, d, e, f, g);\n\t});\n});\n\nvar _VirtualDom_lazy8 = F9(function(func, a, b, c, d, e, f, g, h)\n{\n\treturn _VirtualDom_thunk([func, a, b, c, d, e, f, g, h], function() {\n\t\treturn A8(func, a, b, c, d, e, f, g, h);\n\t});\n});\n\n\n\n// FACTS\n\n\nvar _VirtualDom_on = F2(function(key, handler)\n{\n\treturn {\n\t\t$: 'a0',\n\t\tn: key,\n\t\to: handler\n\t};\n});\nvar _VirtualDom_style = F2(function(key, value)\n{\n\treturn {\n\t\t$: 'a1',\n\t\tn: key,\n\t\to: value\n\t};\n});\nvar _VirtualDom_property = F2(function(key, value)\n{\n\treturn {\n\t\t$: 'a2',\n\t\tn: key,\n\t\to: value\n\t};\n});\nvar _VirtualDom_attribute = F2(function(key, value)\n{\n\treturn {\n\t\t$: 'a3',\n\t\tn: key,\n\t\to: value\n\t};\n});\nvar _VirtualDom_attributeNS = F3(function(namespace, key, value)\n{\n\treturn {\n\t\t$: 'a4',\n\t\tn: key,\n\t\to: { f: namespace, o: value }\n\t};\n});\n\n\n\n// XSS ATTACK VECTOR CHECKS\n\n\nfunction _VirtualDom_noScript(tag)\n{\n\treturn tag == 'script' ? 'p' : tag;\n}\n\nfunction _VirtualDom_noOnOrFormAction(key)\n{\n\treturn /^(on|formAction$)/i.test(key) ? 'data-' + key : key;\n}\n\nfunction _VirtualDom_noInnerHtmlOrFormAction(key)\n{\n\treturn key == 'innerHTML' || key == 'formAction' ? 'data-' + key : key;\n}\n\nfunction _VirtualDom_noJavaScriptUri(value)\n{\n\treturn /^javascript:/i.test(value.replace(/\\s/g,'')) ? '' : value;\n}\n\nfunction _VirtualDom_noJavaScriptUri_UNUSED(value)\n{\n\treturn /^javascript:/i.test(value.replace(/\\s/g,''))\n\t\t? 'javascript:alert(\"This is an XSS vector. Please use ports or web components instead.\")'\n\t\t: value;\n}\n\nfunction _VirtualDom_noJavaScriptOrHtmlUri(value)\n{\n\treturn /^\\s*(javascript:|data:text\\/html)/i.test(value) ? '' : value;\n}\n\nfunction _VirtualDom_noJavaScriptOrHtmlUri_UNUSED(value)\n{\n\treturn /^\\s*(javascript:|data:text\\/html)/i.test(value)\n\t\t? 'javascript:alert(\"This is an XSS vector. Please use ports or web components instead.\")'\n\t\t: value;\n}\n\n\n\n// MAP FACTS\n\n\nvar _VirtualDom_mapAttribute = F2(function(func, attr)\n{\n\treturn (attr.$ === 'a0')\n\t\t? A2(_VirtualDom_on, attr.n, _VirtualDom_mapHandler(func, attr.o))\n\t\t: attr;\n});\n\nfunction _VirtualDom_mapHandler(func, handler)\n{\n\tvar tag = $elm$virtual_dom$VirtualDom$toHandlerInt(handler);\n\n\t// 0 = Normal\n\t// 1 = MayStopPropagation\n\t// 2 = MayPreventDefault\n\t// 3 = Custom\n\n\treturn {\n\t\t$: handler.$,\n\t\ta:\n\t\t\t!tag\n\t\t\t\t? A2($elm$json$Json$Decode$map, func, handler.a)\n\t\t\t\t:\n\t\t\tA3($elm$json$Json$Decode$map2,\n\t\t\t\ttag < 3\n\t\t\t\t\t? _VirtualDom_mapEventTuple\n\t\t\t\t\t: _VirtualDom_mapEventRecord,\n\t\t\t\t$elm$json$Json$Decode$succeed(func),\n\t\t\t\thandler.a\n\t\t\t)\n\t};\n}\n\nvar _VirtualDom_mapEventTuple = F2(function(func, tuple)\n{\n\treturn _Utils_Tuple2(func(tuple.a), tuple.b);\n});\n\nvar _VirtualDom_mapEventRecord = F2(function(func, record)\n{\n\treturn {\n\t\tx: func(record.x),\n\t\t_: record._,\n\t\tX: record.X\n\t}\n});\n\n\n\n// ORGANIZE FACTS\n\n\nfunction _VirtualDom_organizeFacts(factList)\n{\n\tfor (var facts = {}; factList.b; factList = factList.b) // WHILE_CONS\n\t{\n\t\tvar entry = factList.a;\n\n\t\tvar tag = entry.$;\n\t\tvar key = entry.n;\n\t\tvar value = entry.o;\n\n\t\tif (tag === 'a2')\n\t\t{\n\t\t\t(key === 'className')\n\t\t\t\t? _VirtualDom_addClass(facts, key, _Json_unwrap(value))\n\t\t\t\t: facts[key] = _Json_unwrap(value);\n\n\t\t\tcontinue;\n\t\t}\n\n\t\tvar subFacts = facts[tag] || (facts[tag] = {});\n\t\t(tag === 'a3' && key === 'class')\n\t\t\t? _VirtualDom_addClass(subFacts, key, value)\n\t\t\t: subFacts[key] = value;\n\t}\n\n\treturn facts;\n}\n\nfunction _VirtualDom_addClass(object, key, newClass)\n{\n\tvar classes = object[key];\n\tobject[key] = classes ? classes + ' ' + newClass : newClass;\n}\n\n\n\n// RENDER\n\n\nfunction _VirtualDom_render(vNode, eventNode)\n{\n\tvar tag = vNode.$;\n\n\tif (tag === 5)\n\t{\n\t\treturn _VirtualDom_render(vNode.k || (vNode.k = vNode.m()), eventNode);\n\t}\n\n\tif (tag === 0)\n\t{\n\t\treturn _VirtualDom_doc.createTextNode(vNode.a);\n\t}\n\n\tif (tag === 4)\n\t{\n\t\tvar subNode = vNode.k;\n\t\tvar tagger = vNode.j;\n\n\t\twhile (subNode.$ === 4)\n\t\t{\n\t\t\ttypeof tagger !== 'object'\n\t\t\t\t? tagger = [tagger, subNode.j]\n\t\t\t\t: tagger.push(subNode.j);\n\n\t\t\tsubNode = subNode.k;\n\t\t}\n\n\t\tvar subEventRoot = { j: tagger, p: eventNode };\n\t\tvar domNode = _VirtualDom_render(subNode, subEventRoot);\n\t\tdomNode.elm_event_node_ref = subEventRoot;\n\t\treturn domNode;\n\t}\n\n\tif (tag === 3)\n\t{\n\t\tvar domNode = vNode.h(vNode.g);\n\t\t_VirtualDom_applyFacts(domNode, eventNode, vNode.d);\n\t\treturn domNode;\n\t}\n\n\t// at this point `tag` must be 1 or 2\n\n\tvar domNode = vNode.f\n\t\t? _VirtualDom_doc.createElementNS(vNode.f, vNode.c)\n\t\t: _VirtualDom_doc.createElement(vNode.c);\n\n\tif (_VirtualDom_divertHrefToApp && vNode.c == 'a')\n\t{\n\t\tdomNode.addEventListener('click', _VirtualDom_divertHrefToApp(domNode));\n\t}\n\n\t_VirtualDom_applyFacts(domNode, eventNode, vNode.d);\n\n\tfor (var kids = vNode.e, i = 0; i < kids.length; i++)\n\t{\n\t\t_VirtualDom_appendChild(domNode, _VirtualDom_render(tag === 1 ? kids[i] : kids[i].b, eventNode));\n\t}\n\n\treturn domNode;\n}\n\n\n\n// APPLY FACTS\n\n\nfunction _VirtualDom_applyFacts(domNode, eventNode, facts)\n{\n\tfor (var key in facts)\n\t{\n\t\tvar value = facts[key];\n\n\t\tkey === 'a1'\n\t\t\t? _VirtualDom_applyStyles(domNode, value)\n\t\t\t:\n\t\tkey === 'a0'\n\t\t\t? _VirtualDom_applyEvents(domNode, eventNode, value)\n\t\t\t:\n\t\tkey === 'a3'\n\t\t\t? _VirtualDom_applyAttrs(domNode, value)\n\t\t\t:\n\t\tkey === 'a4'\n\t\t\t? _VirtualDom_applyAttrsNS(domNode, value)\n\t\t\t:\n\t\t((key !== 'value' && key !== 'checked') || domNode[key] !== value) && (domNode[key] = value);\n\t}\n}\n\n\n\n// APPLY STYLES\n\n\nfunction _VirtualDom_applyStyles(domNode, styles)\n{\n\tvar domNodeStyle = domNode.style;\n\n\tfor (var key in styles)\n\t{\n\t\tdomNodeStyle[key] = styles[key];\n\t}\n}\n\n\n\n// APPLY ATTRS\n\n\nfunction _VirtualDom_applyAttrs(domNode, attrs)\n{\n\tfor (var key in attrs)\n\t{\n\t\tvar value = attrs[key];\n\t\ttypeof value !== 'undefined'\n\t\t\t? domNode.setAttribute(key, value)\n\t\t\t: domNode.removeAttribute(key);\n\t}\n}\n\n\n\n// APPLY NAMESPACED ATTRS\n\n\nfunction _VirtualDom_applyAttrsNS(domNode, nsAttrs)\n{\n\tfor (var key in nsAttrs)\n\t{\n\t\tvar pair = nsAttrs[key];\n\t\tvar namespace = pair.f;\n\t\tvar value = pair.o;\n\n\t\ttypeof value !== 'undefined'\n\t\t\t? domNode.setAttributeNS(namespace, key, value)\n\t\t\t: domNode.removeAttributeNS(namespace, key);\n\t}\n}\n\n\n\n// APPLY EVENTS\n\n\nfunction _VirtualDom_applyEvents(domNode, eventNode, events)\n{\n\tvar allCallbacks = domNode.elmFs || (domNode.elmFs = {});\n\n\tfor (var key in events)\n\t{\n\t\tvar newHandler = events[key];\n\t\tvar oldCallback = allCallbacks[key];\n\n\t\tif (!newHandler)\n\t\t{\n\t\t\tdomNode.removeEventListener(key, oldCallback);\n\t\t\tallCallbacks[key] = undefined;\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (oldCallback)\n\t\t{\n\t\t\tvar oldHandler = oldCallback.q;\n\t\t\tif (oldHandler.$ === newHandler.$)\n\t\t\t{\n\t\t\t\toldCallback.q = newHandler;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tdomNode.removeEventListener(key, oldCallback);\n\t\t}\n\n\t\toldCallback = _VirtualDom_makeCallback(eventNode, newHandler);\n\t\tdomNode.addEventListener(key, oldCallback,\n\t\t\t_VirtualDom_passiveSupported\n\t\t\t&& { passive: $elm$virtual_dom$VirtualDom$toHandlerInt(newHandler) < 2 }\n\t\t);\n\t\tallCallbacks[key] = oldCallback;\n\t}\n}\n\n\n\n// PASSIVE EVENTS\n\n\nvar _VirtualDom_passiveSupported;\n\ntry\n{\n\twindow.addEventListener('t', null, Object.defineProperty({}, 'passive', {\n\t\tget: function() { _VirtualDom_passiveSupported = true; }\n\t}));\n}\ncatch(e) {}\n\n\n\n// EVENT HANDLERS\n\n\nfunction _VirtualDom_makeCallback(eventNode, initialHandler)\n{\n\tfunction callback(event)\n\t{\n\t\tvar handler = callback.q;\n\t\tvar result = _Json_runHelp(handler.a, event);\n\n\t\tif (!$elm$core$Result$isOk(result))\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tvar tag = $elm$virtual_dom$VirtualDom$toHandlerInt(handler);\n\n\t\t// 0 = Normal\n\t\t// 1 = MayStopPropagation\n\t\t// 2 = MayPreventDefault\n\t\t// 3 = Custom\n\n\t\tvar value = result.a;\n\t\tvar message = !tag ? value : tag < 3 ? value.a : value.x;\n\t\tvar stopPropagation = tag == 1 ? value.b : tag == 3 && value._;\n\t\tvar currentEventNode = (\n\t\t\tstopPropagation && event.stopPropagation(),\n\t\t\t(tag == 2 ? value.b : tag == 3 && value.X) && event.preventDefault(),\n\t\t\teventNode\n\t\t);\n\t\tvar tagger;\n\t\tvar i;\n\t\twhile (tagger = currentEventNode.j)\n\t\t{\n\t\t\tif (typeof tagger == 'function')\n\t\t\t{\n\t\t\t\tmessage = tagger(message);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tfor (var i = tagger.length; i--; )\n\t\t\t\t{\n\t\t\t\t\tmessage = tagger[i](message);\n\t\t\t\t}\n\t\t\t}\n\t\t\tcurrentEventNode = currentEventNode.p;\n\t\t}\n\t\tcurrentEventNode(message, stopPropagation); // stopPropagation implies isSync\n\t}\n\n\tcallback.q = initialHandler;\n\n\treturn callback;\n}\n\nfunction _VirtualDom_equalEvents(x, y)\n{\n\treturn x.$ == y.$ && _Json_equality(x.a, y.a);\n}\n\n\n\n// DIFF\n\n\n// TODO: Should we do patches like in iOS?\n//\n// type Patch\n//   = At Int Patch\n//   | Batch (List Patch)\n//   | Change ...\n//\n// How could it not be better?\n//\nfunction _VirtualDom_diff(x, y)\n{\n\tvar patches = [];\n\t_VirtualDom_diffHelp(x, y, patches, 0);\n\treturn patches;\n}\n\n\nfunction _VirtualDom_pushPatch(patches, type, index, data)\n{\n\tvar patch = {\n\t\t$: type,\n\t\tr: index,\n\t\ts: data,\n\t\tt: undefined,\n\t\tu: undefined\n\t};\n\tpatches.push(patch);\n\treturn patch;\n}\n\n\nfunction _VirtualDom_diffHelp(x, y, patches, index)\n{\n\tif (x === y)\n\t{\n\t\treturn;\n\t}\n\n\tvar xType = x.$;\n\tvar yType = y.$;\n\n\t// Bail if you run into different types of nodes. Implies that the\n\t// structure has changed significantly and it's not worth a diff.\n\tif (xType !== yType)\n\t{\n\t\tif (xType === 1 && yType === 2)\n\t\t{\n\t\t\ty = _VirtualDom_dekey(y);\n\t\t\tyType = 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t_VirtualDom_pushPatch(patches, 0, index, y);\n\t\t\treturn;\n\t\t}\n\t}\n\n\t// Now we know that both nodes are the same $.\n\tswitch (yType)\n\t{\n\t\tcase 5:\n\t\t\tvar xRefs = x.l;\n\t\t\tvar yRefs = y.l;\n\t\t\tvar i = xRefs.length;\n\t\t\tvar same = i === yRefs.length;\n\t\t\twhile (same && i--)\n\t\t\t{\n\t\t\t\tsame = xRefs[i] === yRefs[i];\n\t\t\t}\n\t\t\tif (same)\n\t\t\t{\n\t\t\t\ty.k = x.k;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\ty.k = y.m();\n\t\t\tvar subPatches = [];\n\t\t\t_VirtualDom_diffHelp(x.k, y.k, subPatches, 0);\n\t\t\tsubPatches.length > 0 && _VirtualDom_pushPatch(patches, 1, index, subPatches);\n\t\t\treturn;\n\n\t\tcase 4:\n\t\t\t// gather nested taggers\n\t\t\tvar xTaggers = x.j;\n\t\t\tvar yTaggers = y.j;\n\t\t\tvar nesting = false;\n\n\t\t\tvar xSubNode = x.k;\n\t\t\twhile (xSubNode.$ === 4)\n\t\t\t{\n\t\t\t\tnesting = true;\n\n\t\t\t\ttypeof xTaggers !== 'object'\n\t\t\t\t\t? xTaggers = [xTaggers, xSubNode.j]\n\t\t\t\t\t: xTaggers.push(xSubNode.j);\n\n\t\t\t\txSubNode = xSubNode.k;\n\t\t\t}\n\n\t\t\tvar ySubNode = y.k;\n\t\t\twhile (ySubNode.$ === 4)\n\t\t\t{\n\t\t\t\tnesting = true;\n\n\t\t\t\ttypeof yTaggers !== 'object'\n\t\t\t\t\t? yTaggers = [yTaggers, ySubNode.j]\n\t\t\t\t\t: yTaggers.push(ySubNode.j);\n\n\t\t\t\tySubNode = ySubNode.k;\n\t\t\t}\n\n\t\t\t// Just bail if different numbers of taggers. This implies the\n\t\t\t// structure of the virtual DOM has changed.\n\t\t\tif (nesting && xTaggers.length !== yTaggers.length)\n\t\t\t{\n\t\t\t\t_VirtualDom_pushPatch(patches, 0, index, y);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// check if taggers are \"the same\"\n\t\t\tif (nesting ? !_VirtualDom_pairwiseRefEqual(xTaggers, yTaggers) : xTaggers !== yTaggers)\n\t\t\t{\n\t\t\t\t_VirtualDom_pushPatch(patches, 2, index, yTaggers);\n\t\t\t}\n\n\t\t\t// diff everything below the taggers\n\t\t\t_VirtualDom_diffHelp(xSubNode, ySubNode, patches, index + 1);\n\t\t\treturn;\n\n\t\tcase 0:\n\t\t\tif (x.a !== y.a)\n\t\t\t{\n\t\t\t\t_VirtualDom_pushPatch(patches, 3, index, y.a);\n\t\t\t}\n\t\t\treturn;\n\n\t\tcase 1:\n\t\t\t_VirtualDom_diffNodes(x, y, patches, index, _VirtualDom_diffKids);\n\t\t\treturn;\n\n\t\tcase 2:\n\t\t\t_VirtualDom_diffNodes(x, y, patches, index, _VirtualDom_diffKeyedKids);\n\t\t\treturn;\n\n\t\tcase 3:\n\t\t\tif (x.h !== y.h)\n\t\t\t{\n\t\t\t\t_VirtualDom_pushPatch(patches, 0, index, y);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar factsDiff = _VirtualDom_diffFacts(x.d, y.d);\n\t\t\tfactsDiff && _VirtualDom_pushPatch(patches, 4, index, factsDiff);\n\n\t\t\tvar patch = y.i(x.g, y.g);\n\t\t\tpatch && _VirtualDom_pushPatch(patches, 5, index, patch);\n\n\t\t\treturn;\n\t}\n}\n\n// assumes the incoming arrays are the same length\nfunction _VirtualDom_pairwiseRefEqual(as, bs)\n{\n\tfor (var i = 0; i < as.length; i++)\n\t{\n\t\tif (as[i] !== bs[i])\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\nfunction _VirtualDom_diffNodes(x, y, patches, index, diffKids)\n{\n\t// Bail if obvious indicators have changed. Implies more serious\n\t// structural changes such that it's not worth it to diff.\n\tif (x.c !== y.c || x.f !== y.f)\n\t{\n\t\t_VirtualDom_pushPatch(patches, 0, index, y);\n\t\treturn;\n\t}\n\n\tvar factsDiff = _VirtualDom_diffFacts(x.d, y.d);\n\tfactsDiff && _VirtualDom_pushPatch(patches, 4, index, factsDiff);\n\n\tdiffKids(x, y, patches, index);\n}\n\n\n\n// DIFF FACTS\n\n\n// TODO Instead of creating a new diff object, it's possible to just test if\n// there *is* a diff. During the actual patch, do the diff again and make the\n// modifications directly. This way, there's no new allocations. Worth it?\nfunction _VirtualDom_diffFacts(x, y, category)\n{\n\tvar diff;\n\n\t// look for changes and removals\n\tfor (var xKey in x)\n\t{\n\t\tif (xKey === 'a1' || xKey === 'a0' || xKey === 'a3' || xKey === 'a4')\n\t\t{\n\t\t\tvar subDiff = _VirtualDom_diffFacts(x[xKey], y[xKey] || {}, xKey);\n\t\t\tif (subDiff)\n\t\t\t{\n\t\t\t\tdiff = diff || {};\n\t\t\t\tdiff[xKey] = subDiff;\n\t\t\t}\n\t\t\tcontinue;\n\t\t}\n\n\t\t// remove if not in the new facts\n\t\tif (!(xKey in y))\n\t\t{\n\t\t\tdiff = diff || {};\n\t\t\tdiff[xKey] =\n\t\t\t\t!category\n\t\t\t\t\t? (typeof x[xKey] === 'string' ? '' : null)\n\t\t\t\t\t:\n\t\t\t\t(category === 'a1')\n\t\t\t\t\t? ''\n\t\t\t\t\t:\n\t\t\t\t(category === 'a0' || category === 'a3')\n\t\t\t\t\t? undefined\n\t\t\t\t\t:\n\t\t\t\t{ f: x[xKey].f, o: undefined };\n\n\t\t\tcontinue;\n\t\t}\n\n\t\tvar xValue = x[xKey];\n\t\tvar yValue = y[xKey];\n\n\t\t// reference equal, so don't worry about it\n\t\tif (xValue === yValue && xKey !== 'value' && xKey !== 'checked'\n\t\t\t|| category === 'a0' && _VirtualDom_equalEvents(xValue, yValue))\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\n\t\tdiff = diff || {};\n\t\tdiff[xKey] = yValue;\n\t}\n\n\t// add new stuff\n\tfor (var yKey in y)\n\t{\n\t\tif (!(yKey in x))\n\t\t{\n\t\t\tdiff = diff || {};\n\t\t\tdiff[yKey] = y[yKey];\n\t\t}\n\t}\n\n\treturn diff;\n}\n\n\n\n// DIFF KIDS\n\n\nfunction _VirtualDom_diffKids(xParent, yParent, patches, index)\n{\n\tvar xKids = xParent.e;\n\tvar yKids = yParent.e;\n\n\tvar xLen = xKids.length;\n\tvar yLen = yKids.length;\n\n\t// FIGURE OUT IF THERE ARE INSERTS OR REMOVALS\n\n\tif (xLen > yLen)\n\t{\n\t\t_VirtualDom_pushPatch(patches, 6, index, {\n\t\t\tv: yLen,\n\t\t\ti: xLen - yLen\n\t\t});\n\t}\n\telse if (xLen < yLen)\n\t{\n\t\t_VirtualDom_pushPatch(patches, 7, index, {\n\t\t\tv: xLen,\n\t\t\te: yKids\n\t\t});\n\t}\n\n\t// PAIRWISE DIFF EVERYTHING ELSE\n\n\tfor (var minLen = xLen < yLen ? xLen : yLen, i = 0; i < minLen; i++)\n\t{\n\t\tvar xKid = xKids[i];\n\t\t_VirtualDom_diffHelp(xKid, yKids[i], patches, ++index);\n\t\tindex += xKid.b || 0;\n\t}\n}\n\n\n\n// KEYED DIFF\n\n\nfunction _VirtualDom_diffKeyedKids(xParent, yParent, patches, rootIndex)\n{\n\tvar localPatches = [];\n\n\tvar changes = {}; // Dict String Entry\n\tvar inserts = []; // Array { index : Int, entry : Entry }\n\t// type Entry = { tag : String, vnode : VNode, index : Int, data : _ }\n\n\tvar xKids = xParent.e;\n\tvar yKids = yParent.e;\n\tvar xLen = xKids.length;\n\tvar yLen = yKids.length;\n\tvar xIndex = 0;\n\tvar yIndex = 0;\n\n\tvar index = rootIndex;\n\n\twhile (xIndex < xLen && yIndex < yLen)\n\t{\n\t\tvar x = xKids[xIndex];\n\t\tvar y = yKids[yIndex];\n\n\t\tvar xKey = x.a;\n\t\tvar yKey = y.a;\n\t\tvar xNode = x.b;\n\t\tvar yNode = y.b;\n\n\t\tvar newMatch = undefined;\n\t\tvar oldMatch = undefined;\n\n\t\t// check if keys match\n\n\t\tif (xKey === yKey)\n\t\t{\n\t\t\tindex++;\n\t\t\t_VirtualDom_diffHelp(xNode, yNode, localPatches, index);\n\t\t\tindex += xNode.b || 0;\n\n\t\t\txIndex++;\n\t\t\tyIndex++;\n\t\t\tcontinue;\n\t\t}\n\n\t\t// look ahead 1 to detect insertions and removals.\n\n\t\tvar xNext = xKids[xIndex + 1];\n\t\tvar yNext = yKids[yIndex + 1];\n\n\t\tif (xNext)\n\t\t{\n\t\t\tvar xNextKey = xNext.a;\n\t\t\tvar xNextNode = xNext.b;\n\t\t\toldMatch = yKey === xNextKey;\n\t\t}\n\n\t\tif (yNext)\n\t\t{\n\t\t\tvar yNextKey = yNext.a;\n\t\t\tvar yNextNode = yNext.b;\n\t\t\tnewMatch = xKey === yNextKey;\n\t\t}\n\n\n\t\t// swap x and y\n\t\tif (newMatch && oldMatch)\n\t\t{\n\t\t\tindex++;\n\t\t\t_VirtualDom_diffHelp(xNode, yNextNode, localPatches, index);\n\t\t\t_VirtualDom_insertNode(changes, localPatches, xKey, yNode, yIndex, inserts);\n\t\t\tindex += xNode.b || 0;\n\n\t\t\tindex++;\n\t\t\t_VirtualDom_removeNode(changes, localPatches, xKey, xNextNode, index);\n\t\t\tindex += xNextNode.b || 0;\n\n\t\t\txIndex += 2;\n\t\t\tyIndex += 2;\n\t\t\tcontinue;\n\t\t}\n\n\t\t// insert y\n\t\tif (newMatch)\n\t\t{\n\t\t\tindex++;\n\t\t\t_VirtualDom_insertNode(changes, localPatches, yKey, yNode, yIndex, inserts);\n\t\t\t_VirtualDom_diffHelp(xNode, yNextNode, localPatches, index);\n\t\t\tindex += xNode.b || 0;\n\n\t\t\txIndex += 1;\n\t\t\tyIndex += 2;\n\t\t\tcontinue;\n\t\t}\n\n\t\t// remove x\n\t\tif (oldMatch)\n\t\t{\n\t\t\tindex++;\n\t\t\t_VirtualDom_removeNode(changes, localPatches, xKey, xNode, index);\n\t\t\tindex += xNode.b || 0;\n\n\t\t\tindex++;\n\t\t\t_VirtualDom_diffHelp(xNextNode, yNode, localPatches, index);\n\t\t\tindex += xNextNode.b || 0;\n\n\t\t\txIndex += 2;\n\t\t\tyIndex += 1;\n\t\t\tcontinue;\n\t\t}\n\n\t\t// remove x, insert y\n\t\tif (xNext && xNextKey === yNextKey)\n\t\t{\n\t\t\tindex++;\n\t\t\t_VirtualDom_removeNode(changes, localPatches, xKey, xNode, index);\n\t\t\t_VirtualDom_insertNode(changes, localPatches, yKey, yNode, yIndex, inserts);\n\t\t\tindex += xNode.b || 0;\n\n\t\t\tindex++;\n\t\t\t_VirtualDom_diffHelp(xNextNode, yNextNode, localPatches, index);\n\t\t\tindex += xNextNode.b || 0;\n\n\t\t\txIndex += 2;\n\t\t\tyIndex += 2;\n\t\t\tcontinue;\n\t\t}\n\n\t\tbreak;\n\t}\n\n\t// eat up any remaining nodes with removeNode and insertNode\n\n\twhile (xIndex < xLen)\n\t{\n\t\tindex++;\n\t\tvar x = xKids[xIndex];\n\t\tvar xNode = x.b;\n\t\t_VirtualDom_removeNode(changes, localPatches, x.a, xNode, index);\n\t\tindex += xNode.b || 0;\n\t\txIndex++;\n\t}\n\n\twhile (yIndex < yLen)\n\t{\n\t\tvar endInserts = endInserts || [];\n\t\tvar y = yKids[yIndex];\n\t\t_VirtualDom_insertNode(changes, localPatches, y.a, y.b, undefined, endInserts);\n\t\tyIndex++;\n\t}\n\n\tif (localPatches.length > 0 || inserts.length > 0 || endInserts)\n\t{\n\t\t_VirtualDom_pushPatch(patches, 8, rootIndex, {\n\t\t\tw: localPatches,\n\t\t\tx: inserts,\n\t\t\ty: endInserts\n\t\t});\n\t}\n}\n\n\n\n// CHANGES FROM KEYED DIFF\n\n\nvar _VirtualDom_POSTFIX = '_elmW6BL';\n\n\nfunction _VirtualDom_insertNode(changes, localPatches, key, vnode, yIndex, inserts)\n{\n\tvar entry = changes[key];\n\n\t// never seen this key before\n\tif (!entry)\n\t{\n\t\tentry = {\n\t\t\tc: 0,\n\t\t\tz: vnode,\n\t\t\tr: yIndex,\n\t\t\ts: undefined\n\t\t};\n\n\t\tinserts.push({ r: yIndex, A: entry });\n\t\tchanges[key] = entry;\n\n\t\treturn;\n\t}\n\n\t// this key was removed earlier, a match!\n\tif (entry.c === 1)\n\t{\n\t\tinserts.push({ r: yIndex, A: entry });\n\n\t\tentry.c = 2;\n\t\tvar subPatches = [];\n\t\t_VirtualDom_diffHelp(entry.z, vnode, subPatches, entry.r);\n\t\tentry.r = yIndex;\n\t\tentry.s.s = {\n\t\t\tw: subPatches,\n\t\t\tA: entry\n\t\t};\n\n\t\treturn;\n\t}\n\n\t// this key has already been inserted or moved, a duplicate!\n\t_VirtualDom_insertNode(changes, localPatches, key + _VirtualDom_POSTFIX, vnode, yIndex, inserts);\n}\n\n\nfunction _VirtualDom_removeNode(changes, localPatches, key, vnode, index)\n{\n\tvar entry = changes[key];\n\n\t// never seen this key before\n\tif (!entry)\n\t{\n\t\tvar patch = _VirtualDom_pushPatch(localPatches, 9, index, undefined);\n\n\t\tchanges[key] = {\n\t\t\tc: 1,\n\t\t\tz: vnode,\n\t\t\tr: index,\n\t\t\ts: patch\n\t\t};\n\n\t\treturn;\n\t}\n\n\t// this key was inserted earlier, a match!\n\tif (entry.c === 0)\n\t{\n\t\tentry.c = 2;\n\t\tvar subPatches = [];\n\t\t_VirtualDom_diffHelp(vnode, entry.z, subPatches, index);\n\n\t\t_VirtualDom_pushPatch(localPatches, 9, index, {\n\t\t\tw: subPatches,\n\t\t\tA: entry\n\t\t});\n\n\t\treturn;\n\t}\n\n\t// this key has already been removed or moved, a duplicate!\n\t_VirtualDom_removeNode(changes, localPatches, key + _VirtualDom_POSTFIX, vnode, index);\n}\n\n\n\n// ADD DOM NODES\n//\n// Each DOM node has an \"index\" assigned in order of traversal. It is important\n// to minimize our crawl over the actual DOM, so these indexes (along with the\n// descendantsCount of virtual nodes) let us skip touching entire subtrees of\n// the DOM if we know there are no patches there.\n\n\nfunction _VirtualDom_addDomNodes(domNode, vNode, patches, eventNode)\n{\n\t_VirtualDom_addDomNodesHelp(domNode, vNode, patches, 0, 0, vNode.b, eventNode);\n}\n\n\n// assumes `patches` is non-empty and indexes increase monotonically.\nfunction _VirtualDom_addDomNodesHelp(domNode, vNode, patches, i, low, high, eventNode)\n{\n\tvar patch = patches[i];\n\tvar index = patch.r;\n\n\twhile (index === low)\n\t{\n\t\tvar patchType = patch.$;\n\n\t\tif (patchType === 1)\n\t\t{\n\t\t\t_VirtualDom_addDomNodes(domNode, vNode.k, patch.s, eventNode);\n\t\t}\n\t\telse if (patchType === 8)\n\t\t{\n\t\t\tpatch.t = domNode;\n\t\t\tpatch.u = eventNode;\n\n\t\t\tvar subPatches = patch.s.w;\n\t\t\tif (subPatches.length > 0)\n\t\t\t{\n\t\t\t\t_VirtualDom_addDomNodesHelp(domNode, vNode, subPatches, 0, low, high, eventNode);\n\t\t\t}\n\t\t}\n\t\telse if (patchType === 9)\n\t\t{\n\t\t\tpatch.t = domNode;\n\t\t\tpatch.u = eventNode;\n\n\t\t\tvar data = patch.s;\n\t\t\tif (data)\n\t\t\t{\n\t\t\t\tdata.A.s = domNode;\n\t\t\t\tvar subPatches = data.w;\n\t\t\t\tif (subPatches.length > 0)\n\t\t\t\t{\n\t\t\t\t\t_VirtualDom_addDomNodesHelp(domNode, vNode, subPatches, 0, low, high, eventNode);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpatch.t = domNode;\n\t\t\tpatch.u = eventNode;\n\t\t}\n\n\t\ti++;\n\n\t\tif (!(patch = patches[i]) || (index = patch.r) > high)\n\t\t{\n\t\t\treturn i;\n\t\t}\n\t}\n\n\tvar tag = vNode.$;\n\n\tif (tag === 4)\n\t{\n\t\tvar subNode = vNode.k;\n\n\t\twhile (subNode.$ === 4)\n\t\t{\n\t\t\tsubNode = subNode.k;\n\t\t}\n\n\t\treturn _VirtualDom_addDomNodesHelp(domNode, subNode, patches, i, low + 1, high, domNode.elm_event_node_ref);\n\t}\n\n\t// tag must be 1 or 2 at this point\n\n\tvar vKids = vNode.e;\n\tvar childNodes = domNode.childNodes;\n\tfor (var j = 0; j < vKids.length; j++)\n\t{\n\t\tlow++;\n\t\tvar vKid = tag === 1 ? vKids[j] : vKids[j].b;\n\t\tvar nextLow = low + (vKid.b || 0);\n\t\tif (low <= index && index <= nextLow)\n\t\t{\n\t\t\ti = _VirtualDom_addDomNodesHelp(childNodes[j], vKid, patches, i, low, nextLow, eventNode);\n\t\t\tif (!(patch = patches[i]) || (index = patch.r) > high)\n\t\t\t{\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\tlow = nextLow;\n\t}\n\treturn i;\n}\n\n\n\n// APPLY PATCHES\n\n\nfunction _VirtualDom_applyPatches(rootDomNode, oldVirtualNode, patches, eventNode)\n{\n\tif (patches.length === 0)\n\t{\n\t\treturn rootDomNode;\n\t}\n\n\t_VirtualDom_addDomNodes(rootDomNode, oldVirtualNode, patches, eventNode);\n\treturn _VirtualDom_applyPatchesHelp(rootDomNode, patches);\n}\n\nfunction _VirtualDom_applyPatchesHelp(rootDomNode, patches)\n{\n\tfor (var i = 0; i < patches.length; i++)\n\t{\n\t\tvar patch = patches[i];\n\t\tvar localDomNode = patch.t\n\t\tvar newNode = _VirtualDom_applyPatch(localDomNode, patch);\n\t\tif (localDomNode === rootDomNode)\n\t\t{\n\t\t\trootDomNode = newNode;\n\t\t}\n\t}\n\treturn rootDomNode;\n}\n\nfunction _VirtualDom_applyPatch(domNode, patch)\n{\n\tswitch (patch.$)\n\t{\n\t\tcase 0:\n\t\t\treturn _VirtualDom_applyPatchRedraw(domNode, patch.s, patch.u);\n\n\t\tcase 4:\n\t\t\t_VirtualDom_applyFacts(domNode, patch.u, patch.s);\n\t\t\treturn domNode;\n\n\t\tcase 3:\n\t\t\tdomNode.replaceData(0, domNode.length, patch.s);\n\t\t\treturn domNode;\n\n\t\tcase 1:\n\t\t\treturn _VirtualDom_applyPatchesHelp(domNode, patch.s);\n\n\t\tcase 2:\n\t\t\tif (domNode.elm_event_node_ref)\n\t\t\t{\n\t\t\t\tdomNode.elm_event_node_ref.j = patch.s;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tdomNode.elm_event_node_ref = { j: patch.s, p: patch.u };\n\t\t\t}\n\t\t\treturn domNode;\n\n\t\tcase 6:\n\t\t\tvar data = patch.s;\n\t\t\tfor (var i = 0; i < data.i; i++)\n\t\t\t{\n\t\t\t\tdomNode.removeChild(domNode.childNodes[data.v]);\n\t\t\t}\n\t\t\treturn domNode;\n\n\t\tcase 7:\n\t\t\tvar data = patch.s;\n\t\t\tvar kids = data.e;\n\t\t\tvar i = data.v;\n\t\t\tvar theEnd = domNode.childNodes[i];\n\t\t\tfor (; i < kids.length; i++)\n\t\t\t{\n\t\t\t\tdomNode.insertBefore(_VirtualDom_render(kids[i], patch.u), theEnd);\n\t\t\t}\n\t\t\treturn domNode;\n\n\t\tcase 9:\n\t\t\tvar data = patch.s;\n\t\t\tif (!data)\n\t\t\t{\n\t\t\t\tdomNode.parentNode.removeChild(domNode);\n\t\t\t\treturn domNode;\n\t\t\t}\n\t\t\tvar entry = data.A;\n\t\t\tif (typeof entry.r !== 'undefined')\n\t\t\t{\n\t\t\t\tdomNode.parentNode.removeChild(domNode);\n\t\t\t}\n\t\t\tentry.s = _VirtualDom_applyPatchesHelp(domNode, data.w);\n\t\t\treturn domNode;\n\n\t\tcase 8:\n\t\t\treturn _VirtualDom_applyPatchReorder(domNode, patch);\n\n\t\tcase 5:\n\t\t\treturn patch.s(domNode);\n\n\t\tdefault:\n\t\t\t_Debug_crash(10); // 'Ran into an unknown patch!'\n\t}\n}\n\n\nfunction _VirtualDom_applyPatchRedraw(domNode, vNode, eventNode)\n{\n\tvar parentNode = domNode.parentNode;\n\tvar newNode = _VirtualDom_render(vNode, eventNode);\n\n\tif (!newNode.elm_event_node_ref)\n\t{\n\t\tnewNode.elm_event_node_ref = domNode.elm_event_node_ref;\n\t}\n\n\tif (parentNode && newNode !== domNode)\n\t{\n\t\tparentNode.replaceChild(newNode, domNode);\n\t}\n\treturn newNode;\n}\n\n\nfunction _VirtualDom_applyPatchReorder(domNode, patch)\n{\n\tvar data = patch.s;\n\n\t// remove end inserts\n\tvar frag = _VirtualDom_applyPatchReorderEndInsertsHelp(data.y, patch);\n\n\t// removals\n\tdomNode = _VirtualDom_applyPatchesHelp(domNode, data.w);\n\n\t// inserts\n\tvar inserts = data.x;\n\tfor (var i = 0; i < inserts.length; i++)\n\t{\n\t\tvar insert = inserts[i];\n\t\tvar entry = insert.A;\n\t\tvar node = entry.c === 2\n\t\t\t? entry.s\n\t\t\t: _VirtualDom_render(entry.z, patch.u);\n\t\tdomNode.insertBefore(node, domNode.childNodes[insert.r]);\n\t}\n\n\t// add end inserts\n\tif (frag)\n\t{\n\t\t_VirtualDom_appendChild(domNode, frag);\n\t}\n\n\treturn domNode;\n}\n\n\nfunction _VirtualDom_applyPatchReorderEndInsertsHelp(endInserts, patch)\n{\n\tif (!endInserts)\n\t{\n\t\treturn;\n\t}\n\n\tvar frag = _VirtualDom_doc.createDocumentFragment();\n\tfor (var i = 0; i < endInserts.length; i++)\n\t{\n\t\tvar insert = endInserts[i];\n\t\tvar entry = insert.A;\n\t\t_VirtualDom_appendChild(frag, entry.c === 2\n\t\t\t? entry.s\n\t\t\t: _VirtualDom_render(entry.z, patch.u)\n\t\t);\n\t}\n\treturn frag;\n}\n\n\nfunction _VirtualDom_virtualize(node)\n{\n\t// TEXT NODES\n\n\tif (node.nodeType === 3)\n\t{\n\t\treturn _VirtualDom_text(node.textContent);\n\t}\n\n\n\t// WEIRD NODES\n\n\tif (node.nodeType !== 1)\n\t{\n\t\treturn _VirtualDom_text('');\n\t}\n\n\n\t// ELEMENT NODES\n\n\tvar attrList = _List_Nil;\n\tvar attrs = node.attributes;\n\tfor (var i = attrs.length; i--; )\n\t{\n\t\tvar attr = attrs[i];\n\t\tvar name = attr.name;\n\t\tvar value = attr.value;\n\t\tattrList = _List_Cons( A2(_VirtualDom_attribute, name, value), attrList );\n\t}\n\n\tvar tag = node.tagName.toLowerCase();\n\tvar kidList = _List_Nil;\n\tvar kids = node.childNodes;\n\n\tfor (var i = kids.length; i--; )\n\t{\n\t\tkidList = _List_Cons(_VirtualDom_virtualize(kids[i]), kidList);\n\t}\n\treturn A3(_VirtualDom_node, tag, attrList, kidList);\n}\n\nfunction _VirtualDom_dekey(keyedNode)\n{\n\tvar keyedKids = keyedNode.e;\n\tvar len = keyedKids.length;\n\tvar kids = new Array(len);\n\tfor (var i = 0; i < len; i++)\n\t{\n\t\tkids[i] = keyedKids[i].b;\n\t}\n\n\treturn {\n\t\t$: 1,\n\t\tc: keyedNode.c,\n\t\td: keyedNode.d,\n\t\te: kids,\n\t\tf: keyedNode.f,\n\t\tb: keyedNode.b\n\t};\n}\n\n\n\n\n// ELEMENT\n\n\nvar _Debugger_element;\n\nvar _Browser_element = _Debugger_element || F4(function(impl, flagDecoder, debugMetadata, args)\n{\n\treturn _Platform_initialize(\n\t\tflagDecoder,\n\t\targs,\n\t\timpl.aU,\n\t\timpl.a0,\n\t\timpl.a_,\n\t\tfunction(sendToApp, initialModel) {\n\t\t\tvar view = impl.a1;\n\t\t\t/**/\n\t\t\tvar domNode = args['node'];\n\t\t\t//*/\n\t\t\t/**_UNUSED/\n\t\t\tvar domNode = args && args['node'] ? args['node'] : _Debug_crash(0);\n\t\t\t//*/\n\t\t\tvar currNode = _VirtualDom_virtualize(domNode);\n\n\t\t\treturn _Browser_makeAnimator(initialModel, function(model)\n\t\t\t{\n\t\t\t\tvar nextNode = view(model);\n\t\t\t\tvar patches = _VirtualDom_diff(currNode, nextNode);\n\t\t\t\tdomNode = _VirtualDom_applyPatches(domNode, currNode, patches, sendToApp);\n\t\t\t\tcurrNode = nextNode;\n\t\t\t});\n\t\t}\n\t);\n});\n\n\n\n// DOCUMENT\n\n\nvar _Debugger_document;\n\nvar _Browser_document = _Debugger_document || F4(function(impl, flagDecoder, debugMetadata, args)\n{\n\treturn _Platform_initialize(\n\t\tflagDecoder,\n\t\targs,\n\t\timpl.aU,\n\t\timpl.a0,\n\t\timpl.a_,\n\t\tfunction(sendToApp, initialModel) {\n\t\t\tvar divertHrefToApp = impl.Y && impl.Y(sendToApp)\n\t\t\tvar view = impl.a1;\n\t\t\tvar title = _VirtualDom_doc.title;\n\t\t\tvar bodyNode = _VirtualDom_doc.body;\n\t\t\tvar currNode = _VirtualDom_virtualize(bodyNode);\n\t\t\treturn _Browser_makeAnimator(initialModel, function(model)\n\t\t\t{\n\t\t\t\t_VirtualDom_divertHrefToApp = divertHrefToApp;\n\t\t\t\tvar doc = view(model);\n\t\t\t\tvar nextNode = _VirtualDom_node('body')(_List_Nil)(doc.aJ);\n\t\t\t\tvar patches = _VirtualDom_diff(currNode, nextNode);\n\t\t\t\tbodyNode = _VirtualDom_applyPatches(bodyNode, currNode, patches, sendToApp);\n\t\t\t\tcurrNode = nextNode;\n\t\t\t\t_VirtualDom_divertHrefToApp = 0;\n\t\t\t\t(title !== doc.a$) && (_VirtualDom_doc.title = title = doc.a$);\n\t\t\t});\n\t\t}\n\t);\n});\n\n\n\n// ANIMATION\n\n\nvar _Browser_cancelAnimationFrame =\n\ttypeof cancelAnimationFrame !== 'undefined'\n\t\t? cancelAnimationFrame\n\t\t: function(id) { clearTimeout(id); };\n\nvar _Browser_requestAnimationFrame =\n\ttypeof requestAnimationFrame !== 'undefined'\n\t\t? requestAnimationFrame\n\t\t: function(callback) { return setTimeout(callback, 1000 / 60); };\n\n\nfunction _Browser_makeAnimator(model, draw)\n{\n\tdraw(model);\n\n\tvar state = 0;\n\n\tfunction updateIfNeeded()\n\t{\n\t\tstate = state === 1\n\t\t\t? 0\n\t\t\t: ( _Browser_requestAnimationFrame(updateIfNeeded), draw(model), 1 );\n\t}\n\n\treturn function(nextModel, isSync)\n\t{\n\t\tmodel = nextModel;\n\n\t\tisSync\n\t\t\t? ( draw(model),\n\t\t\t\tstate === 2 && (state = 1)\n\t\t\t\t)\n\t\t\t: ( state === 0 && _Browser_requestAnimationFrame(updateIfNeeded),\n\t\t\t\tstate = 2\n\t\t\t\t);\n\t};\n}\n\n\n\n// APPLICATION\n\n\nfunction _Browser_application(impl)\n{\n\tvar onUrlChange = impl.aW;\n\tvar onUrlRequest = impl.aX;\n\tvar key = function() { key.a(onUrlChange(_Browser_getUrl())); };\n\n\treturn _Browser_document({\n\t\tY: function(sendToApp)\n\t\t{\n\t\t\tkey.a = sendToApp;\n\t\t\t_Browser_window.addEventListener('popstate', key);\n\t\t\t_Browser_window.navigator.userAgent.indexOf('Trident') < 0 || _Browser_window.addEventListener('hashchange', key);\n\n\t\t\treturn F2(function(domNode, event)\n\t\t\t{\n\t\t\t\tif (!event.ctrlKey && !event.metaKey && !event.shiftKey && event.button < 1 && !domNode.target && !domNode.hasAttribute('download'))\n\t\t\t\t{\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\tvar href = domNode.href;\n\t\t\t\t\tvar curr = _Browser_getUrl();\n\t\t\t\t\tvar next = $elm$url$Url$fromString(href).a;\n\t\t\t\t\tsendToApp(onUrlRequest(\n\t\t\t\t\t\t(next\n\t\t\t\t\t\t\t&& curr.aw === next.aw\n\t\t\t\t\t\t\t&& curr.am === next.am\n\t\t\t\t\t\t\t&& curr.au.a === next.au.a\n\t\t\t\t\t\t)\n\t\t\t\t\t\t\t? $elm$browser$Browser$Internal(next)\n\t\t\t\t\t\t\t: $elm$browser$Browser$External(href)\n\t\t\t\t\t));\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t\taU: function(flags)\n\t\t{\n\t\t\treturn A3(impl.aU, flags, _Browser_getUrl(), key);\n\t\t},\n\t\ta1: impl.a1,\n\t\ta0: impl.a0,\n\t\ta_: impl.a_\n\t});\n}\n\nfunction _Browser_getUrl()\n{\n\treturn $elm$url$Url$fromString(_VirtualDom_doc.location.href).a || _Debug_crash(1);\n}\n\nvar _Browser_go = F2(function(key, n)\n{\n\treturn A2($elm$core$Task$perform, $elm$core$Basics$never, _Scheduler_binding(function() {\n\t\tn && history.go(n);\n\t\tkey();\n\t}));\n});\n\nvar _Browser_pushUrl = F2(function(key, url)\n{\n\treturn A2($elm$core$Task$perform, $elm$core$Basics$never, _Scheduler_binding(function() {\n\t\thistory.pushState({}, '', url);\n\t\tkey();\n\t}));\n});\n\nvar _Browser_replaceUrl = F2(function(key, url)\n{\n\treturn A2($elm$core$Task$perform, $elm$core$Basics$never, _Scheduler_binding(function() {\n\t\thistory.replaceState({}, '', url);\n\t\tkey();\n\t}));\n});\n\n\n\n// GLOBAL EVENTS\n\n\nvar _Browser_fakeNode = { addEventListener: function() {}, removeEventListener: function() {} };\nvar _Browser_doc = typeof document !== 'undefined' ? document : _Browser_fakeNode;\nvar _Browser_window = typeof window !== 'undefined' ? window : _Browser_fakeNode;\n\nvar _Browser_on = F3(function(node, eventName, sendToSelf)\n{\n\treturn _Scheduler_spawn(_Scheduler_binding(function(callback)\n\t{\n\t\tfunction handler(event)\t{ _Scheduler_rawSpawn(sendToSelf(event)); }\n\t\tnode.addEventListener(eventName, handler, _VirtualDom_passiveSupported && { passive: true });\n\t\treturn function() { node.removeEventListener(eventName, handler); };\n\t}));\n});\n\nvar _Browser_decodeEvent = F2(function(decoder, event)\n{\n\tvar result = _Json_runHelp(decoder, event);\n\treturn $elm$core$Result$isOk(result) ? $elm$core$Maybe$Just(result.a) : $elm$core$Maybe$Nothing;\n});\n\n\n\n// PAGE VISIBILITY\n\n\nfunction _Browser_visibilityInfo()\n{\n\treturn (typeof _VirtualDom_doc.hidden !== 'undefined')\n\t\t? { aS: 'hidden', aK: 'visibilitychange' }\n\t\t:\n\t(typeof _VirtualDom_doc.mozHidden !== 'undefined')\n\t\t? { aS: 'mozHidden', aK: 'mozvisibilitychange' }\n\t\t:\n\t(typeof _VirtualDom_doc.msHidden !== 'undefined')\n\t\t? { aS: 'msHidden', aK: 'msvisibilitychange' }\n\t\t:\n\t(typeof _VirtualDom_doc.webkitHidden !== 'undefined')\n\t\t? { aS: 'webkitHidden', aK: 'webkitvisibilitychange' }\n\t\t: { aS: 'hidden', aK: 'visibilitychange' };\n}\n\n\n\n// ANIMATION FRAMES\n\n\nfunction _Browser_rAF()\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\tvar id = _Browser_requestAnimationFrame(function() {\n\t\t\tcallback(_Scheduler_succeed(Date.now()));\n\t\t});\n\n\t\treturn function() {\n\t\t\t_Browser_cancelAnimationFrame(id);\n\t\t};\n\t});\n}\n\n\nfunction _Browser_now()\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\tcallback(_Scheduler_succeed(Date.now()));\n\t});\n}\n\n\n\n// DOM STUFF\n\n\nfunction _Browser_withNode(id, doStuff)\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\t_Browser_requestAnimationFrame(function() {\n\t\t\tvar node = document.getElementById(id);\n\t\t\tcallback(node\n\t\t\t\t? _Scheduler_succeed(doStuff(node))\n\t\t\t\t: _Scheduler_fail($elm$browser$Browser$Dom$NotFound(id))\n\t\t\t);\n\t\t});\n\t});\n}\n\n\nfunction _Browser_withWindow(doStuff)\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\t_Browser_requestAnimationFrame(function() {\n\t\t\tcallback(_Scheduler_succeed(doStuff()));\n\t\t});\n\t});\n}\n\n\n// FOCUS and BLUR\n\n\nvar _Browser_call = F2(function(functionName, id)\n{\n\treturn _Browser_withNode(id, function(node) {\n\t\tnode[functionName]();\n\t\treturn _Utils_Tuple0;\n\t});\n});\n\n\n\n// WINDOW VIEWPORT\n\n\nfunction _Browser_getViewport()\n{\n\treturn {\n\t\taB: _Browser_getScene(),\n\t\taE: {\n\t\t\tac: _Browser_window.pageXOffset,\n\t\t\tad: _Browser_window.pageYOffset,\n\t\t\taF: _Browser_doc.documentElement.clientWidth,\n\t\t\tal: _Browser_doc.documentElement.clientHeight\n\t\t}\n\t};\n}\n\nfunction _Browser_getScene()\n{\n\tvar body = _Browser_doc.body;\n\tvar elem = _Browser_doc.documentElement;\n\treturn {\n\t\taF: Math.max(body.scrollWidth, body.offsetWidth, elem.scrollWidth, elem.offsetWidth, elem.clientWidth),\n\t\tal: Math.max(body.scrollHeight, body.offsetHeight, elem.scrollHeight, elem.offsetHeight, elem.clientHeight)\n\t};\n}\n\nvar _Browser_setViewport = F2(function(x, y)\n{\n\treturn _Browser_withWindow(function()\n\t{\n\t\t_Browser_window.scroll(x, y);\n\t\treturn _Utils_Tuple0;\n\t});\n});\n\n\n\n// ELEMENT VIEWPORT\n\n\nfunction _Browser_getViewportOf(id)\n{\n\treturn _Browser_withNode(id, function(node)\n\t{\n\t\treturn {\n\t\t\taB: {\n\t\t\t\taF: node.scrollWidth,\n\t\t\t\tal: node.scrollHeight\n\t\t\t},\n\t\t\taE: {\n\t\t\t\tac: node.scrollLeft,\n\t\t\t\tad: node.scrollTop,\n\t\t\t\taF: node.clientWidth,\n\t\t\t\tal: node.clientHeight\n\t\t\t}\n\t\t};\n\t});\n}\n\n\nvar _Browser_setViewportOf = F3(function(id, x, y)\n{\n\treturn _Browser_withNode(id, function(node)\n\t{\n\t\tnode.scrollLeft = x;\n\t\tnode.scrollTop = y;\n\t\treturn _Utils_Tuple0;\n\t});\n});\n\n\n\n// ELEMENT\n\n\nfunction _Browser_getElement(id)\n{\n\treturn _Browser_withNode(id, function(node)\n\t{\n\t\tvar rect = node.getBoundingClientRect();\n\t\tvar x = _Browser_window.pageXOffset;\n\t\tvar y = _Browser_window.pageYOffset;\n\t\treturn {\n\t\t\taB: _Browser_getScene(),\n\t\t\taE: {\n\t\t\t\tac: x,\n\t\t\t\tad: y,\n\t\t\t\taF: _Browser_doc.documentElement.clientWidth,\n\t\t\t\tal: _Browser_doc.documentElement.clientHeight\n\t\t\t},\n\t\t\taM: {\n\t\t\t\tac: x + rect.left,\n\t\t\t\tad: y + rect.top,\n\t\t\t\taF: rect.width,\n\t\t\t\tal: rect.height\n\t\t\t}\n\t\t};\n\t});\n}\n\n\n\n// LOAD and RELOAD\n\n\nfunction _Browser_reload(skipCache)\n{\n\treturn A2($elm$core$Task$perform, $elm$core$Basics$never, _Scheduler_binding(function(callback)\n\t{\n\t\t_VirtualDom_doc.location.reload(skipCache);\n\t}));\n}\n\nfunction _Browser_load(url)\n{\n\treturn A2($elm$core$Task$perform, $elm$core$Basics$never, _Scheduler_binding(function(callback)\n\t{\n\t\ttry\n\t\t{\n\t\t\t_Browser_window.location = url;\n\t\t}\n\t\tcatch(err)\n\t\t{\n\t\t\t// Only Firefox can throw a NS_ERROR_MALFORMED_URI exception here.\n\t\t\t// Other browsers reload the page, so let's be consistent about that.\n\t\t\t_VirtualDom_doc.location.reload(false);\n\t\t}\n\t}));\n}\nvar $elm$core$Basics$always = F2(\n\tfunction (a, _v0) {\n\t\treturn a;\n\t});\nvar $elm$core$List$cons = _List_cons;\nvar $elm$core$Elm$JsArray$foldr = _JsArray_foldr;\nvar $elm$core$Array$foldr = F3(\n\tfunction (func, baseCase, _v0) {\n\t\tvar tree = _v0.c;\n\t\tvar tail = _v0.d;\n\t\tvar helper = F2(\n\t\t\tfunction (node, acc) {\n\t\t\t\tif (!node.$) {\n\t\t\t\t\tvar subTree = node.a;\n\t\t\t\t\treturn A3($elm$core$Elm$JsArray$foldr, helper, acc, subTree);\n\t\t\t\t} else {\n\t\t\t\t\tvar values = node.a;\n\t\t\t\t\treturn A3($elm$core$Elm$JsArray$foldr, func, acc, values);\n\t\t\t\t}\n\t\t\t});\n\t\treturn A3(\n\t\t\t$elm$core$Elm$JsArray$foldr,\n\t\t\thelper,\n\t\t\tA3($elm$core$Elm$JsArray$foldr, func, baseCase, tail),\n\t\t\ttree);\n\t});\nvar $elm$core$Array$toList = function (array) {\n\treturn A3($elm$core$Array$foldr, $elm$core$List$cons, _List_Nil, array);\n};\nvar $elm$core$Dict$foldr = F3(\n\tfunction (func, acc, t) {\n\t\tfoldr:\n\t\twhile (true) {\n\t\t\tif (t.$ === -2) {\n\t\t\t\treturn acc;\n\t\t\t} else {\n\t\t\t\tvar key = t.b;\n\t\t\t\tvar value = t.c;\n\t\t\t\tvar left = t.d;\n\t\t\t\tvar right = t.e;\n\t\t\t\tvar $temp$func = func,\n\t\t\t\t\t$temp$acc = A3(\n\t\t\t\t\tfunc,\n\t\t\t\t\tkey,\n\t\t\t\t\tvalue,\n\t\t\t\t\tA3($elm$core$Dict$foldr, func, acc, right)),\n\t\t\t\t\t$temp$t = left;\n\t\t\t\tfunc = $temp$func;\n\t\t\t\tacc = $temp$acc;\n\t\t\t\tt = $temp$t;\n\t\t\t\tcontinue foldr;\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$Dict$toList = function (dict) {\n\treturn A3(\n\t\t$elm$core$Dict$foldr,\n\t\tF3(\n\t\t\tfunction (key, value, list) {\n\t\t\t\treturn A2(\n\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t_Utils_Tuple2(key, value),\n\t\t\t\t\tlist);\n\t\t\t}),\n\t\t_List_Nil,\n\t\tdict);\n};\nvar $elm$core$Dict$keys = function (dict) {\n\treturn A3(\n\t\t$elm$core$Dict$foldr,\n\t\tF3(\n\t\t\tfunction (key, value, keyList) {\n\t\t\t\treturn A2($elm$core$List$cons, key, keyList);\n\t\t\t}),\n\t\t_List_Nil,\n\t\tdict);\n};\nvar $elm$core$Set$toList = function (_v0) {\n\tvar dict = _v0;\n\treturn $elm$core$Dict$keys(dict);\n};\nvar $elm$core$Basics$EQ = 1;\nvar $elm$core$Basics$GT = 2;\nvar $elm$core$Basics$LT = 0;\nvar $elm$core$Result$Err = function (a) {\n\treturn {$: 1, a: a};\n};\nvar $elm$json$Json$Decode$Failure = F2(\n\tfunction (a, b) {\n\t\treturn {$: 3, a: a, b: b};\n\t});\nvar $elm$json$Json$Decode$Field = F2(\n\tfunction (a, b) {\n\t\treturn {$: 0, a: a, b: b};\n\t});\nvar $elm$json$Json$Decode$Index = F2(\n\tfunction (a, b) {\n\t\treturn {$: 1, a: a, b: b};\n\t});\nvar $elm$core$Result$Ok = function (a) {\n\treturn {$: 0, a: a};\n};\nvar $elm$json$Json$Decode$OneOf = function (a) {\n\treturn {$: 2, a: a};\n};\nvar $elm$core$Basics$False = 1;\nvar $elm$core$Basics$add = _Basics_add;\nvar $elm$core$Maybe$Just = function (a) {\n\treturn {$: 0, a: a};\n};\nvar $elm$core$Maybe$Nothing = {$: 1};\nvar $elm$core$String$all = _String_all;\nvar $elm$core$Basics$and = _Basics_and;\nvar $elm$core$Basics$append = _Utils_append;\nvar $elm$json$Json$Encode$encode = _Json_encode;\nvar $elm$core$String$fromInt = _String_fromNumber;\nvar $elm$core$String$join = F2(\n\tfunction (sep, chunks) {\n\t\treturn A2(\n\t\t\t_String_join,\n\t\t\tsep,\n\t\t\t_List_toArray(chunks));\n\t});\nvar $elm$core$String$split = F2(\n\tfunction (sep, string) {\n\t\treturn _List_fromArray(\n\t\t\tA2(_String_split, sep, string));\n\t});\nvar $elm$json$Json$Decode$indent = function (str) {\n\treturn A2(\n\t\t$elm$core$String$join,\n\t\t'\\n    ',\n\t\tA2($elm$core$String$split, '\\n', str));\n};\nvar $elm$core$List$foldl = F3(\n\tfunction (func, acc, list) {\n\t\tfoldl:\n\t\twhile (true) {\n\t\t\tif (!list.b) {\n\t\t\t\treturn acc;\n\t\t\t} else {\n\t\t\t\tvar x = list.a;\n\t\t\t\tvar xs = list.b;\n\t\t\t\tvar $temp$func = func,\n\t\t\t\t\t$temp$acc = A2(func, x, acc),\n\t\t\t\t\t$temp$list = xs;\n\t\t\t\tfunc = $temp$func;\n\t\t\t\tacc = $temp$acc;\n\t\t\t\tlist = $temp$list;\n\t\t\t\tcontinue foldl;\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$List$length = function (xs) {\n\treturn A3(\n\t\t$elm$core$List$foldl,\n\t\tF2(\n\t\t\tfunction (_v0, i) {\n\t\t\t\treturn i + 1;\n\t\t\t}),\n\t\t0,\n\t\txs);\n};\nvar $elm$core$List$map2 = _List_map2;\nvar $elm$core$Basics$le = _Utils_le;\nvar $elm$core$Basics$sub = _Basics_sub;\nvar $elm$core$List$rangeHelp = F3(\n\tfunction (lo, hi, list) {\n\t\trangeHelp:\n\t\twhile (true) {\n\t\t\tif (_Utils_cmp(lo, hi) < 1) {\n\t\t\t\tvar $temp$lo = lo,\n\t\t\t\t\t$temp$hi = hi - 1,\n\t\t\t\t\t$temp$list = A2($elm$core$List$cons, hi, list);\n\t\t\t\tlo = $temp$lo;\n\t\t\t\thi = $temp$hi;\n\t\t\t\tlist = $temp$list;\n\t\t\t\tcontinue rangeHelp;\n\t\t\t} else {\n\t\t\t\treturn list;\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$List$range = F2(\n\tfunction (lo, hi) {\n\t\treturn A3($elm$core$List$rangeHelp, lo, hi, _List_Nil);\n\t});\nvar $elm$core$List$indexedMap = F2(\n\tfunction (f, xs) {\n\t\treturn A3(\n\t\t\t$elm$core$List$map2,\n\t\t\tf,\n\t\t\tA2(\n\t\t\t\t$elm$core$List$range,\n\t\t\t\t0,\n\t\t\t\t$elm$core$List$length(xs) - 1),\n\t\t\txs);\n\t});\nvar $elm$core$Char$toCode = _Char_toCode;\nvar $elm$core$Char$isLower = function (_char) {\n\tvar code = $elm$core$Char$toCode(_char);\n\treturn (97 <= code) && (code <= 122);\n};\nvar $elm$core$Char$isUpper = function (_char) {\n\tvar code = $elm$core$Char$toCode(_char);\n\treturn (code <= 90) && (65 <= code);\n};\nvar $elm$core$Basics$or = _Basics_or;\nvar $elm$core$Char$isAlpha = function (_char) {\n\treturn $elm$core$Char$isLower(_char) || $elm$core$Char$isUpper(_char);\n};\nvar $elm$core$Char$isDigit = function (_char) {\n\tvar code = $elm$core$Char$toCode(_char);\n\treturn (code <= 57) && (48 <= code);\n};\nvar $elm$core$Char$isAlphaNum = function (_char) {\n\treturn $elm$core$Char$isLower(_char) || ($elm$core$Char$isUpper(_char) || $elm$core$Char$isDigit(_char));\n};\nvar $elm$core$List$reverse = function (list) {\n\treturn A3($elm$core$List$foldl, $elm$core$List$cons, _List_Nil, list);\n};\nvar $elm$core$String$uncons = _String_uncons;\nvar $elm$json$Json$Decode$errorOneOf = F2(\n\tfunction (i, error) {\n\t\treturn '\\n\\n(' + ($elm$core$String$fromInt(i + 1) + (') ' + $elm$json$Json$Decode$indent(\n\t\t\t$elm$json$Json$Decode$errorToString(error))));\n\t});\nvar $elm$json$Json$Decode$errorToString = function (error) {\n\treturn A2($elm$json$Json$Decode$errorToStringHelp, error, _List_Nil);\n};\nvar $elm$json$Json$Decode$errorToStringHelp = F2(\n\tfunction (error, context) {\n\t\terrorToStringHelp:\n\t\twhile (true) {\n\t\t\tswitch (error.$) {\n\t\t\t\tcase 0:\n\t\t\t\t\tvar f = error.a;\n\t\t\t\t\tvar err = error.b;\n\t\t\t\t\tvar isSimple = function () {\n\t\t\t\t\t\tvar _v1 = $elm$core$String$uncons(f);\n\t\t\t\t\t\tif (_v1.$ === 1) {\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar _v2 = _v1.a;\n\t\t\t\t\t\t\tvar _char = _v2.a;\n\t\t\t\t\t\t\tvar rest = _v2.b;\n\t\t\t\t\t\t\treturn $elm$core$Char$isAlpha(_char) && A2($elm$core$String$all, $elm$core$Char$isAlphaNum, rest);\n\t\t\t\t\t\t}\n\t\t\t\t\t}();\n\t\t\t\t\tvar fieldName = isSimple ? ('.' + f) : ('[\\'' + (f + '\\']'));\n\t\t\t\t\tvar $temp$error = err,\n\t\t\t\t\t\t$temp$context = A2($elm$core$List$cons, fieldName, context);\n\t\t\t\t\terror = $temp$error;\n\t\t\t\t\tcontext = $temp$context;\n\t\t\t\t\tcontinue errorToStringHelp;\n\t\t\t\tcase 1:\n\t\t\t\t\tvar i = error.a;\n\t\t\t\t\tvar err = error.b;\n\t\t\t\t\tvar indexName = '[' + ($elm$core$String$fromInt(i) + ']');\n\t\t\t\t\tvar $temp$error = err,\n\t\t\t\t\t\t$temp$context = A2($elm$core$List$cons, indexName, context);\n\t\t\t\t\terror = $temp$error;\n\t\t\t\t\tcontext = $temp$context;\n\t\t\t\t\tcontinue errorToStringHelp;\n\t\t\t\tcase 2:\n\t\t\t\t\tvar errors = error.a;\n\t\t\t\t\tif (!errors.b) {\n\t\t\t\t\t\treturn 'Ran into a Json.Decode.oneOf with no possibilities' + function () {\n\t\t\t\t\t\t\tif (!context.b) {\n\t\t\t\t\t\t\t\treturn '!';\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn ' at json' + A2(\n\t\t\t\t\t\t\t\t\t$elm$core$String$join,\n\t\t\t\t\t\t\t\t\t'',\n\t\t\t\t\t\t\t\t\t$elm$core$List$reverse(context));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (!errors.b.b) {\n\t\t\t\t\t\t\tvar err = errors.a;\n\t\t\t\t\t\t\tvar $temp$error = err,\n\t\t\t\t\t\t\t\t$temp$context = context;\n\t\t\t\t\t\t\terror = $temp$error;\n\t\t\t\t\t\t\tcontext = $temp$context;\n\t\t\t\t\t\t\tcontinue errorToStringHelp;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar starter = function () {\n\t\t\t\t\t\t\t\tif (!context.b) {\n\t\t\t\t\t\t\t\t\treturn 'Json.Decode.oneOf';\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\treturn 'The Json.Decode.oneOf at json' + A2(\n\t\t\t\t\t\t\t\t\t\t$elm$core$String$join,\n\t\t\t\t\t\t\t\t\t\t'',\n\t\t\t\t\t\t\t\t\t\t$elm$core$List$reverse(context));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}();\n\t\t\t\t\t\t\tvar introduction = starter + (' failed in the following ' + ($elm$core$String$fromInt(\n\t\t\t\t\t\t\t\t$elm$core$List$length(errors)) + ' ways:'));\n\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\t$elm$core$String$join,\n\t\t\t\t\t\t\t\t'\\n\\n',\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\tintroduction,\n\t\t\t\t\t\t\t\t\tA2($elm$core$List$indexedMap, $elm$json$Json$Decode$errorOneOf, errors)));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tvar msg = error.a;\n\t\t\t\t\tvar json = error.b;\n\t\t\t\t\tvar introduction = function () {\n\t\t\t\t\t\tif (!context.b) {\n\t\t\t\t\t\t\treturn 'Problem with the given value:\\n\\n';\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn 'Problem with the value at json' + (A2(\n\t\t\t\t\t\t\t\t$elm$core$String$join,\n\t\t\t\t\t\t\t\t'',\n\t\t\t\t\t\t\t\t$elm$core$List$reverse(context)) + ':\\n\\n    ');\n\t\t\t\t\t\t}\n\t\t\t\t\t}();\n\t\t\t\t\treturn introduction + ($elm$json$Json$Decode$indent(\n\t\t\t\t\t\tA2($elm$json$Json$Encode$encode, 4, json)) + ('\\n\\n' + msg));\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$Array$branchFactor = 32;\nvar $elm$core$Array$Array_elm_builtin = F4(\n\tfunction (a, b, c, d) {\n\t\treturn {$: 0, a: a, b: b, c: c, d: d};\n\t});\nvar $elm$core$Elm$JsArray$empty = _JsArray_empty;\nvar $elm$core$Basics$ceiling = _Basics_ceiling;\nvar $elm$core$Basics$fdiv = _Basics_fdiv;\nvar $elm$core$Basics$logBase = F2(\n\tfunction (base, number) {\n\t\treturn _Basics_log(number) / _Basics_log(base);\n\t});\nvar $elm$core$Basics$toFloat = _Basics_toFloat;\nvar $elm$core$Array$shiftStep = $elm$core$Basics$ceiling(\n\tA2($elm$core$Basics$logBase, 2, $elm$core$Array$branchFactor));\nvar $elm$core$Array$empty = A4($elm$core$Array$Array_elm_builtin, 0, $elm$core$Array$shiftStep, $elm$core$Elm$JsArray$empty, $elm$core$Elm$JsArray$empty);\nvar $elm$core$Elm$JsArray$initialize = _JsArray_initialize;\nvar $elm$core$Array$Leaf = function (a) {\n\treturn {$: 1, a: a};\n};\nvar $elm$core$Basics$apL = F2(\n\tfunction (f, x) {\n\t\treturn f(x);\n\t});\nvar $elm$core$Basics$apR = F2(\n\tfunction (x, f) {\n\t\treturn f(x);\n\t});\nvar $elm$core$Basics$eq = _Utils_equal;\nvar $elm$core$Basics$floor = _Basics_floor;\nvar $elm$core$Elm$JsArray$length = _JsArray_length;\nvar $elm$core$Basics$gt = _Utils_gt;\nvar $elm$core$Basics$max = F2(\n\tfunction (x, y) {\n\t\treturn (_Utils_cmp(x, y) > 0) ? x : y;\n\t});\nvar $elm$core$Basics$mul = _Basics_mul;\nvar $elm$core$Array$SubTree = function (a) {\n\treturn {$: 0, a: a};\n};\nvar $elm$core$Elm$JsArray$initializeFromList = _JsArray_initializeFromList;\nvar $elm$core$Array$compressNodes = F2(\n\tfunction (nodes, acc) {\n\t\tcompressNodes:\n\t\twhile (true) {\n\t\t\tvar _v0 = A2($elm$core$Elm$JsArray$initializeFromList, $elm$core$Array$branchFactor, nodes);\n\t\t\tvar node = _v0.a;\n\t\t\tvar remainingNodes = _v0.b;\n\t\t\tvar newAcc = A2(\n\t\t\t\t$elm$core$List$cons,\n\t\t\t\t$elm$core$Array$SubTree(node),\n\t\t\t\tacc);\n\t\t\tif (!remainingNodes.b) {\n\t\t\t\treturn $elm$core$List$reverse(newAcc);\n\t\t\t} else {\n\t\t\t\tvar $temp$nodes = remainingNodes,\n\t\t\t\t\t$temp$acc = newAcc;\n\t\t\t\tnodes = $temp$nodes;\n\t\t\t\tacc = $temp$acc;\n\t\t\t\tcontinue compressNodes;\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$Tuple$first = function (_v0) {\n\tvar x = _v0.a;\n\treturn x;\n};\nvar $elm$core$Array$treeFromBuilder = F2(\n\tfunction (nodeList, nodeListSize) {\n\t\ttreeFromBuilder:\n\t\twhile (true) {\n\t\t\tvar newNodeSize = $elm$core$Basics$ceiling(nodeListSize / $elm$core$Array$branchFactor);\n\t\t\tif (newNodeSize === 1) {\n\t\t\t\treturn A2($elm$core$Elm$JsArray$initializeFromList, $elm$core$Array$branchFactor, nodeList).a;\n\t\t\t} else {\n\t\t\t\tvar $temp$nodeList = A2($elm$core$Array$compressNodes, nodeList, _List_Nil),\n\t\t\t\t\t$temp$nodeListSize = newNodeSize;\n\t\t\t\tnodeList = $temp$nodeList;\n\t\t\t\tnodeListSize = $temp$nodeListSize;\n\t\t\t\tcontinue treeFromBuilder;\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$Array$builderToArray = F2(\n\tfunction (reverseNodeList, builder) {\n\t\tif (!builder.a) {\n\t\t\treturn A4(\n\t\t\t\t$elm$core$Array$Array_elm_builtin,\n\t\t\t\t$elm$core$Elm$JsArray$length(builder.c),\n\t\t\t\t$elm$core$Array$shiftStep,\n\t\t\t\t$elm$core$Elm$JsArray$empty,\n\t\t\t\tbuilder.c);\n\t\t} else {\n\t\t\tvar treeLen = builder.a * $elm$core$Array$branchFactor;\n\t\t\tvar depth = $elm$core$Basics$floor(\n\t\t\t\tA2($elm$core$Basics$logBase, $elm$core$Array$branchFactor, treeLen - 1));\n\t\t\tvar correctNodeList = reverseNodeList ? $elm$core$List$reverse(builder.d) : builder.d;\n\t\t\tvar tree = A2($elm$core$Array$treeFromBuilder, correctNodeList, builder.a);\n\t\t\treturn A4(\n\t\t\t\t$elm$core$Array$Array_elm_builtin,\n\t\t\t\t$elm$core$Elm$JsArray$length(builder.c) + treeLen,\n\t\t\t\tA2($elm$core$Basics$max, 5, depth * $elm$core$Array$shiftStep),\n\t\t\t\ttree,\n\t\t\t\tbuilder.c);\n\t\t}\n\t});\nvar $elm$core$Basics$idiv = _Basics_idiv;\nvar $elm$core$Basics$lt = _Utils_lt;\nvar $elm$core$Array$initializeHelp = F5(\n\tfunction (fn, fromIndex, len, nodeList, tail) {\n\t\tinitializeHelp:\n\t\twhile (true) {\n\t\t\tif (fromIndex < 0) {\n\t\t\t\treturn A2(\n\t\t\t\t\t$elm$core$Array$builderToArray,\n\t\t\t\t\tfalse,\n\t\t\t\t\t{d: nodeList, a: (len / $elm$core$Array$branchFactor) | 0, c: tail});\n\t\t\t} else {\n\t\t\t\tvar leaf = $elm$core$Array$Leaf(\n\t\t\t\t\tA3($elm$core$Elm$JsArray$initialize, $elm$core$Array$branchFactor, fromIndex, fn));\n\t\t\t\tvar $temp$fn = fn,\n\t\t\t\t\t$temp$fromIndex = fromIndex - $elm$core$Array$branchFactor,\n\t\t\t\t\t$temp$len = len,\n\t\t\t\t\t$temp$nodeList = A2($elm$core$List$cons, leaf, nodeList),\n\t\t\t\t\t$temp$tail = tail;\n\t\t\t\tfn = $temp$fn;\n\t\t\t\tfromIndex = $temp$fromIndex;\n\t\t\t\tlen = $temp$len;\n\t\t\t\tnodeList = $temp$nodeList;\n\t\t\t\ttail = $temp$tail;\n\t\t\t\tcontinue initializeHelp;\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$Basics$remainderBy = _Basics_remainderBy;\nvar $elm$core$Array$initialize = F2(\n\tfunction (len, fn) {\n\t\tif (len <= 0) {\n\t\t\treturn $elm$core$Array$empty;\n\t\t} else {\n\t\t\tvar tailLen = len % $elm$core$Array$branchFactor;\n\t\t\tvar tail = A3($elm$core$Elm$JsArray$initialize, tailLen, len - tailLen, fn);\n\t\t\tvar initialFromIndex = (len - tailLen) - $elm$core$Array$branchFactor;\n\t\t\treturn A5($elm$core$Array$initializeHelp, fn, initialFromIndex, len, _List_Nil, tail);\n\t\t}\n\t});\nvar $elm$core$Basics$True = 0;\nvar $elm$core$Result$isOk = function (result) {\n\tif (!result.$) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n};\nvar $elm$json$Json$Decode$andThen = _Json_andThen;\nvar $elm$json$Json$Decode$map = _Json_map1;\nvar $elm$json$Json$Decode$map2 = _Json_map2;\nvar $elm$json$Json$Decode$succeed = _Json_succeed;\nvar $elm$virtual_dom$VirtualDom$toHandlerInt = function (handler) {\n\tswitch (handler.$) {\n\t\tcase 0:\n\t\t\treturn 0;\n\t\tcase 1:\n\t\t\treturn 1;\n\t\tcase 2:\n\t\t\treturn 2;\n\t\tdefault:\n\t\t\treturn 3;\n\t}\n};\nvar $elm$browser$Browser$External = function (a) {\n\treturn {$: 1, a: a};\n};\nvar $elm$browser$Browser$Internal = function (a) {\n\treturn {$: 0, a: a};\n};\nvar $elm$core$Basics$identity = function (x) {\n\treturn x;\n};\nvar $elm$browser$Browser$Dom$NotFound = $elm$core$Basics$identity;\nvar $elm$url$Url$Http = 0;\nvar $elm$url$Url$Https = 1;\nvar $elm$url$Url$Url = F6(\n\tfunction (protocol, host, port_, path, query, fragment) {\n\t\treturn {aj: fragment, am: host, ar: path, au: port_, aw: protocol, ax: query};\n\t});\nvar $elm$core$String$contains = _String_contains;\nvar $elm$core$String$length = _String_length;\nvar $elm$core$String$slice = _String_slice;\nvar $elm$core$String$dropLeft = F2(\n\tfunction (n, string) {\n\t\treturn (n < 1) ? string : A3(\n\t\t\t$elm$core$String$slice,\n\t\t\tn,\n\t\t\t$elm$core$String$length(string),\n\t\t\tstring);\n\t});\nvar $elm$core$String$indexes = _String_indexes;\nvar $elm$core$String$isEmpty = function (string) {\n\treturn string === '';\n};\nvar $elm$core$String$left = F2(\n\tfunction (n, string) {\n\t\treturn (n < 1) ? '' : A3($elm$core$String$slice, 0, n, string);\n\t});\nvar $elm$core$String$toInt = _String_toInt;\nvar $elm$url$Url$chompBeforePath = F5(\n\tfunction (protocol, path, params, frag, str) {\n\t\tif ($elm$core$String$isEmpty(str) || A2($elm$core$String$contains, '@', str)) {\n\t\t\treturn $elm$core$Maybe$Nothing;\n\t\t} else {\n\t\t\tvar _v0 = A2($elm$core$String$indexes, ':', str);\n\t\t\tif (!_v0.b) {\n\t\t\t\treturn $elm$core$Maybe$Just(\n\t\t\t\t\tA6($elm$url$Url$Url, protocol, str, $elm$core$Maybe$Nothing, path, params, frag));\n\t\t\t} else {\n\t\t\t\tif (!_v0.b.b) {\n\t\t\t\t\tvar i = _v0.a;\n\t\t\t\t\tvar _v1 = $elm$core$String$toInt(\n\t\t\t\t\t\tA2($elm$core$String$dropLeft, i + 1, str));\n\t\t\t\t\tif (_v1.$ === 1) {\n\t\t\t\t\t\treturn $elm$core$Maybe$Nothing;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar port_ = _v1;\n\t\t\t\t\t\treturn $elm$core$Maybe$Just(\n\t\t\t\t\t\t\tA6(\n\t\t\t\t\t\t\t\t$elm$url$Url$Url,\n\t\t\t\t\t\t\t\tprotocol,\n\t\t\t\t\t\t\t\tA2($elm$core$String$left, i, str),\n\t\t\t\t\t\t\t\tport_,\n\t\t\t\t\t\t\t\tpath,\n\t\t\t\t\t\t\t\tparams,\n\t\t\t\t\t\t\t\tfrag));\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\treturn $elm$core$Maybe$Nothing;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar $elm$url$Url$chompBeforeQuery = F4(\n\tfunction (protocol, params, frag, str) {\n\t\tif ($elm$core$String$isEmpty(str)) {\n\t\t\treturn $elm$core$Maybe$Nothing;\n\t\t} else {\n\t\t\tvar _v0 = A2($elm$core$String$indexes, '/', str);\n\t\t\tif (!_v0.b) {\n\t\t\t\treturn A5($elm$url$Url$chompBeforePath, protocol, '/', params, frag, str);\n\t\t\t} else {\n\t\t\t\tvar i = _v0.a;\n\t\t\t\treturn A5(\n\t\t\t\t\t$elm$url$Url$chompBeforePath,\n\t\t\t\t\tprotocol,\n\t\t\t\t\tA2($elm$core$String$dropLeft, i, str),\n\t\t\t\t\tparams,\n\t\t\t\t\tfrag,\n\t\t\t\t\tA2($elm$core$String$left, i, str));\n\t\t\t}\n\t\t}\n\t});\nvar $elm$url$Url$chompBeforeFragment = F3(\n\tfunction (protocol, frag, str) {\n\t\tif ($elm$core$String$isEmpty(str)) {\n\t\t\treturn $elm$core$Maybe$Nothing;\n\t\t} else {\n\t\t\tvar _v0 = A2($elm$core$String$indexes, '?', str);\n\t\t\tif (!_v0.b) {\n\t\t\t\treturn A4($elm$url$Url$chompBeforeQuery, protocol, $elm$core$Maybe$Nothing, frag, str);\n\t\t\t} else {\n\t\t\t\tvar i = _v0.a;\n\t\t\t\treturn A4(\n\t\t\t\t\t$elm$url$Url$chompBeforeQuery,\n\t\t\t\t\tprotocol,\n\t\t\t\t\t$elm$core$Maybe$Just(\n\t\t\t\t\t\tA2($elm$core$String$dropLeft, i + 1, str)),\n\t\t\t\t\tfrag,\n\t\t\t\t\tA2($elm$core$String$left, i, str));\n\t\t\t}\n\t\t}\n\t});\nvar $elm$url$Url$chompAfterProtocol = F2(\n\tfunction (protocol, str) {\n\t\tif ($elm$core$String$isEmpty(str)) {\n\t\t\treturn $elm$core$Maybe$Nothing;\n\t\t} else {\n\t\t\tvar _v0 = A2($elm$core$String$indexes, '#', str);\n\t\t\tif (!_v0.b) {\n\t\t\t\treturn A3($elm$url$Url$chompBeforeFragment, protocol, $elm$core$Maybe$Nothing, str);\n\t\t\t} else {\n\t\t\t\tvar i = _v0.a;\n\t\t\t\treturn A3(\n\t\t\t\t\t$elm$url$Url$chompBeforeFragment,\n\t\t\t\t\tprotocol,\n\t\t\t\t\t$elm$core$Maybe$Just(\n\t\t\t\t\t\tA2($elm$core$String$dropLeft, i + 1, str)),\n\t\t\t\t\tA2($elm$core$String$left, i, str));\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$String$startsWith = _String_startsWith;\nvar $elm$url$Url$fromString = function (str) {\n\treturn A2($elm$core$String$startsWith, 'http://', str) ? A2(\n\t\t$elm$url$Url$chompAfterProtocol,\n\t\t0,\n\t\tA2($elm$core$String$dropLeft, 7, str)) : (A2($elm$core$String$startsWith, 'https://', str) ? A2(\n\t\t$elm$url$Url$chompAfterProtocol,\n\t\t1,\n\t\tA2($elm$core$String$dropLeft, 8, str)) : $elm$core$Maybe$Nothing);\n};\nvar $elm$core$Basics$never = function (_v0) {\n\tnever:\n\twhile (true) {\n\t\tvar nvr = _v0;\n\t\tvar $temp$_v0 = nvr;\n\t\t_v0 = $temp$_v0;\n\t\tcontinue never;\n\t}\n};\nvar $elm$core$Task$Perform = $elm$core$Basics$identity;\nvar $elm$core$Task$succeed = _Scheduler_succeed;\nvar $elm$core$Task$init = $elm$core$Task$succeed(0);\nvar $elm$core$List$foldrHelper = F4(\n\tfunction (fn, acc, ctr, ls) {\n\t\tif (!ls.b) {\n\t\t\treturn acc;\n\t\t} else {\n\t\t\tvar a = ls.a;\n\t\t\tvar r1 = ls.b;\n\t\t\tif (!r1.b) {\n\t\t\t\treturn A2(fn, a, acc);\n\t\t\t} else {\n\t\t\t\tvar b = r1.a;\n\t\t\t\tvar r2 = r1.b;\n\t\t\t\tif (!r2.b) {\n\t\t\t\t\treturn A2(\n\t\t\t\t\t\tfn,\n\t\t\t\t\t\ta,\n\t\t\t\t\t\tA2(fn, b, acc));\n\t\t\t\t} else {\n\t\t\t\t\tvar c = r2.a;\n\t\t\t\t\tvar r3 = r2.b;\n\t\t\t\t\tif (!r3.b) {\n\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\ta,\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\t\tb,\n\t\t\t\t\t\t\t\tA2(fn, c, acc)));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar d = r3.a;\n\t\t\t\t\t\tvar r4 = r3.b;\n\t\t\t\t\t\tvar res = (ctr > 500) ? A3(\n\t\t\t\t\t\t\t$elm$core$List$foldl,\n\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\tacc,\n\t\t\t\t\t\t\t$elm$core$List$reverse(r4)) : A4($elm$core$List$foldrHelper, fn, acc, ctr + 1, r4);\n\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\ta,\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\t\tb,\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\t\t\tc,\n\t\t\t\t\t\t\t\t\tA2(fn, d, res))));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$List$foldr = F3(\n\tfunction (fn, acc, ls) {\n\t\treturn A4($elm$core$List$foldrHelper, fn, acc, 0, ls);\n\t});\nvar $elm$core$List$map = F2(\n\tfunction (f, xs) {\n\t\treturn A3(\n\t\t\t$elm$core$List$foldr,\n\t\t\tF2(\n\t\t\t\tfunction (x, acc) {\n\t\t\t\t\treturn A2(\n\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\tf(x),\n\t\t\t\t\t\tacc);\n\t\t\t\t}),\n\t\t\t_List_Nil,\n\t\t\txs);\n\t});\nvar $elm$core$Task$andThen = _Scheduler_andThen;\nvar $elm$core$Task$map = F2(\n\tfunction (func, taskA) {\n\t\treturn A2(\n\t\t\t$elm$core$Task$andThen,\n\t\t\tfunction (a) {\n\t\t\t\treturn $elm$core$Task$succeed(\n\t\t\t\t\tfunc(a));\n\t\t\t},\n\t\t\ttaskA);\n\t});\nvar $elm$core$Task$map2 = F3(\n\tfunction (func, taskA, taskB) {\n\t\treturn A2(\n\t\t\t$elm$core$Task$andThen,\n\t\t\tfunction (a) {\n\t\t\t\treturn A2(\n\t\t\t\t\t$elm$core$Task$andThen,\n\t\t\t\t\tfunction (b) {\n\t\t\t\t\t\treturn $elm$core$Task$succeed(\n\t\t\t\t\t\t\tA2(func, a, b));\n\t\t\t\t\t},\n\t\t\t\t\ttaskB);\n\t\t\t},\n\t\t\ttaskA);\n\t});\nvar $elm$core$Task$sequence = function (tasks) {\n\treturn A3(\n\t\t$elm$core$List$foldr,\n\t\t$elm$core$Task$map2($elm$core$List$cons),\n\t\t$elm$core$Task$succeed(_List_Nil),\n\t\ttasks);\n};\nvar $elm$core$Platform$sendToApp = _Platform_sendToApp;\nvar $elm$core$Task$spawnCmd = F2(\n\tfunction (router, _v0) {\n\t\tvar task = _v0;\n\t\treturn _Scheduler_spawn(\n\t\t\tA2(\n\t\t\t\t$elm$core$Task$andThen,\n\t\t\t\t$elm$core$Platform$sendToApp(router),\n\t\t\t\ttask));\n\t});\nvar $elm$core$Task$onEffects = F3(\n\tfunction (router, commands, state) {\n\t\treturn A2(\n\t\t\t$elm$core$Task$map,\n\t\t\tfunction (_v0) {\n\t\t\t\treturn 0;\n\t\t\t},\n\t\t\t$elm$core$Task$sequence(\n\t\t\t\tA2(\n\t\t\t\t\t$elm$core$List$map,\n\t\t\t\t\t$elm$core$Task$spawnCmd(router),\n\t\t\t\t\tcommands)));\n\t});\nvar $elm$core$Task$onSelfMsg = F3(\n\tfunction (_v0, _v1, _v2) {\n\t\treturn $elm$core$Task$succeed(0);\n\t});\nvar $elm$core$Task$cmdMap = F2(\n\tfunction (tagger, _v0) {\n\t\tvar task = _v0;\n\t\treturn A2($elm$core$Task$map, tagger, task);\n\t});\n_Platform_effectManagers['Task'] = _Platform_createManager($elm$core$Task$init, $elm$core$Task$onEffects, $elm$core$Task$onSelfMsg, $elm$core$Task$cmdMap);\nvar $elm$core$Task$command = _Platform_leaf('Task');\nvar $elm$core$Task$perform = F2(\n\tfunction (toMessage, task) {\n\t\treturn $elm$core$Task$command(\n\t\t\tA2($elm$core$Task$map, toMessage, task));\n\t});\nvar $elm$browser$Browser$element = _Browser_element;\nvar $elm$json$Json$Decode$field = _Json_decodeField;\nvar $elm$json$Json$Decode$float = _Json_decodeFloat;\nvar $BrianHicks$elm_csv$Csv$Decode$NoFieldNames = {$: 0};\nvar $BrianHicks$elm_csv$Csv$Decode$ParsingError = function (a) {\n\treturn {$: 0, a: a};\n};\nvar $elm$core$Result$andThen = F2(\n\tfunction (callback, result) {\n\t\tif (!result.$) {\n\t\t\tvar value = result.a;\n\t\t\treturn callback(value);\n\t\t} else {\n\t\t\tvar msg = result.a;\n\t\t\treturn $elm$core$Result$Err(msg);\n\t\t}\n\t});\nvar $BrianHicks$elm_csv$Csv$Decode$DecodingErrors = function (a) {\n\treturn {$: 2, a: a};\n};\nvar $BrianHicks$elm_csv$Csv$Decode$OnlyColumn_ = {$: 2};\nvar $elm$core$Basics$composeL = F3(\n\tfunction (g, f, x) {\n\t\treturn g(\n\t\t\tf(x));\n\t});\nvar $BrianHicks$elm_csv$Csv$Decode$NoFieldNamesOnFirstRow = {$: 1};\nvar $elm$core$Dict$RBEmpty_elm_builtin = {$: -2};\nvar $elm$core$Dict$empty = $elm$core$Dict$RBEmpty_elm_builtin;\nvar $elm$core$Dict$Black = 1;\nvar $elm$core$Dict$RBNode_elm_builtin = F5(\n\tfunction (a, b, c, d, e) {\n\t\treturn {$: -1, a: a, b: b, c: c, d: d, e: e};\n\t});\nvar $elm$core$Dict$Red = 0;\nvar $elm$core$Dict$balance = F5(\n\tfunction (color, key, value, left, right) {\n\t\tif ((right.$ === -1) && (!right.a)) {\n\t\t\tvar _v1 = right.a;\n\t\t\tvar rK = right.b;\n\t\t\tvar rV = right.c;\n\t\t\tvar rLeft = right.d;\n\t\t\tvar rRight = right.e;\n\t\t\tif ((left.$ === -1) && (!left.a)) {\n\t\t\t\tvar _v3 = left.a;\n\t\t\t\tvar lK = left.b;\n\t\t\t\tvar lV = left.c;\n\t\t\t\tvar lLeft = left.d;\n\t\t\t\tvar lRight = left.e;\n\t\t\t\treturn A5(\n\t\t\t\t\t$elm$core$Dict$RBNode_elm_builtin,\n\t\t\t\t\t0,\n\t\t\t\t\tkey,\n\t\t\t\t\tvalue,\n\t\t\t\t\tA5($elm$core$Dict$RBNode_elm_builtin, 1, lK, lV, lLeft, lRight),\n\t\t\t\t\tA5($elm$core$Dict$RBNode_elm_builtin, 1, rK, rV, rLeft, rRight));\n\t\t\t} else {\n\t\t\t\treturn A5(\n\t\t\t\t\t$elm$core$Dict$RBNode_elm_builtin,\n\t\t\t\t\tcolor,\n\t\t\t\t\trK,\n\t\t\t\t\trV,\n\t\t\t\t\tA5($elm$core$Dict$RBNode_elm_builtin, 0, key, value, left, rLeft),\n\t\t\t\t\trRight);\n\t\t\t}\n\t\t} else {\n\t\t\tif ((((left.$ === -1) && (!left.a)) && (left.d.$ === -1)) && (!left.d.a)) {\n\t\t\t\tvar _v5 = left.a;\n\t\t\t\tvar lK = left.b;\n\t\t\t\tvar lV = left.c;\n\t\t\t\tvar _v6 = left.d;\n\t\t\t\tvar _v7 = _v6.a;\n\t\t\t\tvar llK = _v6.b;\n\t\t\t\tvar llV = _v6.c;\n\t\t\t\tvar llLeft = _v6.d;\n\t\t\t\tvar llRight = _v6.e;\n\t\t\t\tvar lRight = left.e;\n\t\t\t\treturn A5(\n\t\t\t\t\t$elm$core$Dict$RBNode_elm_builtin,\n\t\t\t\t\t0,\n\t\t\t\t\tlK,\n\t\t\t\t\tlV,\n\t\t\t\t\tA5($elm$core$Dict$RBNode_elm_builtin, 1, llK, llV, llLeft, llRight),\n\t\t\t\t\tA5($elm$core$Dict$RBNode_elm_builtin, 1, key, value, lRight, right));\n\t\t\t} else {\n\t\t\t\treturn A5($elm$core$Dict$RBNode_elm_builtin, color, key, value, left, right);\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$Basics$compare = _Utils_compare;\nvar $elm$core$Dict$insertHelp = F3(\n\tfunction (key, value, dict) {\n\t\tif (dict.$ === -2) {\n\t\t\treturn A5($elm$core$Dict$RBNode_elm_builtin, 0, key, value, $elm$core$Dict$RBEmpty_elm_builtin, $elm$core$Dict$RBEmpty_elm_builtin);\n\t\t} else {\n\t\t\tvar nColor = dict.a;\n\t\t\tvar nKey = dict.b;\n\t\t\tvar nValue = dict.c;\n\t\t\tvar nLeft = dict.d;\n\t\t\tvar nRight = dict.e;\n\t\t\tvar _v1 = A2($elm$core$Basics$compare, key, nKey);\n\t\t\tswitch (_v1) {\n\t\t\t\tcase 0:\n\t\t\t\t\treturn A5(\n\t\t\t\t\t\t$elm$core$Dict$balance,\n\t\t\t\t\t\tnColor,\n\t\t\t\t\t\tnKey,\n\t\t\t\t\t\tnValue,\n\t\t\t\t\t\tA3($elm$core$Dict$insertHelp, key, value, nLeft),\n\t\t\t\t\t\tnRight);\n\t\t\t\tcase 1:\n\t\t\t\t\treturn A5($elm$core$Dict$RBNode_elm_builtin, nColor, nKey, value, nLeft, nRight);\n\t\t\t\tdefault:\n\t\t\t\t\treturn A5(\n\t\t\t\t\t\t$elm$core$Dict$balance,\n\t\t\t\t\t\tnColor,\n\t\t\t\t\t\tnKey,\n\t\t\t\t\t\tnValue,\n\t\t\t\t\t\tnLeft,\n\t\t\t\t\t\tA3($elm$core$Dict$insertHelp, key, value, nRight));\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$Dict$insert = F3(\n\tfunction (key, value, dict) {\n\t\tvar _v0 = A3($elm$core$Dict$insertHelp, key, value, dict);\n\t\tif ((_v0.$ === -1) && (!_v0.a)) {\n\t\t\tvar _v1 = _v0.a;\n\t\t\tvar k = _v0.b;\n\t\t\tvar v = _v0.c;\n\t\t\tvar l = _v0.d;\n\t\t\tvar r = _v0.e;\n\t\t\treturn A5($elm$core$Dict$RBNode_elm_builtin, 1, k, v, l, r);\n\t\t} else {\n\t\t\tvar x = _v0;\n\t\t\treturn x;\n\t\t}\n\t});\nvar $elm$core$String$trim = _String_trim;\nvar $BrianHicks$elm_csv$Csv$Decode$getFieldNames = F2(\n\tfunction (headers, rows) {\n\t\tvar fromList = function (names) {\n\t\t\treturn A3(\n\t\t\t\t$elm$core$List$foldl,\n\t\t\t\tF2(\n\t\t\t\t\tfunction (name, _v2) {\n\t\t\t\t\t\tvar soFar = _v2.a;\n\t\t\t\t\t\tvar i = _v2.b;\n\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\tA3($elm$core$Dict$insert, name, i, soFar),\n\t\t\t\t\t\t\ti + 1);\n\t\t\t\t\t}),\n\t\t\t\t_Utils_Tuple2($elm$core$Dict$empty, 0),\n\t\t\t\tnames).a;\n\t\t};\n\t\tswitch (headers.$) {\n\t\t\tcase 0:\n\t\t\t\treturn $elm$core$Result$Ok(\n\t\t\t\t\t_Utils_Tuple3($elm$core$Dict$empty, 0, rows));\n\t\t\tcase 1:\n\t\t\t\tvar names = headers.a;\n\t\t\t\treturn $elm$core$Result$Ok(\n\t\t\t\t\t_Utils_Tuple3(\n\t\t\t\t\t\tfromList(names),\n\t\t\t\t\t\t0,\n\t\t\t\t\t\trows));\n\t\t\tdefault:\n\t\t\t\tif (!rows.b) {\n\t\t\t\t\treturn $elm$core$Result$Err($BrianHicks$elm_csv$Csv$Decode$NoFieldNamesOnFirstRow);\n\t\t\t\t} else {\n\t\t\t\t\tvar first = rows.a;\n\t\t\t\t\tvar rest = rows.b;\n\t\t\t\t\treturn $elm$core$Result$Ok(\n\t\t\t\t\t\t_Utils_Tuple3(\n\t\t\t\t\t\t\tfromList(\n\t\t\t\t\t\t\t\tA2($elm$core$List$map, $elm$core$String$trim, first)),\n\t\t\t\t\t\t\t1,\n\t\t\t\t\t\t\trest));\n\t\t\t\t}\n\t\t}\n\t});\nvar $elm$core$Result$map = F2(\n\tfunction (func, ra) {\n\t\tif (!ra.$) {\n\t\t\tvar a = ra.a;\n\t\t\treturn $elm$core$Result$Ok(\n\t\t\t\tfunc(a));\n\t\t} else {\n\t\t\tvar e = ra.a;\n\t\t\treturn $elm$core$Result$Err(e);\n\t\t}\n\t});\nvar $elm$core$Result$mapError = F2(\n\tfunction (f, result) {\n\t\tif (!result.$) {\n\t\t\tvar v = result.a;\n\t\t\treturn $elm$core$Result$Ok(v);\n\t\t} else {\n\t\t\tvar e = result.a;\n\t\t\treturn $elm$core$Result$Err(\n\t\t\t\tf(e));\n\t\t}\n\t});\nvar $BrianHicks$elm_csv$Csv$Decode$applyDecoder = F3(\n\tfunction (fieldNames, _v0, allRows) {\n\t\tvar decode = _v0;\n\t\tvar defaultLocation = $BrianHicks$elm_csv$Csv$Decode$OnlyColumn_;\n\t\treturn A2(\n\t\t\t$elm$core$Result$andThen,\n\t\t\tfunction (_v1) {\n\t\t\t\tvar resolvedNames = _v1.a;\n\t\t\t\tvar firstRowNumber = _v1.b;\n\t\t\t\tvar rows = _v1.c;\n\t\t\t\treturn A2(\n\t\t\t\t\t$elm$core$Result$mapError,\n\t\t\t\t\tA2($elm$core$Basics$composeL, $BrianHicks$elm_csv$Csv$Decode$DecodingErrors, $elm$core$List$reverse),\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$Result$map,\n\t\t\t\t\t\t$elm$core$List$reverse,\n\t\t\t\t\t\tA3(\n\t\t\t\t\t\t\t$elm$core$List$foldl,\n\t\t\t\t\t\t\tF2(\n\t\t\t\t\t\t\t\tfunction (row, _v2) {\n\t\t\t\t\t\t\t\t\tvar soFar = _v2.a;\n\t\t\t\t\t\t\t\t\tvar rowNum = _v2.b;\n\t\t\t\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\t\t\t\tfunction () {\n\t\t\t\t\t\t\t\t\t\t\tvar _v3 = A4(decode, defaultLocation, resolvedNames, rowNum, row);\n\t\t\t\t\t\t\t\t\t\t\tif (!_v3.$) {\n\t\t\t\t\t\t\t\t\t\t\t\tvar val = _v3.a;\n\t\t\t\t\t\t\t\t\t\t\t\tif (!soFar.$) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tvar values = soFar.a;\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn $elm$core$Result$Ok(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tA2($elm$core$List$cons, val, values));\n\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\tvar errs = soFar.a;\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn $elm$core$Result$Err(errs);\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\tvar err = _v3.a;\n\t\t\t\t\t\t\t\t\t\t\t\tif (!soFar.$) {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn $elm$core$Result$Err(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t[err]));\n\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\tvar errs = soFar.a;\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn $elm$core$Result$Err(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tA2($elm$core$List$cons, err, errs));\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}(),\n\t\t\t\t\t\t\t\t\t\trowNum + 1);\n\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t_Utils_Tuple2(\n\t\t\t\t\t\t\t\t$elm$core$Result$Ok(_List_Nil),\n\t\t\t\t\t\t\t\tfirstRowNumber),\n\t\t\t\t\t\t\trows).a));\n\t\t\t},\n\t\t\tA2($BrianHicks$elm_csv$Csv$Decode$getFieldNames, fieldNames, allRows));\n\t});\nvar $BrianHicks$elm_csv$Csv$Parser$AdditionalCharactersAfterClosingQuote = function (a) {\n\treturn {$: 1, a: a};\n};\nvar $BrianHicks$elm_csv$Csv$Parser$SourceEndedWithoutClosingQuote = function (a) {\n\treturn {$: 0, a: a};\n};\nvar $elm$core$String$cons = _String_cons;\nvar $elm$core$String$fromChar = function (_char) {\n\treturn A2($elm$core$String$cons, _char, '');\n};\nvar $elm$core$Basics$ge = _Utils_ge;\nvar $BrianHicks$elm_csv$Csv$Parser$parse = F2(\n\tfunction (config, source) {\n\t\tvar finalLength = $elm$core$String$length(source);\n\t\tvar parseQuotedField = F4(\n\t\t\tfunction (isFieldSeparator, soFar, startOffset, endOffset) {\n\t\t\t\tparseQuotedField:\n\t\t\t\twhile (true) {\n\t\t\t\t\tif ((endOffset - finalLength) >= 0) {\n\t\t\t\t\t\treturn $elm$core$Result$Err($BrianHicks$elm_csv$Csv$Parser$SourceEndedWithoutClosingQuote);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (A3($elm$core$String$slice, endOffset, endOffset + 1, source) === '\\\"') {\n\t\t\t\t\t\t\tvar segment = A3($elm$core$String$slice, startOffset, endOffset, source);\n\t\t\t\t\t\t\tif (((endOffset + 2) - finalLength) >= 0) {\n\t\t\t\t\t\t\t\treturn $elm$core$Result$Ok(\n\t\t\t\t\t\t\t\t\t_Utils_Tuple3(\n\t\t\t\t\t\t\t\t\t\t_Utils_ap(soFar, segment),\n\t\t\t\t\t\t\t\t\t\tendOffset + 1,\n\t\t\t\t\t\t\t\t\t\tfalse));\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tvar next = A3($elm$core$String$slice, endOffset + 1, endOffset + 2, source);\n\t\t\t\t\t\t\t\tif (next === '\\\"') {\n\t\t\t\t\t\t\t\t\tvar newPos = endOffset + 2;\n\t\t\t\t\t\t\t\t\tvar $temp$isFieldSeparator = isFieldSeparator,\n\t\t\t\t\t\t\t\t\t\t$temp$soFar = soFar + (segment + '\\\"'),\n\t\t\t\t\t\t\t\t\t\t$temp$startOffset = newPos,\n\t\t\t\t\t\t\t\t\t\t$temp$endOffset = newPos;\n\t\t\t\t\t\t\t\t\tisFieldSeparator = $temp$isFieldSeparator;\n\t\t\t\t\t\t\t\t\tsoFar = $temp$soFar;\n\t\t\t\t\t\t\t\t\tstartOffset = $temp$startOffset;\n\t\t\t\t\t\t\t\t\tendOffset = $temp$endOffset;\n\t\t\t\t\t\t\t\t\tcontinue parseQuotedField;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tif (isFieldSeparator(next)) {\n\t\t\t\t\t\t\t\t\t\treturn $elm$core$Result$Ok(\n\t\t\t\t\t\t\t\t\t\t\t_Utils_Tuple3(\n\t\t\t\t\t\t\t\t\t\t\t\t_Utils_ap(soFar, segment),\n\t\t\t\t\t\t\t\t\t\t\t\tendOffset + 2,\n\t\t\t\t\t\t\t\t\t\t\t\tfalse));\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tif (next === '\\n') {\n\t\t\t\t\t\t\t\t\t\t\treturn $elm$core$Result$Ok(\n\t\t\t\t\t\t\t\t\t\t\t\t_Utils_Tuple3(\n\t\t\t\t\t\t\t\t\t\t\t\t\t_Utils_ap(soFar, segment),\n\t\t\t\t\t\t\t\t\t\t\t\t\tendOffset + 2,\n\t\t\t\t\t\t\t\t\t\t\t\t\ttrue));\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\tif ((next === '\\u000D') && (A3($elm$core$String$slice, endOffset + 2, endOffset + 3, source) === '\\n')) {\n\t\t\t\t\t\t\t\t\t\t\t\treturn $elm$core$Result$Ok(\n\t\t\t\t\t\t\t\t\t\t\t\t\t_Utils_Tuple3(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t_Utils_ap(soFar, segment),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tendOffset + 3,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttrue));\n\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\treturn $elm$core$Result$Err($BrianHicks$elm_csv$Csv$Parser$AdditionalCharactersAfterClosingQuote);\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar $temp$isFieldSeparator = isFieldSeparator,\n\t\t\t\t\t\t\t\t$temp$soFar = soFar,\n\t\t\t\t\t\t\t\t$temp$startOffset = startOffset,\n\t\t\t\t\t\t\t\t$temp$endOffset = endOffset + 1;\n\t\t\t\t\t\t\tisFieldSeparator = $temp$isFieldSeparator;\n\t\t\t\t\t\t\tsoFar = $temp$soFar;\n\t\t\t\t\t\t\tstartOffset = $temp$startOffset;\n\t\t\t\t\t\t\tendOffset = $temp$endOffset;\n\t\t\t\t\t\t\tcontinue parseQuotedField;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\tvar parseComma = F4(\n\t\t\tfunction (row, rows, startOffset, endOffset) {\n\t\t\t\tparseComma:\n\t\t\t\twhile (true) {\n\t\t\t\t\tif ((endOffset - finalLength) >= 0) {\n\t\t\t\t\t\tvar finalField = A3($elm$core$String$slice, startOffset, endOffset, source);\n\t\t\t\t\t\treturn ((finalField === '') && _Utils_eq(row, _List_Nil)) ? $elm$core$Result$Ok(\n\t\t\t\t\t\t\t$elm$core$List$reverse(rows)) : $elm$core$Result$Ok(\n\t\t\t\t\t\t\t$elm$core$List$reverse(\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\t$elm$core$List$reverse(\n\t\t\t\t\t\t\t\t\t\tA2($elm$core$List$cons, finalField, row)),\n\t\t\t\t\t\t\t\t\trows)));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar first = A3($elm$core$String$slice, endOffset, endOffset + 1, source);\n\t\t\t\t\t\tif (first === ',') {\n\t\t\t\t\t\t\tvar newPos = endOffset + 1;\n\t\t\t\t\t\t\tvar $temp$row = A2(\n\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\tA3($elm$core$String$slice, startOffset, endOffset, source),\n\t\t\t\t\t\t\t\trow),\n\t\t\t\t\t\t\t\t$temp$rows = rows,\n\t\t\t\t\t\t\t\t$temp$startOffset = newPos,\n\t\t\t\t\t\t\t\t$temp$endOffset = newPos;\n\t\t\t\t\t\t\trow = $temp$row;\n\t\t\t\t\t\t\trows = $temp$rows;\n\t\t\t\t\t\t\tstartOffset = $temp$startOffset;\n\t\t\t\t\t\t\tendOffset = $temp$endOffset;\n\t\t\t\t\t\t\tcontinue parseComma;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (first === '\\n') {\n\t\t\t\t\t\t\t\tvar newPos = endOffset + 1;\n\t\t\t\t\t\t\t\tvar $temp$row = _List_Nil,\n\t\t\t\t\t\t\t\t\t$temp$rows = A2(\n\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\t$elm$core$List$reverse(\n\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\t\t\tA3($elm$core$String$slice, startOffset, endOffset, source),\n\t\t\t\t\t\t\t\t\t\t\trow)),\n\t\t\t\t\t\t\t\t\trows),\n\t\t\t\t\t\t\t\t\t$temp$startOffset = newPos,\n\t\t\t\t\t\t\t\t\t$temp$endOffset = newPos;\n\t\t\t\t\t\t\t\trow = $temp$row;\n\t\t\t\t\t\t\t\trows = $temp$rows;\n\t\t\t\t\t\t\t\tstartOffset = $temp$startOffset;\n\t\t\t\t\t\t\t\tendOffset = $temp$endOffset;\n\t\t\t\t\t\t\t\tcontinue parseComma;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tif ((first === '\\u000D') && (A3($elm$core$String$slice, endOffset + 1, endOffset + 2, source) === '\\n')) {\n\t\t\t\t\t\t\t\t\tvar newPos = endOffset + 2;\n\t\t\t\t\t\t\t\t\tvar $temp$row = _List_Nil,\n\t\t\t\t\t\t\t\t\t\t$temp$rows = A2(\n\t\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\t\t$elm$core$List$reverse(\n\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\t\t\t\tA3($elm$core$String$slice, startOffset, endOffset, source),\n\t\t\t\t\t\t\t\t\t\t\t\trow)),\n\t\t\t\t\t\t\t\t\t\trows),\n\t\t\t\t\t\t\t\t\t\t$temp$startOffset = newPos,\n\t\t\t\t\t\t\t\t\t\t$temp$endOffset = newPos;\n\t\t\t\t\t\t\t\t\trow = $temp$row;\n\t\t\t\t\t\t\t\t\trows = $temp$rows;\n\t\t\t\t\t\t\t\t\tstartOffset = $temp$startOffset;\n\t\t\t\t\t\t\t\t\tendOffset = $temp$endOffset;\n\t\t\t\t\t\t\t\t\tcontinue parseComma;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tif (first === '\\\"') {\n\t\t\t\t\t\t\t\t\t\tvar newPos = endOffset + 1;\n\t\t\t\t\t\t\t\t\t\tvar _v0 = A4(\n\t\t\t\t\t\t\t\t\t\t\tparseQuotedField,\n\t\t\t\t\t\t\t\t\t\t\tfunction (c) {\n\t\t\t\t\t\t\t\t\t\t\t\treturn c === ',';\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t'',\n\t\t\t\t\t\t\t\t\t\t\tnewPos,\n\t\t\t\t\t\t\t\t\t\t\tnewPos);\n\t\t\t\t\t\t\t\t\t\tif (!_v0.$) {\n\t\t\t\t\t\t\t\t\t\t\tvar _v1 = _v0.a;\n\t\t\t\t\t\t\t\t\t\t\tvar value = _v1.a;\n\t\t\t\t\t\t\t\t\t\t\tvar afterQuotedField = _v1.b;\n\t\t\t\t\t\t\t\t\t\t\tvar rowEnded = _v1.c;\n\t\t\t\t\t\t\t\t\t\t\tif (_Utils_cmp(afterQuotedField, finalLength) > -1) {\n\t\t\t\t\t\t\t\t\t\t\t\treturn $elm$core$Result$Ok(\n\t\t\t\t\t\t\t\t\t\t\t\t\t$elm$core$List$reverse(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$elm$core$List$reverse(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tA2($elm$core$List$cons, value, row)),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trows)));\n\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\tif (rowEnded) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tvar $temp$row = _List_Nil,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t$temp$rows = A2(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t$elm$core$List$reverse(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tA2($elm$core$List$cons, value, row)),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\trows),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t$temp$startOffset = afterQuotedField,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t$temp$endOffset = afterQuotedField;\n\t\t\t\t\t\t\t\t\t\t\t\t\trow = $temp$row;\n\t\t\t\t\t\t\t\t\t\t\t\t\trows = $temp$rows;\n\t\t\t\t\t\t\t\t\t\t\t\t\tstartOffset = $temp$startOffset;\n\t\t\t\t\t\t\t\t\t\t\t\t\tendOffset = $temp$endOffset;\n\t\t\t\t\t\t\t\t\t\t\t\t\tcontinue parseComma;\n\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\tvar $temp$row = A2($elm$core$List$cons, value, row),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t$temp$rows = rows,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t$temp$startOffset = afterQuotedField,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t$temp$endOffset = afterQuotedField;\n\t\t\t\t\t\t\t\t\t\t\t\t\trow = $temp$row;\n\t\t\t\t\t\t\t\t\t\t\t\t\trows = $temp$rows;\n\t\t\t\t\t\t\t\t\t\t\t\t\tstartOffset = $temp$startOffset;\n\t\t\t\t\t\t\t\t\t\t\t\t\tendOffset = $temp$endOffset;\n\t\t\t\t\t\t\t\t\t\t\t\t\tcontinue parseComma;\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\tvar problem = _v0.a;\n\t\t\t\t\t\t\t\t\t\t\treturn $elm$core$Result$Err(\n\t\t\t\t\t\t\t\t\t\t\t\tproblem(\n\t\t\t\t\t\t\t\t\t\t\t\t\t$elm$core$List$length(rows) + 1));\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tvar $temp$row = row,\n\t\t\t\t\t\t\t\t\t\t\t$temp$rows = rows,\n\t\t\t\t\t\t\t\t\t\t\t$temp$startOffset = startOffset,\n\t\t\t\t\t\t\t\t\t\t\t$temp$endOffset = endOffset + 1;\n\t\t\t\t\t\t\t\t\t\trow = $temp$row;\n\t\t\t\t\t\t\t\t\t\trows = $temp$rows;\n\t\t\t\t\t\t\t\t\t\tstartOffset = $temp$startOffset;\n\t\t\t\t\t\t\t\t\t\tendOffset = $temp$endOffset;\n\t\t\t\t\t\t\t\t\t\tcontinue parseComma;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\tvar parseHelp = F5(\n\t\t\tfunction (isFieldSeparator, row, rows, startOffset, endOffset) {\n\t\t\t\tparseHelp:\n\t\t\t\twhile (true) {\n\t\t\t\t\tif ((endOffset - finalLength) >= 0) {\n\t\t\t\t\t\tvar finalField = A3($elm$core$String$slice, startOffset, endOffset, source);\n\t\t\t\t\t\treturn ((finalField === '') && _Utils_eq(row, _List_Nil)) ? $elm$core$Result$Ok(\n\t\t\t\t\t\t\t$elm$core$List$reverse(rows)) : $elm$core$Result$Ok(\n\t\t\t\t\t\t\t$elm$core$List$reverse(\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\t$elm$core$List$reverse(\n\t\t\t\t\t\t\t\t\t\tA2($elm$core$List$cons, finalField, row)),\n\t\t\t\t\t\t\t\t\trows)));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar first = A3($elm$core$String$slice, endOffset, endOffset + 1, source);\n\t\t\t\t\t\tif (isFieldSeparator(first)) {\n\t\t\t\t\t\t\tvar newPos = endOffset + 1;\n\t\t\t\t\t\t\tvar $temp$isFieldSeparator = isFieldSeparator,\n\t\t\t\t\t\t\t\t$temp$row = A2(\n\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\tA3($elm$core$String$slice, startOffset, endOffset, source),\n\t\t\t\t\t\t\t\trow),\n\t\t\t\t\t\t\t\t$temp$rows = rows,\n\t\t\t\t\t\t\t\t$temp$startOffset = newPos,\n\t\t\t\t\t\t\t\t$temp$endOffset = newPos;\n\t\t\t\t\t\t\tisFieldSeparator = $temp$isFieldSeparator;\n\t\t\t\t\t\t\trow = $temp$row;\n\t\t\t\t\t\t\trows = $temp$rows;\n\t\t\t\t\t\t\tstartOffset = $temp$startOffset;\n\t\t\t\t\t\t\tendOffset = $temp$endOffset;\n\t\t\t\t\t\t\tcontinue parseHelp;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (first === '\\n') {\n\t\t\t\t\t\t\t\tvar newPos = endOffset + 1;\n\t\t\t\t\t\t\t\tvar $temp$isFieldSeparator = isFieldSeparator,\n\t\t\t\t\t\t\t\t\t$temp$row = _List_Nil,\n\t\t\t\t\t\t\t\t\t$temp$rows = A2(\n\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\t$elm$core$List$reverse(\n\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\t\t\tA3($elm$core$String$slice, startOffset, endOffset, source),\n\t\t\t\t\t\t\t\t\t\t\trow)),\n\t\t\t\t\t\t\t\t\trows),\n\t\t\t\t\t\t\t\t\t$temp$startOffset = newPos,\n\t\t\t\t\t\t\t\t\t$temp$endOffset = newPos;\n\t\t\t\t\t\t\t\tisFieldSeparator = $temp$isFieldSeparator;\n\t\t\t\t\t\t\t\trow = $temp$row;\n\t\t\t\t\t\t\t\trows = $temp$rows;\n\t\t\t\t\t\t\t\tstartOffset = $temp$startOffset;\n\t\t\t\t\t\t\t\tendOffset = $temp$endOffset;\n\t\t\t\t\t\t\t\tcontinue parseHelp;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tif ((first === '\\u000D') && (A3($elm$core$String$slice, endOffset + 1, endOffset + 2, source) === '\\n')) {\n\t\t\t\t\t\t\t\t\tvar newPos = endOffset + 2;\n\t\t\t\t\t\t\t\t\tvar $temp$isFieldSeparator = isFieldSeparator,\n\t\t\t\t\t\t\t\t\t\t$temp$row = _List_Nil,\n\t\t\t\t\t\t\t\t\t\t$temp$rows = A2(\n\t\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\t\t$elm$core$List$reverse(\n\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\t\t\t\tA3($elm$core$String$slice, startOffset, endOffset, source),\n\t\t\t\t\t\t\t\t\t\t\t\trow)),\n\t\t\t\t\t\t\t\t\t\trows),\n\t\t\t\t\t\t\t\t\t\t$temp$startOffset = newPos,\n\t\t\t\t\t\t\t\t\t\t$temp$endOffset = newPos;\n\t\t\t\t\t\t\t\t\tisFieldSeparator = $temp$isFieldSeparator;\n\t\t\t\t\t\t\t\t\trow = $temp$row;\n\t\t\t\t\t\t\t\t\trows = $temp$rows;\n\t\t\t\t\t\t\t\t\tstartOffset = $temp$startOffset;\n\t\t\t\t\t\t\t\t\tendOffset = $temp$endOffset;\n\t\t\t\t\t\t\t\t\tcontinue parseHelp;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tif (first === '\\\"') {\n\t\t\t\t\t\t\t\t\t\tvar newPos = endOffset + 1;\n\t\t\t\t\t\t\t\t\t\tvar _v2 = A4(parseQuotedField, isFieldSeparator, '', newPos, newPos);\n\t\t\t\t\t\t\t\t\t\tif (!_v2.$) {\n\t\t\t\t\t\t\t\t\t\t\tvar _v3 = _v2.a;\n\t\t\t\t\t\t\t\t\t\t\tvar value = _v3.a;\n\t\t\t\t\t\t\t\t\t\t\tvar afterQuotedField = _v3.b;\n\t\t\t\t\t\t\t\t\t\t\tvar rowEnded = _v3.c;\n\t\t\t\t\t\t\t\t\t\t\tif (_Utils_cmp(afterQuotedField, finalLength) > -1) {\n\t\t\t\t\t\t\t\t\t\t\t\treturn $elm$core$Result$Ok(\n\t\t\t\t\t\t\t\t\t\t\t\t\t$elm$core$List$reverse(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$elm$core$List$reverse(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tA2($elm$core$List$cons, value, row)),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trows)));\n\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\tif (rowEnded) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tvar $temp$isFieldSeparator = isFieldSeparator,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t$temp$row = _List_Nil,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t$temp$rows = A2(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t$elm$core$List$reverse(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tA2($elm$core$List$cons, value, row)),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\trows),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t$temp$startOffset = afterQuotedField,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t$temp$endOffset = afterQuotedField;\n\t\t\t\t\t\t\t\t\t\t\t\t\tisFieldSeparator = $temp$isFieldSeparator;\n\t\t\t\t\t\t\t\t\t\t\t\t\trow = $temp$row;\n\t\t\t\t\t\t\t\t\t\t\t\t\trows = $temp$rows;\n\t\t\t\t\t\t\t\t\t\t\t\t\tstartOffset = $temp$startOffset;\n\t\t\t\t\t\t\t\t\t\t\t\t\tendOffset = $temp$endOffset;\n\t\t\t\t\t\t\t\t\t\t\t\t\tcontinue parseHelp;\n\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\tvar $temp$isFieldSeparator = isFieldSeparator,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t$temp$row = A2($elm$core$List$cons, value, row),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t$temp$rows = rows,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t$temp$startOffset = afterQuotedField,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t$temp$endOffset = afterQuotedField;\n\t\t\t\t\t\t\t\t\t\t\t\t\tisFieldSeparator = $temp$isFieldSeparator;\n\t\t\t\t\t\t\t\t\t\t\t\t\trow = $temp$row;\n\t\t\t\t\t\t\t\t\t\t\t\t\trows = $temp$rows;\n\t\t\t\t\t\t\t\t\t\t\t\t\tstartOffset = $temp$startOffset;\n\t\t\t\t\t\t\t\t\t\t\t\t\tendOffset = $temp$endOffset;\n\t\t\t\t\t\t\t\t\t\t\t\t\tcontinue parseHelp;\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\tvar problem = _v2.a;\n\t\t\t\t\t\t\t\t\t\t\treturn $elm$core$Result$Err(\n\t\t\t\t\t\t\t\t\t\t\t\tproblem(\n\t\t\t\t\t\t\t\t\t\t\t\t\t$elm$core$List$length(rows) + 1));\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tvar $temp$isFieldSeparator = isFieldSeparator,\n\t\t\t\t\t\t\t\t\t\t\t$temp$row = row,\n\t\t\t\t\t\t\t\t\t\t\t$temp$rows = rows,\n\t\t\t\t\t\t\t\t\t\t\t$temp$startOffset = startOffset,\n\t\t\t\t\t\t\t\t\t\t\t$temp$endOffset = endOffset + 1;\n\t\t\t\t\t\t\t\t\t\tisFieldSeparator = $temp$isFieldSeparator;\n\t\t\t\t\t\t\t\t\t\trow = $temp$row;\n\t\t\t\t\t\t\t\t\t\trows = $temp$rows;\n\t\t\t\t\t\t\t\t\t\tstartOffset = $temp$startOffset;\n\t\t\t\t\t\t\t\t\t\tendOffset = $temp$endOffset;\n\t\t\t\t\t\t\t\t\t\tcontinue parseHelp;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\tvar parseSemicolon = F4(\n\t\t\tfunction (row, rows, startOffset, endOffset) {\n\t\t\t\tparseSemicolon:\n\t\t\t\twhile (true) {\n\t\t\t\t\tif ((endOffset - finalLength) >= 0) {\n\t\t\t\t\t\tvar finalField = A3($elm$core$String$slice, startOffset, endOffset, source);\n\t\t\t\t\t\treturn ((finalField === '') && _Utils_eq(row, _List_Nil)) ? $elm$core$Result$Ok(\n\t\t\t\t\t\t\t$elm$core$List$reverse(rows)) : $elm$core$Result$Ok(\n\t\t\t\t\t\t\t$elm$core$List$reverse(\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\t$elm$core$List$reverse(\n\t\t\t\t\t\t\t\t\t\tA2($elm$core$List$cons, finalField, row)),\n\t\t\t\t\t\t\t\t\trows)));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar first = A3($elm$core$String$slice, endOffset, endOffset + 1, source);\n\t\t\t\t\t\tif (first === ';') {\n\t\t\t\t\t\t\tvar newPos = endOffset + 1;\n\t\t\t\t\t\t\tvar $temp$row = A2(\n\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\tA3($elm$core$String$slice, startOffset, endOffset, source),\n\t\t\t\t\t\t\t\trow),\n\t\t\t\t\t\t\t\t$temp$rows = rows,\n\t\t\t\t\t\t\t\t$temp$startOffset = newPos,\n\t\t\t\t\t\t\t\t$temp$endOffset = newPos;\n\t\t\t\t\t\t\trow = $temp$row;\n\t\t\t\t\t\t\trows = $temp$rows;\n\t\t\t\t\t\t\tstartOffset = $temp$startOffset;\n\t\t\t\t\t\t\tendOffset = $temp$endOffset;\n\t\t\t\t\t\t\tcontinue parseSemicolon;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (first === '\\n') {\n\t\t\t\t\t\t\t\tvar newPos = endOffset + 1;\n\t\t\t\t\t\t\t\tvar $temp$row = _List_Nil,\n\t\t\t\t\t\t\t\t\t$temp$rows = A2(\n\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\t$elm$core$List$reverse(\n\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\t\t\tA3($elm$core$String$slice, startOffset, endOffset, source),\n\t\t\t\t\t\t\t\t\t\t\trow)),\n\t\t\t\t\t\t\t\t\trows),\n\t\t\t\t\t\t\t\t\t$temp$startOffset = newPos,\n\t\t\t\t\t\t\t\t\t$temp$endOffset = newPos;\n\t\t\t\t\t\t\t\trow = $temp$row;\n\t\t\t\t\t\t\t\trows = $temp$rows;\n\t\t\t\t\t\t\t\tstartOffset = $temp$startOffset;\n\t\t\t\t\t\t\t\tendOffset = $temp$endOffset;\n\t\t\t\t\t\t\t\tcontinue parseSemicolon;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tif ((first === '\\u000D') && (A3($elm$core$String$slice, endOffset + 1, endOffset + 2, source) === '\\n')) {\n\t\t\t\t\t\t\t\t\tvar newPos = endOffset + 2;\n\t\t\t\t\t\t\t\t\tvar $temp$row = _List_Nil,\n\t\t\t\t\t\t\t\t\t\t$temp$rows = A2(\n\t\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\t\t$elm$core$List$reverse(\n\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\t\t\t\tA3($elm$core$String$slice, startOffset, endOffset, source),\n\t\t\t\t\t\t\t\t\t\t\t\trow)),\n\t\t\t\t\t\t\t\t\t\trows),\n\t\t\t\t\t\t\t\t\t\t$temp$startOffset = newPos,\n\t\t\t\t\t\t\t\t\t\t$temp$endOffset = newPos;\n\t\t\t\t\t\t\t\t\trow = $temp$row;\n\t\t\t\t\t\t\t\t\trows = $temp$rows;\n\t\t\t\t\t\t\t\t\tstartOffset = $temp$startOffset;\n\t\t\t\t\t\t\t\t\tendOffset = $temp$endOffset;\n\t\t\t\t\t\t\t\t\tcontinue parseSemicolon;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tif (first === '\\\"') {\n\t\t\t\t\t\t\t\t\t\tvar newPos = endOffset + 1;\n\t\t\t\t\t\t\t\t\t\tvar _v4 = A4(\n\t\t\t\t\t\t\t\t\t\t\tparseQuotedField,\n\t\t\t\t\t\t\t\t\t\t\tfunction (c) {\n\t\t\t\t\t\t\t\t\t\t\t\treturn c === ';';\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t'',\n\t\t\t\t\t\t\t\t\t\t\tnewPos,\n\t\t\t\t\t\t\t\t\t\t\tnewPos);\n\t\t\t\t\t\t\t\t\t\tif (!_v4.$) {\n\t\t\t\t\t\t\t\t\t\t\tvar _v5 = _v4.a;\n\t\t\t\t\t\t\t\t\t\t\tvar value = _v5.a;\n\t\t\t\t\t\t\t\t\t\t\tvar afterQuotedField = _v5.b;\n\t\t\t\t\t\t\t\t\t\t\tvar rowEnded = _v5.c;\n\t\t\t\t\t\t\t\t\t\t\tif (_Utils_cmp(afterQuotedField, finalLength) > -1) {\n\t\t\t\t\t\t\t\t\t\t\t\treturn $elm$core$Result$Ok(\n\t\t\t\t\t\t\t\t\t\t\t\t\t$elm$core$List$reverse(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$elm$core$List$reverse(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tA2($elm$core$List$cons, value, row)),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trows)));\n\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\tif (rowEnded) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tvar $temp$row = _List_Nil,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t$temp$rows = A2(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t$elm$core$List$reverse(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tA2($elm$core$List$cons, value, row)),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\trows),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t$temp$startOffset = afterQuotedField,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t$temp$endOffset = afterQuotedField;\n\t\t\t\t\t\t\t\t\t\t\t\t\trow = $temp$row;\n\t\t\t\t\t\t\t\t\t\t\t\t\trows = $temp$rows;\n\t\t\t\t\t\t\t\t\t\t\t\t\tstartOffset = $temp$startOffset;\n\t\t\t\t\t\t\t\t\t\t\t\t\tendOffset = $temp$endOffset;\n\t\t\t\t\t\t\t\t\t\t\t\t\tcontinue parseSemicolon;\n\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\tvar $temp$row = A2($elm$core$List$cons, value, row),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t$temp$rows = rows,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t$temp$startOffset = afterQuotedField,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t$temp$endOffset = afterQuotedField;\n\t\t\t\t\t\t\t\t\t\t\t\t\trow = $temp$row;\n\t\t\t\t\t\t\t\t\t\t\t\t\trows = $temp$rows;\n\t\t\t\t\t\t\t\t\t\t\t\t\tstartOffset = $temp$startOffset;\n\t\t\t\t\t\t\t\t\t\t\t\t\tendOffset = $temp$endOffset;\n\t\t\t\t\t\t\t\t\t\t\t\t\tcontinue parseSemicolon;\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\tvar problem = _v4.a;\n\t\t\t\t\t\t\t\t\t\t\treturn $elm$core$Result$Err(\n\t\t\t\t\t\t\t\t\t\t\t\tproblem(\n\t\t\t\t\t\t\t\t\t\t\t\t\t$elm$core$List$length(rows) + 1));\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tvar $temp$row = row,\n\t\t\t\t\t\t\t\t\t\t\t$temp$rows = rows,\n\t\t\t\t\t\t\t\t\t\t\t$temp$startOffset = startOffset,\n\t\t\t\t\t\t\t\t\t\t\t$temp$endOffset = endOffset + 1;\n\t\t\t\t\t\t\t\t\t\trow = $temp$row;\n\t\t\t\t\t\t\t\t\t\trows = $temp$rows;\n\t\t\t\t\t\t\t\t\t\tstartOffset = $temp$startOffset;\n\t\t\t\t\t\t\t\t\t\tendOffset = $temp$endOffset;\n\t\t\t\t\t\t\t\t\t\tcontinue parseSemicolon;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\tvar fieldSeparator = $elm$core$String$fromChar(config.aR);\n\t\treturn $elm$core$String$isEmpty(source) ? $elm$core$Result$Ok(_List_Nil) : ((config.aR === ',') ? A4(parseComma, _List_Nil, _List_Nil, 0, 0) : ((config.aR === ';') ? A4(parseSemicolon, _List_Nil, _List_Nil, 0, 0) : A5(\n\t\t\tparseHelp,\n\t\t\tfunction (s) {\n\t\t\t\treturn _Utils_eq(s, fieldSeparator);\n\t\t\t},\n\t\t\t_List_Nil,\n\t\t\t_List_Nil,\n\t\t\t0,\n\t\t\t0)));\n\t});\nvar $BrianHicks$elm_csv$Csv$Decode$decodeCustom = F4(\n\tfunction (config, fieldNames, decoder, source) {\n\t\treturn A2(\n\t\t\t$elm$core$Result$andThen,\n\t\t\tA2($BrianHicks$elm_csv$Csv$Decode$applyDecoder, fieldNames, decoder),\n\t\t\tA2(\n\t\t\t\t$elm$core$Result$mapError,\n\t\t\t\t$BrianHicks$elm_csv$Csv$Decode$ParsingError,\n\t\t\t\tA2($BrianHicks$elm_csv$Csv$Parser$parse, config, source)));\n\t});\nvar $BrianHicks$elm_csv$Csv$Decode$decodeCsv = $BrianHicks$elm_csv$Csv$Decode$decodeCustom(\n\t{aR: ','});\nvar $author$project$Main$ConstituencyVoting = F2(\n\tfunction (name, percentage) {\n\t\treturn {K: name, as: percentage};\n\t});\nvar $BrianHicks$elm_csv$Csv$Decode$Decoder = $elm$core$Basics$identity;\nvar $BrianHicks$elm_csv$Csv$Decode$andThen = F2(\n\tfunction (next, _v0) {\n\t\tvar first = _v0;\n\t\treturn F4(\n\t\t\tfunction (location, fieldNames, rowNum, row) {\n\t\t\t\treturn A2(\n\t\t\t\t\t$elm$core$Result$andThen,\n\t\t\t\t\tfunction (nextValue) {\n\t\t\t\t\t\tvar _v1 = next(nextValue);\n\t\t\t\t\t\tvar _final = _v1;\n\t\t\t\t\t\treturn A4(_final, location, fieldNames, rowNum, row);\n\t\t\t\t\t},\n\t\t\t\t\tA4(first, location, fieldNames, rowNum, row));\n\t\t\t});\n\t});\nvar $BrianHicks$elm_csv$Csv$Decode$Column_ = function (a) {\n\treturn {$: 0, a: a};\n};\nvar $BrianHicks$elm_csv$Csv$Decode$column = F2(\n\tfunction (col, _v0) {\n\t\tvar decoder = _v0;\n\t\treturn F3(\n\t\t\tfunction (_v1, fieldNames, row) {\n\t\t\t\treturn A3(\n\t\t\t\t\tdecoder,\n\t\t\t\t\t$BrianHicks$elm_csv$Csv$Decode$Column_(col),\n\t\t\t\t\tfieldNames,\n\t\t\t\t\trow);\n\t\t\t});\n\t});\nvar $BrianHicks$elm_csv$Csv$Decode$Failure = function (a) {\n\treturn {$: 6, a: a};\n};\nvar $BrianHicks$elm_csv$Csv$Decode$Column = function (a) {\n\treturn {$: 0, a: a};\n};\nvar $BrianHicks$elm_csv$Csv$Decode$Field = F2(\n\tfunction (a, b) {\n\t\treturn {$: 1, a: a, b: b};\n\t});\nvar $BrianHicks$elm_csv$Csv$Decode$OnlyColumn = {$: 2};\nvar $elm$core$Dict$get = F2(\n\tfunction (targetKey, dict) {\n\t\tget:\n\t\twhile (true) {\n\t\t\tif (dict.$ === -2) {\n\t\t\t\treturn $elm$core$Maybe$Nothing;\n\t\t\t} else {\n\t\t\t\tvar key = dict.b;\n\t\t\t\tvar value = dict.c;\n\t\t\t\tvar left = dict.d;\n\t\t\t\tvar right = dict.e;\n\t\t\t\tvar _v1 = A2($elm$core$Basics$compare, targetKey, key);\n\t\t\t\tswitch (_v1) {\n\t\t\t\t\tcase 0:\n\t\t\t\t\t\tvar $temp$targetKey = targetKey,\n\t\t\t\t\t\t\t$temp$dict = left;\n\t\t\t\t\t\ttargetKey = $temp$targetKey;\n\t\t\t\t\t\tdict = $temp$dict;\n\t\t\t\t\t\tcontinue get;\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\treturn $elm$core$Maybe$Just(value);\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tvar $temp$targetKey = targetKey,\n\t\t\t\t\t\t\t$temp$dict = right;\n\t\t\t\t\t\ttargetKey = $temp$targetKey;\n\t\t\t\t\t\tdict = $temp$dict;\n\t\t\t\t\t\tcontinue get;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar $BrianHicks$elm_csv$Csv$Decode$locationToColumn = F2(\n\tfunction (fieldNames, location) {\n\t\tswitch (location.$) {\n\t\t\tcase 0:\n\t\t\t\tvar i = location.a;\n\t\t\t\treturn $BrianHicks$elm_csv$Csv$Decode$Column(i);\n\t\t\tcase 1:\n\t\t\t\tvar name = location.a;\n\t\t\t\treturn A2(\n\t\t\t\t\t$BrianHicks$elm_csv$Csv$Decode$Field,\n\t\t\t\t\tname,\n\t\t\t\t\tA2($elm$core$Dict$get, name, fieldNames));\n\t\t\tdefault:\n\t\t\t\treturn $BrianHicks$elm_csv$Csv$Decode$OnlyColumn;\n\t\t}\n\t});\nvar $BrianHicks$elm_csv$Csv$Decode$fail = function (message) {\n\treturn F4(\n\t\tfunction (location, fieldNames, rowNum, _v0) {\n\t\t\treturn $elm$core$Result$Err(\n\t\t\t\t{\n\t\t\t\t\tq: A2($BrianHicks$elm_csv$Csv$Decode$locationToColumn, fieldNames, location),\n\t\t\t\t\ti: _List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t$BrianHicks$elm_csv$Csv$Decode$Failure(message)\n\t\t\t\t\t\t]),\n\t\t\t\t\tt: rowNum\n\t\t\t\t});\n\t\t});\n};\nvar $BrianHicks$elm_csv$Csv$Decode$map = F2(\n\tfunction (transform, _v0) {\n\t\tvar decoder = _v0;\n\t\treturn F4(\n\t\t\tfunction (location, fieldNames, rowNum, row) {\n\t\t\t\treturn A2(\n\t\t\t\t\t$elm$core$Result$map,\n\t\t\t\t\ttransform,\n\t\t\t\t\tA4(decoder, location, fieldNames, rowNum, row));\n\t\t\t});\n\t});\nvar $elm$core$Result$map2 = F3(\n\tfunction (func, ra, rb) {\n\t\tif (ra.$ === 1) {\n\t\t\tvar x = ra.a;\n\t\t\treturn $elm$core$Result$Err(x);\n\t\t} else {\n\t\t\tvar a = ra.a;\n\t\t\tif (rb.$ === 1) {\n\t\t\t\tvar x = rb.a;\n\t\t\t\treturn $elm$core$Result$Err(x);\n\t\t\t} else {\n\t\t\t\tvar b = rb.a;\n\t\t\t\treturn $elm$core$Result$Ok(\n\t\t\t\t\tA2(func, a, b));\n\t\t\t}\n\t\t}\n\t});\nvar $BrianHicks$elm_csv$Csv$Decode$map2 = F3(\n\tfunction (transform, _v0, _v1) {\n\t\tvar decodeA = _v0;\n\t\tvar decodeB = _v1;\n\t\treturn F4(\n\t\t\tfunction (location, fieldNames, rowNum, row) {\n\t\t\t\treturn A3(\n\t\t\t\t\t$elm$core$Result$map2,\n\t\t\t\t\ttransform,\n\t\t\t\t\tA4(decodeA, location, fieldNames, rowNum, row),\n\t\t\t\t\tA4(decodeB, location, fieldNames, rowNum, row));\n\t\t\t});\n\t});\nvar $elm$core$String$replace = F3(\n\tfunction (before, after, string) {\n\t\treturn A2(\n\t\t\t$elm$core$String$join,\n\t\t\tafter,\n\t\t\tA2($elm$core$String$split, before, string));\n\t});\nvar $BrianHicks$elm_csv$Csv$Decode$ColumnNotFound = function (a) {\n\treturn {$: 0, a: a};\n};\nvar $BrianHicks$elm_csv$Csv$Decode$ExpectedOneColumn = function (a) {\n\treturn {$: 3, a: a};\n};\nvar $BrianHicks$elm_csv$Csv$Decode$FieldNotFound = function (a) {\n\treturn {$: 1, a: a};\n};\nvar $BrianHicks$elm_csv$Csv$Decode$FieldNotProvided = function (a) {\n\treturn {$: 2, a: a};\n};\nvar $elm$core$List$drop = F2(\n\tfunction (n, list) {\n\t\tdrop:\n\t\twhile (true) {\n\t\t\tif (n <= 0) {\n\t\t\t\treturn list;\n\t\t\t} else {\n\t\t\t\tif (!list.b) {\n\t\t\t\t\treturn list;\n\t\t\t\t} else {\n\t\t\t\t\tvar x = list.a;\n\t\t\t\t\tvar xs = list.b;\n\t\t\t\t\tvar $temp$n = n - 1,\n\t\t\t\t\t\t$temp$list = xs;\n\t\t\t\t\tn = $temp$n;\n\t\t\t\t\tlist = $temp$list;\n\t\t\t\t\tcontinue drop;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$List$head = function (list) {\n\tif (list.b) {\n\t\tvar x = list.a;\n\t\tvar xs = list.b;\n\t\treturn $elm$core$Maybe$Just(x);\n\t} else {\n\t\treturn $elm$core$Maybe$Nothing;\n\t}\n};\nvar $BrianHicks$elm_csv$Csv$Decode$fromString = function (convert) {\n\treturn F4(\n\t\tfunction (location, fieldNames, rowNum, row) {\n\t\t\tswitch (location.$) {\n\t\t\t\tcase 0:\n\t\t\t\t\tvar colNum = location.a;\n\t\t\t\t\tvar _v1 = $elm$core$List$head(\n\t\t\t\t\t\tA2($elm$core$List$drop, colNum, row));\n\t\t\t\t\tif (!_v1.$) {\n\t\t\t\t\t\tvar value = _v1.a;\n\t\t\t\t\t\tvar _v2 = convert(value);\n\t\t\t\t\t\tif (!_v2.$) {\n\t\t\t\t\t\t\tvar converted = _v2.a;\n\t\t\t\t\t\t\treturn $elm$core$Result$Ok(converted);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar problem = _v2.a;\n\t\t\t\t\t\t\treturn $elm$core$Result$Err(\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tq: A2($BrianHicks$elm_csv$Csv$Decode$locationToColumn, fieldNames, location),\n\t\t\t\t\t\t\t\t\ti: _List_fromArray(\n\t\t\t\t\t\t\t\t\t\t[problem]),\n\t\t\t\t\t\t\t\t\tt: rowNum\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn $elm$core$Result$Err(\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tq: A2($BrianHicks$elm_csv$Csv$Decode$locationToColumn, fieldNames, location),\n\t\t\t\t\t\t\t\ti: _List_fromArray(\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t$BrianHicks$elm_csv$Csv$Decode$ColumnNotFound(colNum)\n\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\tt: rowNum\n\t\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\tcase 1:\n\t\t\t\t\tvar name = location.a;\n\t\t\t\t\tvar _v3 = A2($elm$core$Dict$get, name, fieldNames);\n\t\t\t\t\tif (!_v3.$) {\n\t\t\t\t\t\tvar colNum = _v3.a;\n\t\t\t\t\t\tvar _v4 = $elm$core$List$head(\n\t\t\t\t\t\t\tA2($elm$core$List$drop, colNum, row));\n\t\t\t\t\t\tif (!_v4.$) {\n\t\t\t\t\t\t\tvar value = _v4.a;\n\t\t\t\t\t\t\tvar _v5 = convert(value);\n\t\t\t\t\t\t\tif (!_v5.$) {\n\t\t\t\t\t\t\t\tvar converted = _v5.a;\n\t\t\t\t\t\t\t\treturn $elm$core$Result$Ok(converted);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tvar problem = _v5.a;\n\t\t\t\t\t\t\t\treturn $elm$core$Result$Err(\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tq: A2($BrianHicks$elm_csv$Csv$Decode$locationToColumn, fieldNames, location),\n\t\t\t\t\t\t\t\t\t\ti: _List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t[problem]),\n\t\t\t\t\t\t\t\t\t\tt: rowNum\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn $elm$core$Result$Err(\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tq: A2($BrianHicks$elm_csv$Csv$Decode$locationToColumn, fieldNames, location),\n\t\t\t\t\t\t\t\t\ti: _List_fromArray(\n\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t$BrianHicks$elm_csv$Csv$Decode$FieldNotFound(name)\n\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\tt: rowNum\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn $elm$core$Result$Err(\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tq: A2($BrianHicks$elm_csv$Csv$Decode$locationToColumn, fieldNames, location),\n\t\t\t\t\t\t\t\ti: _List_fromArray(\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t$BrianHicks$elm_csv$Csv$Decode$FieldNotProvided(name)\n\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\tt: rowNum\n\t\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tif (!row.b) {\n\t\t\t\t\t\treturn $elm$core$Result$Err(\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tq: A2($BrianHicks$elm_csv$Csv$Decode$locationToColumn, fieldNames, location),\n\t\t\t\t\t\t\t\ti: _List_fromArray(\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t$BrianHicks$elm_csv$Csv$Decode$ColumnNotFound(0)\n\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\tt: rowNum\n\t\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (!row.b.b) {\n\t\t\t\t\t\t\tvar only = row.a;\n\t\t\t\t\t\t\tvar _v7 = convert(only);\n\t\t\t\t\t\t\tif (!_v7.$) {\n\t\t\t\t\t\t\t\tvar converted = _v7.a;\n\t\t\t\t\t\t\t\treturn $elm$core$Result$Ok(converted);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tvar problem = _v7.a;\n\t\t\t\t\t\t\t\treturn $elm$core$Result$Err(\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tq: A2($BrianHicks$elm_csv$Csv$Decode$locationToColumn, fieldNames, location),\n\t\t\t\t\t\t\t\t\t\ti: _List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t[problem]),\n\t\t\t\t\t\t\t\t\t\tt: rowNum\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn $elm$core$Result$Err(\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tq: A2($BrianHicks$elm_csv$Csv$Decode$locationToColumn, fieldNames, location),\n\t\t\t\t\t\t\t\t\ti: _List_fromArray(\n\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t$BrianHicks$elm_csv$Csv$Decode$ExpectedOneColumn(\n\t\t\t\t\t\t\t\t\t\t\t$elm$core$List$length(row))\n\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\tt: rowNum\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t}\n\t\t});\n};\nvar $BrianHicks$elm_csv$Csv$Decode$string = $BrianHicks$elm_csv$Csv$Decode$fromString($elm$core$Result$Ok);\nvar $BrianHicks$elm_csv$Csv$Decode$succeed = function (value) {\n\treturn F4(\n\t\tfunction (_v0, _v1, _v2, _v3) {\n\t\t\treturn $elm$core$Result$Ok(value);\n\t\t});\n};\nvar $author$project$Main$decoder = A3(\n\t$BrianHicks$elm_csv$Csv$Decode$map2,\n\t$author$project$Main$ConstituencyVoting,\n\tA2(\n\t\t$BrianHicks$elm_csv$Csv$Decode$column,\n\t\t0,\n\t\tA2(\n\t\t\t$BrianHicks$elm_csv$Csv$Decode$map,\n\t\t\tfunction (str) {\n\t\t\t\treturn A3(\n\t\t\t\t\t$elm$core$String$replace,\n\t\t\t\t\t' BC',\n\t\t\t\t\t'',\n\t\t\t\t\tA3($elm$core$String$replace, ' CC', '', str));\n\t\t\t},\n\t\t\t$BrianHicks$elm_csv$Csv$Decode$string)),\n\tA2(\n\t\t$BrianHicks$elm_csv$Csv$Decode$column,\n\t\t8,\n\t\tA2(\n\t\t\t$BrianHicks$elm_csv$Csv$Decode$andThen,\n\t\t\tfunction (str) {\n\t\t\t\tvar _v0 = $elm$core$String$toInt(\n\t\t\t\t\tA3($elm$core$String$replace, '%', '', str));\n\t\t\t\tif (!_v0.$) {\n\t\t\t\t\tvar _int = _v0.a;\n\t\t\t\t\treturn $BrianHicks$elm_csv$Csv$Decode$succeed(_int);\n\t\t\t\t} else {\n\t\t\t\t\treturn $BrianHicks$elm_csv$Csv$Decode$fail('Failed to decode int from ' + str);\n\t\t\t\t}\n\t\t\t},\n\t\t\t$BrianHicks$elm_csv$Csv$Decode$string)));\nvar $elm$core$Dict$fromList = function (assocs) {\n\treturn A3(\n\t\t$elm$core$List$foldl,\n\t\tF2(\n\t\t\tfunction (_v0, dict) {\n\t\t\t\tvar key = _v0.a;\n\t\t\t\tvar value = _v0.b;\n\t\t\t\treturn A3($elm$core$Dict$insert, key, value, dict);\n\t\t\t}),\n\t\t$elm$core$Dict$empty,\n\t\tassocs);\n};\nvar $elm$core$Platform$Cmd$batch = _Platform_batch;\nvar $elm$core$Platform$Cmd$none = $elm$core$Platform$Cmd$batch(_List_Nil);\nvar $elm$core$Result$withDefault = F2(\n\tfunction (def, result) {\n\t\tif (!result.$) {\n\t\t\tvar a = result.a;\n\t\t\treturn a;\n\t\t} else {\n\t\t\treturn def;\n\t\t}\n\t});\nvar $author$project$Main$init = function (flags) {\n\tvar votingData = $elm$core$Dict$fromList(\n\t\tA2(\n\t\t\t$elm$core$List$map,\n\t\t\tfunction (entry) {\n\t\t\t\treturn _Utils_Tuple2(entry.K, entry);\n\t\t\t},\n\t\t\tA2(\n\t\t\t\t$elm$core$Result$withDefault,\n\t\t\t\t_List_Nil,\n\t\t\t\tA3($BrianHicks$elm_csv$Csv$Decode$decodeCsv, $BrianHicks$elm_csv$Csv$Decode$NoFieldNames, $author$project$Main$decoder, flags.aa))));\n\treturn _Utils_Tuple2(\n\t\t{R: $elm$core$Maybe$Nothing, A: flags.A, ab: votingData},\n\t\t$elm$core$Platform$Cmd$none);\n};\nvar $elm$json$Json$Decode$list = _Json_decodeList;\nvar $elm$core$Platform$Sub$batch = _Platform_batch;\nvar $elm$core$Platform$Sub$none = $elm$core$Platform$Sub$batch(_List_Nil);\nvar $elm$json$Json$Decode$string = _Json_decodeString;\nvar $author$project$Main$update = F2(\n\tfunction (msg, model) {\n\t\tvar name = msg;\n\t\treturn _Utils_Tuple2(\n\t\t\t_Utils_update(\n\t\t\t\tmodel,\n\t\t\t\t{\n\t\t\t\t\tR: $elm$core$Maybe$Just(name)\n\t\t\t\t}),\n\t\t\t$elm$core$Platform$Cmd$none);\n\t});\nvar $author$project$Main$Over = $elm$core$Basics$identity;\nvar $elm$core$List$append = F2(\n\tfunction (xs, ys) {\n\t\tif (!ys.b) {\n\t\t\treturn xs;\n\t\t} else {\n\t\t\treturn A3($elm$core$List$foldr, $elm$core$List$cons, ys, xs);\n\t\t}\n\t});\nvar $elm$core$List$concat = function (lists) {\n\treturn A3($elm$core$List$foldr, $elm$core$List$append, _List_Nil, lists);\n};\nvar $elm$core$String$concat = function (strings) {\n\treturn A2($elm$core$String$join, '', strings);\n};\nvar $elm$svg$Svg$Attributes$d = _VirtualDom_attribute('d');\nvar $elm$html$Html$div = _VirtualDom_node('div');\nvar $elm$svg$Svg$Attributes$fill = _VirtualDom_attribute('fill');\nvar $elm$core$String$fromFloat = _String_fromNumber;\nvar $elm$svg$Svg$Attributes$height = _VirtualDom_attribute('height');\nvar $elm$virtual_dom$VirtualDom$Normal = function (a) {\n\treturn {$: 0, a: a};\n};\nvar $elm$virtual_dom$VirtualDom$on = _VirtualDom_on;\nvar $elm$html$Html$Events$on = F2(\n\tfunction (event, decoder) {\n\t\treturn A2(\n\t\t\t$elm$virtual_dom$VirtualDom$on,\n\t\t\tevent,\n\t\t\t$elm$virtual_dom$VirtualDom$Normal(decoder));\n\t});\nvar $elm$html$Html$Events$onMouseOver = function (msg) {\n\treturn A2(\n\t\t$elm$html$Html$Events$on,\n\t\t'mouseover',\n\t\t$elm$json$Json$Decode$succeed(msg));\n};\nvar $elm$svg$Svg$trustedNode = _VirtualDom_nodeNS('http://www.w3.org/2000/svg');\nvar $elm$svg$Svg$path = $elm$svg$Svg$trustedNode('path');\nvar $elm$core$Basics$round = _Basics_round;\nvar $elm$svg$Svg$svg = $elm$svg$Svg$trustedNode('svg');\nvar $elm$virtual_dom$VirtualDom$text = _VirtualDom_text;\nvar $elm$html$Html$text = $elm$virtual_dom$VirtualDom$text;\nvar $elm$core$String$fromList = _String_fromList;\nvar $elm$core$Basics$negate = function (n) {\n\treturn -n;\n};\nvar $elm$core$Basics$modBy = _Basics_modBy;\nvar $rtfeldman$elm_hex$Hex$unsafeToDigit = function (num) {\n\tunsafeToDigit:\n\twhile (true) {\n\t\tswitch (num) {\n\t\t\tcase 0:\n\t\t\t\treturn '0';\n\t\t\tcase 1:\n\t\t\t\treturn '1';\n\t\t\tcase 2:\n\t\t\t\treturn '2';\n\t\t\tcase 3:\n\t\t\t\treturn '3';\n\t\t\tcase 4:\n\t\t\t\treturn '4';\n\t\t\tcase 5:\n\t\t\t\treturn '5';\n\t\t\tcase 6:\n\t\t\t\treturn '6';\n\t\t\tcase 7:\n\t\t\t\treturn '7';\n\t\t\tcase 8:\n\t\t\t\treturn '8';\n\t\t\tcase 9:\n\t\t\t\treturn '9';\n\t\t\tcase 10:\n\t\t\t\treturn 'a';\n\t\t\tcase 11:\n\t\t\t\treturn 'b';\n\t\t\tcase 12:\n\t\t\t\treturn 'c';\n\t\t\tcase 13:\n\t\t\t\treturn 'd';\n\t\t\tcase 14:\n\t\t\t\treturn 'e';\n\t\t\tcase 15:\n\t\t\t\treturn 'f';\n\t\t\tdefault:\n\t\t\t\tvar $temp$num = num;\n\t\t\t\tnum = $temp$num;\n\t\t\t\tcontinue unsafeToDigit;\n\t\t}\n\t}\n};\nvar $rtfeldman$elm_hex$Hex$unsafePositiveToDigits = F2(\n\tfunction (digits, num) {\n\t\tunsafePositiveToDigits:\n\t\twhile (true) {\n\t\t\tif (num < 16) {\n\t\t\t\treturn A2(\n\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t$rtfeldman$elm_hex$Hex$unsafeToDigit(num),\n\t\t\t\t\tdigits);\n\t\t\t} else {\n\t\t\t\tvar $temp$digits = A2(\n\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t$rtfeldman$elm_hex$Hex$unsafeToDigit(\n\t\t\t\t\t\tA2($elm$core$Basics$modBy, 16, num)),\n\t\t\t\t\tdigits),\n\t\t\t\t\t$temp$num = (num / 16) | 0;\n\t\t\t\tdigits = $temp$digits;\n\t\t\t\tnum = $temp$num;\n\t\t\t\tcontinue unsafePositiveToDigits;\n\t\t\t}\n\t\t}\n\t});\nvar $rtfeldman$elm_hex$Hex$toString = function (num) {\n\treturn $elm$core$String$fromList(\n\t\t(num < 0) ? A2(\n\t\t\t$elm$core$List$cons,\n\t\t\t'-',\n\t\t\tA2($rtfeldman$elm_hex$Hex$unsafePositiveToDigits, _List_Nil, -num)) : A2($rtfeldman$elm_hex$Hex$unsafePositiveToDigits, _List_Nil, num));\n};\nvar $elm$svg$Svg$Attributes$viewBox = _VirtualDom_attribute('viewBox');\nvar $elm$svg$Svg$Attributes$width = _VirtualDom_attribute('width');\nvar $elm$core$Maybe$withDefault = F2(\n\tfunction (_default, maybe) {\n\t\tif (!maybe.$) {\n\t\t\tvar value = maybe.a;\n\t\t\treturn value;\n\t\t} else {\n\t\t\treturn _default;\n\t\t}\n\t});\nvar $author$project$Main$view = function (model) {\n\tvar pathFrom = function (list) {\n\t\treturn 'M ' + ($elm$core$String$concat(\n\t\t\tA2(\n\t\t\t\t$elm$core$List$map,\n\t\t\t\tfunction (coord) {\n\t\t\t\t\treturn $elm$core$String$fromFloat(coord.ac) + (',' + ($elm$core$String$fromFloat((61.0 - coord.ad) * 1.65) + ' '));\n\t\t\t\t},\n\t\t\t\tlist)) + 'Z');\n\t};\n\tvar nextLevel = F2(\n\t\tfunction (name, list) {\n\t\t\tvar _v0 = A2($elm$core$Dict$get, name, model.ab);\n\t\t\tif (!_v0.$) {\n\t\t\t\tvar data = _v0.a;\n\t\t\t\tvar colour = function (hex) {\n\t\t\t\t\treturn '#' + (hex + '0000');\n\t\t\t\t}(\n\t\t\t\t\t$rtfeldman$elm_hex$Hex$toString(\n\t\t\t\t\t\t$elm$core$Basics$round((data.as / 100.0) * 255)));\n\t\t\t\treturn A2(\n\t\t\t\t\t$elm$svg$Svg$path,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$d(\n\t\t\t\t\t\t\tpathFrom(list)),\n\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$fill(colour),\n\t\t\t\t\t\t\t$elm$html$Html$Events$onMouseOver(name)\n\t\t\t\t\t\t]),\n\t\t\t\t\t_List_Nil);\n\t\t\t} else {\n\t\t\t\treturn A2(\n\t\t\t\t\t$elm$svg$Svg$path,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$d(\n\t\t\t\t\t\t\tpathFrom(list)),\n\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$fill('#112233'),\n\t\t\t\t\t\t\t$elm$html$Html$Events$onMouseOver(name)\n\t\t\t\t\t\t]),\n\t\t\t\t\t_List_Nil);\n\t\t\t}\n\t\t});\n\tvar topLevel = F2(\n\t\tfunction (name, list) {\n\t\t\treturn A2(\n\t\t\t\t$elm$core$List$map,\n\t\t\t\tnextLevel(name),\n\t\t\t\tlist);\n\t\t});\n\tvar paths = $elm$core$List$concat(\n\t\t$elm$core$List$concat(\n\t\t\tA2(\n\t\t\t\t$elm$core$List$map,\n\t\t\t\tfunction (feature) {\n\t\t\t\t\treturn A2(\n\t\t\t\t\t\t$elm$core$List$map,\n\t\t\t\t\t\ttopLevel(feature.K),\n\t\t\t\t\t\tfeature.U);\n\t\t\t\t},\n\t\t\t\tmodel.A)));\n\treturn A2(\n\t\t$elm$html$Html$div,\n\t\t_List_Nil,\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\tA2(\n\t\t\t\t$elm$html$Html$div,\n\t\t\t\t_List_Nil,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\t$elm$html$Html$text(\n\t\t\t\t\t\tA2($elm$core$Maybe$withDefault, '', model.R))\n\t\t\t\t\t])),\n\t\t\t\tA2(\n\t\t\t\t$elm$svg$Svg$svg,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\t$elm$svg$Svg$Attributes$viewBox('-8 -1 12 20'),\n\t\t\t\t\t\t$elm$svg$Svg$Attributes$width('720'),\n\t\t\t\t\t\t$elm$svg$Svg$Attributes$height('780')\n\t\t\t\t\t]),\n\t\t\t\tpaths)\n\t\t\t]));\n};\nvar $author$project$Main$main = $elm$browser$Browser$element(\n\t{\n\t\taU: $author$project$Main$init,\n\t\ta_: $elm$core$Basics$always($elm$core$Platform$Sub$none),\n\t\ta0: $author$project$Main$update,\n\t\ta1: $author$project$Main$view\n\t});\n_Platform_export({'Main':{'init':$author$project$Main$main(\n\tA2(\n\t\t$elm$json$Json$Decode$andThen,\n\t\tfunction (votesCsv) {\n\t\t\treturn A2(\n\t\t\t\t$elm$json$Json$Decode$andThen,\n\t\t\t\tfunction (features) {\n\t\t\t\t\treturn $elm$json$Json$Decode$succeed(\n\t\t\t\t\t\t{A: features, aa: votesCsv});\n\t\t\t\t},\n\t\t\t\tA2(\n\t\t\t\t\t$elm$json$Json$Decode$field,\n\t\t\t\t\t'features',\n\t\t\t\t\t$elm$json$Json$Decode$list(\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$elm$json$Json$Decode$andThen,\n\t\t\t\t\t\t\tfunction (name) {\n\t\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\t\t$elm$json$Json$Decode$andThen,\n\t\t\t\t\t\t\t\t\tfunction (coordinates) {\n\t\t\t\t\t\t\t\t\t\treturn $elm$json$Json$Decode$succeed(\n\t\t\t\t\t\t\t\t\t\t\t{U: coordinates, K: name});\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t$elm$json$Json$Decode$field,\n\t\t\t\t\t\t\t\t\t\t'coordinates',\n\t\t\t\t\t\t\t\t\t\t$elm$json$Json$Decode$list(\n\t\t\t\t\t\t\t\t\t\t\t$elm$json$Json$Decode$list(\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$json$Json$Decode$list(\n\t\t\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t$elm$json$Json$Decode$andThen,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfunction (y) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$elm$json$Json$Decode$andThen,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfunction (x) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn $elm$json$Json$Decode$succeed(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{ac: x, ad: y});\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tA2($elm$json$Json$Decode$field, 'x', $elm$json$Json$Decode$float));\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tA2($elm$json$Json$Decode$field, 'y', $elm$json$Json$Decode$float)))))));\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tA2($elm$json$Json$Decode$field, 'name', $elm$json$Json$Decode$string)))));\n\t\t},\n\t\tA2($elm$json$Json$Decode$field, 'votesCsv', $elm$json$Json$Decode$string)))(0)}});}(this));","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export default `Altrincham and Sale West BC,35.99%,25.10%,39%,,54763,20173,14417,26%\r\nAshton-under-Lyne BC,27.28%,43.70%,29%,,38579,14282,10015,26%\r\nBlackley and Broughton BC,32.56%,47.20%,20%,,38618,9486,19646,51%\r\nBolton North East BC,29.24%,35.50%,35%,,43556,19381,4794,11%\r\nBolton South East BC,31.11%,41.30%,28%,,40604,13919,12766,31%\r\nBolton West CC,37.24%,32.60%,30%,,49298,18401,12496,25%\r\nBury North BC,31.48%,31.90%,37%,,46841,21556,3729,8%\r\nBury South BC,29.32%,33.10%,38%,,50274,21633,7008,14%\r\nCheadle BC,34.45%,25.10%,40%,,55903,23359,9185,16%\r\nDenton and Reddish BC,29.16%,41.70%,29%,,38588,13143,12302,32%\r\nHazel Grove CC,34.09%,32.40%,34%,,44269,17170,9929,22%\r\nHeywood and Middleton CC,25.51%,40.80%,34%,,47488,19791,7906,17%\r\nLeigh CC,27.47%,39.10%,33%,,46979,19302,8375,18%\r\nMakerfield CC,26.90%,40.30%,33%,,44259,15215,13829,31%\r\n\"Manchester Central BC\",39.92%,43.10%,17%,,52289,7735,36819,70%\r\n\"Manchester, Gorton BC\",45.25%,41.50%,13%,,44692,4245,36202,81%\r\n\"Manchester, Withington BC\",46.91%,30.50%,23%,,53176,7998,37180,70%\r\nOldham East and Saddleworth CC,27.85%,36.00%,36%,,46160,18590,8980,19%\r\nOldham West and Royton CC,33.67%,39.20%,27%,,44434,13453,17528,39%\r\nRochdale CC,31.02%,39.90%,29%,,47447,14808,17831,38%\r\nSalford and Eccles BC,35.01%,38.40%,27%,,50632,12429,25774,51%\r\nStalybridge and Hyde CC,25.85%,41.82%,32%,,42512,16080,10352,24%\r\nStockport BC,33.18%,35.90%,31%,,41715,11657,18401,44%\r\nStretford and Urmston BC,41.72%,30.60%,28%,,50067,13779,22509,45%\r\nWigan CC,27.74%,40.50%,32%,,45042,14315,16412,36%\r\nWorsley and Eccles South CC,27.18%,40.60%,32%,,44707,17228,10251,23%\r\nWythenshawe and Sale East BC,31.26%,41.20%,28%,,44884,13460,17964,40%\r\n,,,,,1247776,412588,422600,34%\r\n`;\r\n","import \"./main.css\";\nimport { Elm } from \"./Main.elm\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport votingData from \"./votes.js\";\n\nconst geojson = require(\"./uk-constituencies-2015.json\");\n\nconst features = geojson.features.map((feature) => {\n    if (feature.geometry.type === \"Polygon\") {\n        return {\n            name: feature.properties.pcon15nm,\n            coordinates: [\n                feature.geometry.coordinates.map((loop) =>\n                    loop.map((coord) => ({ x: coord[0], y: coord[1] }))\n                ),\n            ],\n        };\n    } else {\n        return {\n            name: feature.properties.pcon15nm,\n            coordinates: feature.geometry.coordinates.map((loop) =>\n                loop.map((innerLoop) => innerLoop.map((coord) => ({ x: coord[0], y: coord[1] })))\n            ),\n        };\n    }\n});\n\nconsole.log(features);\n\nElm.Main.init({\n    node: document.getElementById(\"root\"),\n    flags: { features, votesCsv: votingData },\n});\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}